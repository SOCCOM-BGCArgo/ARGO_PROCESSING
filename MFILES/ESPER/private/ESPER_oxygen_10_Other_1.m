function [Y,Xf,Af] = ESPER_oxygen_10_Other_1(X,~,~)
%ESPER_OXYGEN_10_OTHER_1 neural network simulation function.
%
% Auto-generated by MATLAB, 15-Feb-2021 18:30:47.
% 
% [Y] = ESPER_oxygen_10_Other_1(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 7xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-0.999999984769129;-0.999998793562952;-77.961;0;29.715;-0.04979;-2.02];
x1_step1.gain = [1.00003298043486;1.00000060321889;0.0138606862425759;0.000266418009857466;0.193068829037552;0.568038194888224;0.00819772922900357];
x1_step1.ymin = -1;

% Layer 1
b1 = [2.5908102119242490957;-2.9145165241520381016;2.2131660701143061054;0.44811587220551118982;-0.2133069181267335801;4.5590729225274548853;-0.52447709980910106609;-1.7402867945465800847;1.1834131294649270494;0.41072163440291142855;1.135814315965800736;-3.1149316621055471721;2.1261807664653118444;-0.6150235851866563408;-1.304881976281617062;1.0065787921448767772;0.79073126997425480234;0.94699887857946762892;1.9401568534449216141;-2.4580490646722124026;-3.5689083974697064505;1.1614484739340373842;1.8180818336019524128;0.48865645204594981843;-3.7177636651028072023;-1.050077203453070096;-0.1957072960407259532;-2.4917723080225799848;1.5979994492039719667;-0.56106214355750649858;1.1201152059233030478;1.0285034604766984945;1.5862309834789605212;3.0424875507399731234;2.8687617504481730535;-0.61359411892357795804;15.420050045326965105;-0.15416658218927206669;6.2179980955240514717;-1.1803103041744380519];
IW1_1 = [-0.68837008210341521508 -2.2145793506113680138 -0.024923439469046879818 1.2175362674598055879 0.79936337186974681934 0.31691206100538066304 -0.2216558226305248569;-0.14977139798241148605 1.0834604078716900677 -3.3175369175007554112 -1.0638238855512420766 4.4764047269248754546 -1.6889994027928783016 -0.73200468051536127234;-1.0176387722768103217 -0.51348317140008792325 -0.38758321527016525998 0.14213646007192434761 -5.2127353163433376437 -1.2506926001363547485 -0.21790557026469897783;-0.0063362197396422256443 0.15234123620333048232 -0.86736183097696628597 0.30729859036135370731 1.0814073415973426417 -0.38086598628977319514 -0.34661654714134509936;5.1680061932199246044 0.7354610251738662452 6.9130075985020296159 -6.3332501752933199057 4.5932617296682982655 1.9373298342644242886 -5.8850192908390210889;-13.48835620367123056 3.4273211014611342229 -6.8327815327761509678 -0.3965436243960845375 29.699910303800471922 -3.200051241857508888 8.6337004672728916432;0.15291995034762434491 0.26862271297569190187 -0.89717402990109029748 -0.39006272203616682015 -4.2562506669236030987 -0.62862338132741502061 2.5408776699369588492;-1.4737220697165533956 2.8316558190425116237 -3.7157117486400070838 0.20673805933345870689 -4.3312459089345640706 6.6487195868910333729 -7.4129840883172297694;-0.15049356015425602306 -0.14075695470694693512 1.5604424667756187084 0.76634666791203831515 4.320018117761054377 -0.001256047769171482302 -1.355089252893848073;0.091324667571054132797 0.28408134193549533508 -1.9949335316290033315 1.0846389431504694922 -3.9546969671542897551 -0.079640550084757372185 1.0209316505664611796;0.22101426449897748627 0.2131151065644721343 -1.1122517088462562374 -0.28923845734896336257 6.9104617223608251209 -2.1449210999472789752 2.516527435917190747;-3.0315274072007900585 2.6214204671719874007 0.75246158551532515979 -0.58398455383758296477 -2.2469027894850803762 1.4987975210435064977 -1.8008681138355702167;0.018109434645839056488 -0.14681678926205990465 -0.41439799958579665029 1.5227047176991261868 -5.9514062188789331742 -1.7358892119683355659 0.60121848747096751087;0.4236354228665751287 0.71730212390976511028 -0.98895806483508330587 -0.3972333801598341152 0.17574103628042761494 1.1791703777631747929 -0.53700511255385141585;-0.19093595175010052989 1.1790716437749282353 -1.2893743386824616515 -1.6453751509761100902 -2.4738607024748078267 1.4015549562293565522 0.91372844399620012368;0.046184766343294415825 0.20550382519842388951 -0.42050026543499424703 -0.10185999281602528543 2.0220920824136214833 -1.1145888969668653612 0.47586454033081060366;-0.037884888165606436794 0.14409290694937121335 -1.6610776055897156223 0.97373755384371285526 1.1467632820200117649 -0.35149571613298447037 -0.43431756224638307096;-0.13421975948661996059 1.4665878698789767132 -3.7675885215877173984 0.38208609633866863486 0.40918411153129818913 2.8137055760815514738 -0.91626601244704986016;-0.85710609012918781424 -0.15273486770428726378 -0.56966983757792732934 0.12784634181943463349 -4.56648097389633012 -1.0434158861531823703 0.17952346312708047926;0.34489310449014515259 -0.26003004295743131769 3.2065805633376660566 -4.635439314319523163 -18.217295232910320379 -4.6230637441779984798 3.975483971166357211;0.88298172696295418316 -0.27805430667575647963 0.20384483194631927705 -2.4717398427443213471 1.8886041648177012142 -1.49250266400513798 0.28060655933276468232;1.9534651278547812137 -2.8099464933150257728 4.0304623603302331958 -0.14976447494055877829 -9.6387882717280177758 -7.1776437327253601595 7.9493888178181810744;-1.2707270888095207884 -0.96314027391750545171 -0.79932474840374556635 -0.96477766721209035072 4.2067479537099305986 -3.4334083255317207062 -1.2922511517776753553;-1.2562196820681557075 -0.076438592092761575847 1.00049479586406731 0.79511879832577281313 2.5682875906009723366 -1.1374561512301941679 -0.48107033819582434298;-1.3150620070721867894 -0.69769598499741170006 0.088689908942132605896 -0.13209064896848288218 -5.2422487885947628428 2.5581773978768000966 -0.74852539059082068285;-1.0629857120870980225 -0.19603698536443006639 -1.2959633093788351932 0.61982570899096200989 0.79061361906967508872 -0.065760657825130713894 -2.2669342173451565436;-0.074888499079259193691 -0.28473548382404567647 1.0718882794868245245 -0.31402301614294675369 0.46486673267884098815 -0.70688857433162655131 0.10231359205451527605;-1.0926690237879441714 -0.78394601062087398979 1.0381367074543088602 -1.2916611472311514408 0.75202551876195566916 -2.599410082864700211 1.2751296128647016115;0.085719893782833303519 0.1817405211331004633 -0.34693661351221061206 -1.3540861889639064231 1.0052688594619485496 -3.8083696826088377918 1.1321848331412647237;0.40028844225162274473 0.63289194120106562202 -0.84931964296599782305 -0.40413058215486091784 0.11015627299857459753 1.0579058182177651926 -0.55002883086038700799;-0.1059451893804991135 0.96935687132545567124 -0.3783832821439319094 -0.099225330322708207853 7.3092963627224536438 0.46470664677303180623 0.69103737485513372363;2.4058656941352545289 -0.91931103118405288477 3.0511272928074411048 0.2343247940991774747 15.661006218164652992 5.6404472513673917788 -2.9401121267141889781;0.69776276400981085413 0.22865604903834302331 -1.1573590263264494915 -1.6860627470023825669 -0.043929946687674817363 -3.0529374001888891499 0.85586307560632080005;1.2260016869427901032 1.4118252699892548385 0.31697018279418553988 0.065793690038246796514 2.9279993721685042551 -2.7007882418620483556 0.085964240550330070501;0.85708874209489527285 0.079912190620115702844 -0.53628687383185125181 1.6740787150641125436 -4.3106240873268149016 0.11120524536344003619 -0.20815093627707562107;-0.17571074536912914543 -0.0052359408803090328258 -1.6480469862009430315 -1.1924107040137665869 -5.2670676782262235704 -0.99415236394529338249 1.0044317859042073415;6.7042833606877296759 -6.9402608887349428457 5.7840994914124532755 0.68620852373597640561 1.5853244524434253471 5.9690110538168887899 6.0974738186697239328;0.0042995078878597086519 0.17406294820885412356 -0.98434201529037257394 0.62953804561681636631 -5.6704489868492728988 -1.3114882714308431222 -0.040000770057721998785;-5.7937174278466567756 2.6552010848943354837 -0.48420822253217260522 0.019375140915646502093 -4.0239462044283245135 -4.1079918396718220208 -1.687509917125917358;-0.82418574109954256812 -0.44428396201550957034 1.225373701679297378 0.13246110901152449713 4.8137209763516510819 1.9636786623109949712 -2.8582483970565388809];

% Layer 2
b2 = 0.84588570316259670268;
LW2_1 = [-0.21317383444167742335 -0.19777337816519544034 2.6731705314864928624 -4.8682292308942205494 -0.012095414588717025295 -0.021223054313438384499 -0.42078403747447484795 -0.055531678574545120797 -1.0871617372894677445 -0.58683497873914847176 0.2787139985343807802 -0.042956891116179576895 0.6112900711953581645 -4.7965181317773044611 -0.13267403318901638265 2.2559220050575374827 1.4157747541757332854 -0.17768333270127256718 -2.7774953593104343419 -0.10214846103014026124 0.45361812066780526909 -0.065239321546284007036 0.099805626491032334302 0.3854603451434273631 0.36213630059024215502 0.32313301995217458273 -2.0145582670988861906 0.40303059541569313806 -0.3088199876835400759 5.422708896641572629 -0.21599883747071574325 0.051539043198409885405 0.43437727957162175496 0.21643651909565000957 -0.74845887942984945518 -0.62857027491666239705 -0.039442686254015361935 0.92937956410112199102 0.074588974723136081124 0.22145119175568481196];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 0.00454442172233583;
y1_step1.xoffset = 0.3;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
