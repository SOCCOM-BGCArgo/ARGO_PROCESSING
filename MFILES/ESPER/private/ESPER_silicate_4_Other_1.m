function [Y,Xf,Af] = ESPER_silicate_4_Other_1(X,~,~)
%ESPER_SILICATE_4_OTHER_1 neural network simulation function.
%
% Auto-generated by MATLAB, 15-Feb-2021 18:30:39.
% 
% [Y] = ESPER_silicate_4_Other_1(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 7xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-0.999999984769129;-0.999998793562952;-77.961;0;29.715;-2.18999082656054;-0.9];
x1_step1.gain = [1.00003298043486;1.00000060321889;0.0138606862425759;0.000266418009857466;0.193068829037552;0.0582073296585987;0.0415843642790311];
x1_step1.ymin = -1;

% Layer 1
b1 = [16.267391009093081777;1.7084417380351357707;0.13655871198154392876;-0.41561969226996248183;-1.8152177246853842263;-19.063421661055937051;-1.5229438289859402733;-1.9370362201188811024;2.8356196198558656363;52.606076296261193193;1.6923855332825188391;3.5849830366708146379;-10.203253914939795166;0.28919167695227621095;7.8935173788358268254;2.8858667492385938758;-7.6858748675245101012;-1.2598740945720072748;3.4151847841604845435;11.146317345810988542;2.1119623006048637848;0.610326687305708937;3.2746996492430202608;11.314623436745018026;-4.9918468133326214797;5.5424296451483963111;1.1915226588101088812;-4.1306789274300035331;0.10957712341689383739;-1.3662588836635216616;-1.6412876167764824942;0.33012317963190029868;-1.8736220892635830904;-0.9551773382896954212;6.3266792082707530298;0.12727319000087858325;17.312268680871678583;-0.26822780933120832225;10.479595887716175895;-0.30535648669440107472];
IW1_1 = [0.27875798682526603534 0.15283388353905832946 -0.29032861436738943706 -0.94341561531736584101 -13.757140401260576468 18.234909135795380308 -1.352707193547874498;-0.31736003725551964472 -6.9192570537792468244 0.8797085925465863987 1.6706214755010297957 -1.2419105162487176219 1.5811552734020464239 -1.1383120118977239077;-0.1134114347668757905 -0.55291823554593733103 3.4691644224816262643 0.20396614898124251769 2.4508428040950747118 -1.2400689164472367132 -0.56090536087262010678;0.071529591722263252684 0.18043800080318669887 0.644721911502064704 -1.1581665085509698088 2.7200504931738556103 0.02436851230569906171 1.6282016338525584498;-18.625757323456713976 16.732668410126287029 18.951888501475593785 -24.55381472579388813 -44.798857250983971312 -2.5335125521652046565 -12.667515031931790404;0.22413374923210518941 0.12057208326062544834 -3.2258599754779102575 -0.85890390400961280637 7.5045806083350967697 -22.213531994308631567 -3.0701076025494455912;-1.0438664991628787693 -1.072262862424241181 -2.3439701521342328761 -0.83523890595565564166 -3.44890021913439071 1.3481722440744623448 1.1813032235589582264;-1.3612115489452634165 -1.2195577133944139891 0.57100789223029579933 -3.9840525167951530428 2.5376265908764179535 2.1164757853826667855 0.12677947339018225126;-0.29080715757635400287 -0.11333414499132052344 3.3509104955380384361 0.53948626748308914358 0.22503210851756438871 0.096972955600335669635 -0.12277125703757506281;-4.6124380513352756239 -12.776497094887734107 24.716015605667497113 13.334352434151513833 36.397168076117687008 8.1725391622514216294 3.9569280522323229121;7.7484897744676670683 4.6563820874498178526 4.3741466736970329166 -0.92009536295854987831 8.8341095234087472221 -12.54448981694114984 -3.3571904742680684919;-1.3565271474674520658 1.142912833163523656 -4.6424934998535789532 1.3890203835428420742 -16.128277373674677619 11.092814745236974971 3.3931287443899034173;6.346928571208592551 24.786650491804845586 3.1302833130220433233 2.6576976311743782944 24.006145537534568035 7.1391024820658959271 4.6104381095249413747;-0.16988524758907250223 -0.10402422296289350057 1.2142204897334540892 -0.035978340648142814739 3.3132519931825403781 0.29325424526395010849 0.59000903592187259328;2.9903455586571272562 4.7817663966668630948 2.1922484617298314546 -0.54379477710309054306 -2.1560214097292389468 1.997671171663156775 3.5517504770760179866;4.0241355201976736211 2.7676969142023919446 2.4384365286412310603 1.9451902182149327647 4.8144179198907668393 -6.3652595267764393583 -1.849848352567019738;-2.922300088477575386 -4.7283649075632174785 -1.9784579153594108458 0.65190094175573543023 2.1822373641981527292 -2.0914720306120173632 -3.6221616468456012683;0.55368796696433553173 0.46669089665909668785 -1.2598227827271917256 -1.5458231189276148143 -2.9070275657575068706 2.1535790886175618652 2.6471774223213575539;1.8959633360162237992 -5.0037012015571775692 8.2609511786874456618 4.4426238625074088162 -7.492043734802018129 -0.62897945037191049789 -0.37697044321597239502;1.607812229144085947 -3.1526656873795371183 1.1628419169427677282 11.002123143934511518 3.225112578190329149 -10.204879157762555053 -2.117292725096217243;1.0142175243176725363 -0.77339899585588622877 -19.622368254227207984 0.96657900118378958787 16.935053255605069467 -5.2272777021790695073 7.7424612070294749344;0.67429991308371139969 0.5528103191948681161 0.15364720950624963236 0.82519503408919292475 0.68259194692765112755 -0.17100001078057378012 -1.2229927743016191233;-0.37988024767464023679 -0.54663221485704327485 5.0832027898020006873 0.35294328945229797023 -13.430140122327232532 10.147878858819554537 -0.062761868827084496547;0.97824345098913900731 -4.8855024967800240177 -26.879553955541400256 2.6463936471430860031 -18.839370498652353803 -13.420174423217327231 2.8808484495515660484;0.92837292098450430178 -1.5942616010672925331 1.5995995644508296252 -2.6665279349985877566 -7.7143899138507538993 -2.7461115157389550667 0.49908486378305766396;-6.9531520104262636295 6.4316424105773775111 -7.1747883127674372261 11.03549830216490335 9.5332318413756667042 5.9492006510887884829 -19.801466474630494474;0.084137694478938235276 -0.11846137229162589932 -0.35925890703213259059 -1.123995858491658284 -4.074500296612312944 1.3336124695641138338 -1.3915262126205594218;-3.1536910756571887582 15.424424618381985752 -20.388584988278172005 -3.2521540803382009699 -15.948212883711905263 -3.3443684038442857975 -13.484841052998470801;0.43539553880848547163 -0.2525227932067621861 0.35913089100998379921 -0.53494413220605308013 -0.92009230509394424047 1.1880137921929585509 1.7853890673436492165;-1.7001784313647165803 1.7190095436344559054 1.4360146576395846907 -3.8467651048322024643 -2.1510193984814813817 -0.41009720508910713077 3.8711571304058254306;0.3941633622978070739 -0.12703685349335100407 -2.3379849853038234819 -3.0085385359822400808 -7.0692538148494037387 -0.38446263220520282555 -2.6030975367418878186;-0.053157156611776612554 -0.14296921775621226902 -0.62516128860696618119 1.0282718905770740214 -2.5693549496780607733 -0.050401898797112092143 -1.5052131974268032621;-3.0387561445027508888 2.3740519015958261306 12.756857151909578363 14.940232988141223913 -9.5442246223344611167 20.673276970962668031 16.12553435099857424;-0.11230101191417544981 0.14566946960219265272 0.34452335327009975252 1.3475016748364414543 4.1624873020410575464 -1.059674624751625327 1.5280990032808385859;4.7876159291311326527 -3.4016486901118865305 0.90914116626455743209 1.2209338682827952649 0.59994738353892917981 0.1637027228018864411 -0.86287378010780690918;-0.12244064225647234567 -0.54899515575636681497 3.5044551965513139891 0.18076328667662419636 2.3873068956799015083 -1.2589324228741718414 -0.54766328987396439842;2.3319611734404039893 -10.539478666439855203 -7.0920022946514631457 3.1856296293113643969 -16.362025411175537215 13.000506728216711494 -4.0685865057706154246;0.16145612432577860496 0.085050148257902427607 -1.152577049001587417 0.10922563257588081831 -3.2476948016260598351 -0.27753450896545439619 -0.64845132636981472896;19.523555193869047031 9.2235652121545239623 3.0531951979186850998 -7.7887073550736838357 21.123409615000372952 -13.321548702206809978 -10.429131814575354653;-5.89689090931859905 -4.6545014603044583268 2.4849000378442687165 0.59759844976654452608 1.206077701371769173 1.8659271445035279235 7.2703595261788560578];

% Layer 2
b2 = -0.22647395822654198261;
LW2_1 = [0.27331991281626949464 -0.023497857361146907984 4.3498820852566701944 3.9344688512848939865 0.0068823956936465216505 0.10386441597800173675 -0.071492095289417134651 -0.039679401779285361496 -0.31031218197412524518 0.028291979114698242309 -0.036633411026264779686 -0.029070776381908795816 0.0071624850484876042417 -8.3684062827236207482 1.8197508972989491216 0.056627584362068918156 1.8294065278689517484 -0.099047340198688466062 -0.016029976198302525042 -0.019311930706557706161 -0.015845577868848367831 -0.2759758740951595013 0.049685375272113196932 -0.022311364621146276971 -0.047927466726996062474 -0.0068793373858186323763 -3.7600204687811413784 0.0075699156971543281672 0.23428792673190190765 0.031249620873764146628 -0.11820893554802477943 4.8763218865475721486 -0.021742853758552949106 -2.9798012506906133012 0.049371728041743459525 -4.2992105806536082824 0.01277913350137764581 -8.9795186800261870275 0.013579388132504543324 -0.024615042497388914949];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 0.00819772922900357;
y1_step1.xoffset = -2.02;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
