function [Y,Xf,Af] = ESPER_oxygen_13_Atl_1(X,~,~)
%ESPER_OXYGEN_13_ATL_1 neural network simulation function.
%
% Auto-generated by MATLAB, 15-Feb-2021 18:30:48.
% 
% [Y] = ESPER_oxygen_13_Atl_1(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 7xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-0.999999996490807;-0.999999994516886;-40;0;9.1619;-0.03;-0.28];
x1_step1.gain = [1.0000000017546;1.00003626070655;0.0153846153846154;0.000309885342423303;0.0656325902039552;0.604229607250755;0.0470499670650231];
x1_step1.ymin = -1;

% Layer 1
b1 = [4.7682850374362795165;-2.2926508750909344592;-0.56066189348585360186;3.2386758098632562053;-5.4589887928138898232;4.3221513433996934239;4.3699749046585329992;-0.084900994074135233136;4.8375792301079956204;-1.9223358332978246477;3.6095908804315031126;1.2090271872685180998;-4.9358788449452761782;-0.32913654609641640469;-0.50490215067375310287;0.42779058581649115345;6.3403672936493240542;2.1641254127342723912;1.2968507797821440253;2.4780202549495013997;-7.0034849140952601942;1.8399952165389876768;3.4526527886744737827;-2.8057581052203794947;2.2330626247496545567;-1.1705470021094486199;0.1777878227816311052;-2.3329496487826730799;-10.635116078038038268;-0.056652803266597426268;-0.21464594763670707955;2.8981004837032879884;-1.7243247557472176634;-3.0083297143978948718;4.30840694538974045;-1.9327374056164676741;10.16482897696739407;1.8153398260381385931;0.62868744993494940498;-0.87876969548348582428];
IW1_1 = [-0.03253050745417748052 0.25702150989411881588 0.26096423851096356428 0.417878495183826415 -4.7974195372863777109 -1.1412842359384327562 1.1020995075835027244;1.8039578337054877899 3.299986559615256887 -0.0047604399912037631548 -0.10396010362594693133 1.9302129956726896687 -1.3576080687418290438 1.779391601196099959;0.78162240201787336336 1.2084993115631170735 -0.32431176806501110788 0.74482971055814506389 -1.0221546238176184573 -0.12588993941271031662 -0.77743949301336379154;-0.25622383978077928335 -1.6712395342916261942 -0.9510259517246615335 -0.42949191218850507612 -0.077766144000045209217 1.2443600734442634703 1.1737020536399560555;-1.0563913886337084058 3.8113305709560223455 1.0637249220520834658 -2.0854555975684099245 1.3611327811624511774 -0.87960085765318052342 -0.79325669440626800366;1.0233144762911199344 -1.0182139630261135554 -3.4155847073399332459 -1.9677831763290400957 -7.1434885836025179273 4.3792343750115980683 1.2180191706573275656;2.6961045566278101226 1.1777273736229860734 -2.1633219619935060152 -0.06268842295745793991 0.11150869085046119511 -1.5815514898283449252 2.4204031696061929502;0.31127419015961033111 -0.052227959140581939335 1.3296750046474499207 1.1165536936149340619 1.7345807532006545237 0.25045018099298554937 -0.35276282221760163482;0.77813923597095913109 1.099666294750158313 0.37210702687541008515 3.5706163344484185274 0.82357867384647043263 2.858671666953934043 -1.0016461683710879971;2.5162418827469696936 -1.6268501082262445401 -0.96759390099318764999 3.721574618382183175 -0.89166287654855791445 -0.40006641399837933326 1.7539791940929365666;1.4461027652487308259 1.2602928554284194007 -4.1852378766666396004 0.8685947941954783591 -2.1617858559234646165 -1.0405526324761180668 -0.43418733944419907189;-1.7310270118208546108 0.13306902187892066802 -1.0616231779677500757 -0.4983552481365108866 -1.0737211515122093708 3.263099458774007644 -1.8479615452557871524;2.3831600686593463756 -4.7639283617566388074 2.7231688689896347277 2.4110445483210032336 4.0374693291210181911 0.42816691783983429342 1.2256322239833750132;-3.6417582497713723022 4.6389039589573606293 -1.501164927746247546 1.633835321038527244 8.8254078572201706265 -0.97647787656340567786 1.3366422934327522043;1.0503365440239764705 -0.043089943767852453838 -0.51253088387153977745 -0.36982833120942537608 1.1233666615770290242 0.80470541258640115867 1.1526059899892162619;-1.1804659484556427884 -0.7455977023198975262 5.7516791036811580895 -0.64346983929335999086 0.60079226456965917347 -2.0092932253458126723 -3.3529337520507724868;-3.9209015992951878893 -1.7559057325270268635 -0.82949577396703755294 0.073869194677008725991 -6.9291569170281652745 2.235332380917402606 0.23393932327787309022;0.25561500444009682687 -0.55559743255294435915 0.28764948720405852933 3.3157801248826568319 -0.73046355268402962668 5.9057864261087518187 -3.3278832943769214303;-1.1706323201684896151 -0.47058787732940460247 3.5821200248075317774 -0.35844846979639027884 -4.1447199826022025348 1.7539903917042767301 -0.43250920509467732922;-0.36183633840867357456 0.5033828443765173688 -2.148296601692581298 1.4326607890285520952 -0.42941290901514828082 0.18233847775915371092 1.372237112524842706;2.1136738081429506941 -1.30146246730470172 4.3912875662174890579 -5.7376201453221487014 -0.96810707020855824023 3.6639150649969569606 -4.1641308127596561306;-0.18402741538775535535 -1.0013937287303775747 -0.011629803027528197792 0.003116465926557090288 -3.6082075905902564195 0.52047175056427696926 -3.078307866807161286;-0.0051810442880282463196 0.57442794137295138945 2.5296172461465133985 -1.6754586388727719104 -4.1781040014484336353 -1.6647087800410127478 3.6523675693859161129;0.19590819191132013977 -0.29023283601115829056 1.2060344702691103702 2.1646418109036118516 4.7109498863342027519 -2.0189356953128472227 1.3097933803861787627;1.0036518471718713919 -0.34121855009141782711 1.5183561865300541083 -0.67197846323957821646 -1.1985792881610000116 -2.5885014192162412172 -1.0739684372936768586;0.075160777098651140871 0.37278478200337761272 -1.500327011354046558 2.5143437116629829831 6.8926275423295093603 -3.2239553975146404419 3.6864507006030260428;-3.0206559423021075439 -0.11838809893676729978 -0.80458516915044664408 0.60125488640879842794 -3.6687140948710390553 -0.92091090531567521005 -2.1470815319951430666;0.20436698018318649739 -0.27236981165178686393 -0.4089323156460785702 -0.17738344082916673861 2.6097104910125397126 0.84539528831577614998 0.060339730094602576915;-0.97774818180954647939 -0.60605101865769528402 2.388747016980610649 1.847099007762517342 11.283798460615718895 -2.2442805784236647959 -3.11034817243716466;0.17618200680020060234 0.18902714788787694511 1.1932633769585827554 -0.42489201230765005768 2.5867223158638767977 -2.0616345402537588072 -0.28965864501227139849;0.93047076259733929593 0.23339058270356280445 0.071635379380413810591 -1.4363445876977560811 -0.10158634999572611901 -1.9317741825714329629 0.415340471309845638;-0.25281537367522116666 0.95474902853475995812 3.4281816564763842869 -2.3461426960011784182 -2.5441452544752252152 -0.18580865543573973908 3.1981418158588379441;0.33119744990481958524 0.33541843236363383385 1.1891225015879700599 -0.47485296039676916369 2.3509747556556499504 -2.1129237296128171586 1.4756555261121324651;1.0744350142608127818 -1.4542316233553813642 -0.14759294136849435142 1.6422882101467859428 -1.7792003296937408674 -1.3350921602752299222 1.9370079510400874945;-1.04757045830522455 2.1159294381911530891 -3.5988229088141610035 -2.5675376738177537739 -4.9748412508174411073 -0.15304257474581317577 0.68148630480755412187;0.16634555336830081362 0.50762926399981411762 0.44102055759269492841 -1.5192096707864619631 -1.7425945073761457405 2.5851492909748539084 -0.6092682811974792223;-2.0792949198103261033 0.8196481678923048797 1.1114263982297816202 -0.288668291060887372 -11.933279579248097235 -1.3695594488688527246 -2.3612635257033458558;-1.2853317509576949185 -0.4057722450886036003 3.720099856595326937 -0.31598304754491912671 -4.935402401458601318 1.8687891721726430649 -0.43687847697632908872;0.2212807470537215826 -0.28182919346165452579 0.76670979395576266402 0.26635866114339673549 -0.50790563577400149597 -0.24715257308272231551 -0.73209024510368181371;-3.3779944495397198345 -3.4451577397548343029 -1.3380205606474744329 0.63777655311211056688 1.2279255523107639458 1.9482837191517841102 1.1255128351286169952];

% Layer 2
b2 = -0.68768466330745559034;
LW2_1 = [-1.0977226464499489911 -0.06389537432798994554 -0.40094334309139451067 -0.53723256916475614631 -0.057490174660484165414 -0.069906093850212833174 -0.21909312819294188279 0.69598087711334455374 -0.13336232908258777163 -0.029931427242686686752 0.2704150903417456564 -0.14241401972520439934 0.068314161982022961195 0.040715518672284400914 0.60506129756353821403 0.033238100958941259322 0.12458958930315307267 -0.066705476857074522123 2.8379976510525075639 0.20803054497740805506 -0.049412972557773264526 0.25980227340038786199 0.2165400644692988541 -0.33543306068025902089 0.46664186783928618407 0.24668880481271582283 -0.12839134719620234892 -3.1008608562152830679 0.077203132755836512136 -1.1427750028674745764 0.19677652644567639184 -0.12626287355863258233 -0.59055486619362262957 -0.53948955968580669662 -0.09832280630501771812 -0.52933326258489210581 -0.21822652129330688542 -2.4499525755039033292 -1.3862805891781415646 -0.093822564105492459174];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 0.00368391969055075;
y1_step1.xoffset = 13.5;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
