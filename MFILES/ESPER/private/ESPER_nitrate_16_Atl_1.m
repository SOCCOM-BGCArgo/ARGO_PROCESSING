function [Y,Xf,Af] = ESPER_nitrate_16_Atl_1(X,~,~)
%ESPER_NITRATE_16_ATL_1 neural network simulation function.
%
% Auto-generated by MATLAB, 15-Feb-2021 18:30:37.
% 
% [Y] = ESPER_nitrate_16_Atl_1(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 5xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-0.999999996490807;-0.999999994516886;-40;0;9.1619];
x1_step1.gain = [1.0000000017546;1.00003626070655;0.0153846153846154;0.000309885342423303;0.0656325902039552];
x1_step1.ymin = -1;

% Layer 1
b1 = [3.8031234941330498422;0.2889943547719198147;13.04265083530532543;3.9975895622476809166;-26.538351179666729962;0.56625419500315476995;-5.4063712193393582695;-4.9337218952221952861;50.315106648472706752;-5.412902848086747376;2.0960968995231894496;-3.3580192415968013187;-0.86181612693144471482;4.3543437501629442821;28.952591282222062574;1.2584727847007233237;-5.4169364984622569992;5.3811111895839092156;3.5598338033320549023;-14.697442911498351137;1.7511506011521635884;25.748801495856763921;-9.2955558860116305198;-2.6583204839731022773;11.129517100925950146;12.891018579484979867;3.3518810504493723457;-6.1624606021798653543;-7.7063568188524449454;9.4649273929028918673;7.3852438044794048722;10.443024852066940866;-2.6899205058331063789;-5.2744258484329975545;11.348494358902540213;-1.4107379474758918736;9.0022404458817302242;-0.5413107796981313502;1.9893751176894747257;15.517052239102293143];
IW1_1 = [0.79326048502748225388 -0.7876581599297362013 -0.92563614009976968866 -0.19328266038647298752 -8.8589101751616343705;0.39726265727427578778 1.216179677528064218 1.6480246010199037787 0.12293374489367064895 2.754509819438419882;-6.1430658207269948079 -19.044337303615535006 7.1529186302290153066 -1.6189056551944649431 -13.464549460243546264;1.1875086277167961057 -0.68257220232538184934 3.1016413024308011614 -1.0090194544016455325 -11.362664462221980344;0.31558470936708798993 -0.74455693342653672673 1.9360388105152288585 -20.937466746369747028 8.7661527101779839199;-0.49676215924762034959 3.0935370247713449565 -2.9296080705325078242 0.27133357637024535514 -0.64686747120845111692;9.4031112712861979475 6.0375942055462417102 -6.6458179841763271867 1.5056844676792748849 -9.4533850416314173515;2.1103775708484646678 -0.1236735872679310122 1.5977056065343737679 -0.40809912700202932712 4.6844606129171166842;0.42568869479759535723 0.59518519699681637913 0.93601823539970441246 52.280241053066660584 1.475945014799921351;0.062920159954915816369 -0.51987102854433042687 0.66038341707289260896 -9.7426793886928759747 -5.7471278222381450007;3.7600333551190638914 2.9603147894511043781 -0.77431975410376319147 -0.33256003858222860092 -0.65194634869094159058;-2.7128633726290187766 0.085972020912399318981 1.3764386279082123643 0.037797498314661462371 3.6718727099627019861;-1.2160384835679600712 1.5035734660503685678 -0.33336559463568365969 1.5067848731688908703 1.8946039416723601256;1.2571363365514125476 -0.62541125109903006329 3.1138284497169683718 -0.86878342943133890497 -11.809037984388433884;-8.2883601371073680752 -0.10665173614310176353 -1.3974130386698371264 8.8246160283534020863 -20.478028067073267948;1.951501423770213739 -0.62777835983461205416 -3.702047446599018965 -7.0965096054951661841 -9.8577811671648962744;0.057100102612278560987 -0.44525029537770155486 0.69569226419095653302 -9.8552298081675857588 -6.0379775654029081977;1.2817038445379618228 4.1057376827839231481 1.5612745432229049314 4.8271021104464146845 -6.0713673470100015805;0.82854034203666426794 -0.75702954451098869448 -0.93151856439545910327 -0.48540091506330462767 -8.8929011257324344086;1.2112077173752475723 -1.5785563685048067395 -0.90563444090162903422 -4.7797572480432011233 8.6292769669481153016;-7.2231440693332373826 -9.4424113541510159564 2.3737456176326987567 -0.68845852269047391747 9.0637552196572972463;-0.35338227303641805976 0.72227096222160802608 -1.9473960977985873555 20.23284204251264029 -8.5152776097316209558;-2.3157441278172687937 0.44486623595592539315 -4.6083020928323854548 3.456298285025509287 15.740547482362696741;-1.0815445452683649652 0.44877791798601707196 0.46453741579417495711 0.83209361370887480192 2.2578637327780066713;-0.47887099143149891578 0.4062978518872109035 5.1983770395778678974 -0.73684723064669910286 -10.691309742166728469;0.61586901270521310359 1.6628869469558782423 2.5976557273862286301 2.8310853927332839675 -11.979642648411033434;-2.0918230435072375784 5.3253449209849978985 2.4937065314562452123 -6.113999713602717101 -8.765072986277630207;2.0573762865571922909 1.2661774673631494004 3.4568797198367540169 -0.012414528434115834621 8.0549597985924901167;1.7802681013625949458 -1.5394768555284623623 -9.6966307674168703556 0.63980745352545886906 4.7305198058019559681;-0.21755931882428664048 0.64940403371236876673 -2.0849232452052199882 9.2761091736416023679 1.6539773582731940316;-0.079832137817514622902 0.81690854046241034858 -0.7262752858197430994 9.0723803247336416433 2.1455657719719174459;9.3959477523605041682 -26.70400970775454752 -0.17835338984900728221 20.113338737278908752 -9.3891880156521096978;0.53951152014847514327 0.339583534393313069 2.6270346844134175868 5.7381041194451407605 10.657581692858654421;-1.3388942826206693404 3.0992473145558361303 -1.1991339153793609817 2.643293545592693139 12.240546770790674103;1.8259572934794632282 -13.238659358873924532 -0.38085123168888923573 -0.78738598367598611194 -36.499581760552196386;1.232639578385894108 -1.6497724651945739893 -0.013937620818458125449 -1.9941783692256171978 1.4532599661608265329;2.2450667507003121415 -0.45379026995789850663 4.4887983147588537136 -3.3310881880120155607 -15.273858328967021336;-1.1753448091034168765 0.441649269337888839 0.54366719967953125447 1.1274408034668024214 -0.84312513209897455013;-1.3395524492472572486 0.63506020775314919735 0.62039171917210522711 -0.15457001910338086237 -3.3932082322142287367;-1.7241869403501817182 2.2927484484330125092 4.2498296991215358531 -1.0046078841183145869 -12.435271832662037284];

% Layer 2
b2 = 2.7545023378658211044;
LW2_1 = [9.758657650920705251 -1.0644345079964803169 0.034270512426958638086 3.3480508274180853512 3.1726038156926898992 0.45568004710880627428 0.11347775276492780283 0.67088184982559040392 0.25606799025325766017 7.9447814336331967766 -0.17105983583810938087 0.6651478861335351489 -1.1606391306391712348 -3.3944976798328010403 0.091831615062571203545 0.11396468730921760493 -6.8070936537431308011 0.065516263649567474392 -9.5235179907031408675 2.9149423640251450607 -0.15631444058973659184 3.2852749955005271509 5.0673272361006116427 3.2925937029343179674 0.6101725091151743996 0.30885999127007340848 0.091895358126476395233 -0.3751980169820657296 -0.25097285325505908071 -1.1641183298045714167 2.3617952533911807933 0.034253095209729703119 -0.4304250828567696141 0.087057521280000049746 -0.12646080661738520745 -0.9620122469694900591 5.3079178701269125185 -2.1808282885008014595 -0.9906137667471957009 1.109223766079263207];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 0.0470499670650231;
y1_step1.xoffset = -0.28;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
