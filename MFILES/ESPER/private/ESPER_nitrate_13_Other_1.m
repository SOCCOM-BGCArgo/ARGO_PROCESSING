function [Y,Xf,Af] = ESPER_nitrate_13_Other_1(X,~,~)
%ESPER_NITRATE_13_OTHER_1 neural network simulation function.
%
% Auto-generated by MATLAB, 15-Feb-2021 18:30:36.
% 
% [Y] = ESPER_nitrate_13_Other_1(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 7xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-0.999999984769129;-0.999998793562952;-77.961;0;29.715;-0.04979;-138.904784718693];
x1_step1.gain = [1.00003298043486;1.00000060321889;0.0138606862425759;0.000266418009857466;0.193068829037552;0.568038194888224;0.0042772329208737];
x1_step1.ymin = -1;

% Layer 1
b1 = [-4.8554815399495110384;3.2132109468722411805;3.7953366177601206566;2.1944761017246756651;-4.2299913277955072388;-1.778724148083342671;6.1938966242906339232;-3.0712056218203809266;0.85433621889164212959;-0.34327588016013654837;-4.3007189389229036891;0.1346460725152738569;4.3032229202419722824;6.9452665993252971077;-1.7240788310625856372;1.6733804955712663354;0.86165321872477673715;-5.7338229119733785666;-3.3034159878895588136;1.360916934089830832;-0.73012083675227479329;-0.40365133147319742779;-0.36662981782240489093;-6.3676182591976395742;0.23260532686698837113;-0.99316990335205845852;1.5613922391206489504;-1.6040409723992354873;4.5816249829418076445;1.615419190999872523;-4.8373432659770481123;-1.3879290743454366641;2.8507885969100992263;1.7279866220950472755;-1.1579551264389342791;-1.9335835074310083748;4.8947507760258419651;-5.1685106846492780974;-3.951735365019763524;-1.3601262903557460593];
IW1_1 = [0.98583977750280782359 0.1425028717106254228 3.9901016648228493366 -2.193551116195449957 -1.1478990272141333939 -0.65366093669488090079 0.73197972509837250232;-1.4643900949021786406 -3.6387380335126278119 1.5564849511529827986 0.019071815298385315363 -0.69352693543871857251 0.07263244343716160345 0.80322980613589345378;0.077732914468946562314 0.167989739336692534 0.59696015530611812316 2.1976737904733179008 -1.2369226481059532041 1.2646056281480571037 -0.21989859626872593212;0.7296090602719982332 0.59579837198168239532 -1.4019007572387838234 -0.22402771688788677973 -1.5635797185687287936 2.7913503832929342785 -4.4718920453425683448;0.20258711296401987756 -0.17755573015745171328 -0.076130595773401421589 -2.0038337745840628656 0.25671836772984008013 2.8448533498722134993 -0.40303547936901523707;0.16972034394172050287 0.27637941961410711356 2.6161911465300500268 -1.5969287183912956873 -0.14788706129579318183 -0.96674242957791867159 -0.14791900235164276434;0.25673613695554931002 1.0156279513650923185 0.048449712706518738292 5.7137846349861023398 -1.6206669775940685252 0.65367387784593367073 -0.81672615524805147746;0.34172482511555163365 0.21111244044451227264 -3.3983313326874524662 -0.32259333703818104944 -1.8262408004072325785 2.4572355001261323437 -1.1670907661328422389;-0.23258474109386362283 -0.3313773513881330679 0.67534618310613792058 -0.0022799931234038857582 -1.0532044937073146151 -0.53637630666938573842 0.52499289872951315772;0.65600944265405258804 0.72019284023816321216 -0.42835467338890187428 0.20422620888847656251 1.9562287504659707782 1.0764597011525596226 -0.47149009092504079454;-0.20866958614517266968 -0.70020902779667471005 0.48551371974136525722 -3.1719131475762636363 2.8690593748138581986 -2.3532121124291776049 2.3805408615895067292;0.7938155756456075629 1.4829620548646404998 -2.5710485527535444916 0.55817499545770299374 -3.0612907881139479471 2.6421666798596601389 -3.5067808396498181267;-0.1535574501838886663 0.31497775838459673992 -0.15648418599783817107 2.7227516230786377172 -1.7482168343933430776 -1.6939425272551253965 -0.36776518767668758825;-0.73086632966397524491 0.66836043282524293385 -0.13285277622302232858 2.4378019143431166604 3.4504559634782268063 1.1574271006903795733 -4.6190124468067805807;-0.10449835038727564585 0.087891916869184266714 1.5020387373709924717 -3.372686291705359718 -1.1264445837491390279 -2.4688235329010379537 0.56524973483346030445;0.099438849612649801712 -0.138456885230569815 -1.5069610093992791278 3.2605813353696944112 1.4265840475561726297 2.4939980183463688057 -0.49057684473317325624;-0.96590407856579485468 -1.3961887737122249398 1.1785504804752462427 0.072476485021542760845 -0.41326392479920587286 0.88967115215226166836 -0.66829841752713570191;0.071094081463981703695 -0.073201120933860677753 0.34302383480898462897 -3.4995751040443603408 -0.99900370187074694073 -2.5562915145894096192 -1.0281315201421734606;1.2638263820639399349 0.87170978405139321055 -1.6069420051297973462 -0.084463763938569025314 2.731116800324989935 3.466283249062119598 -1.5148297947366320404;3.950108434251810241 -2.1916941104357676728 2.8494971676446465558 1.0075410125103092529 -3.1292515014655948313 0.66497951528590304449 -0.53012616872319540118;-1.9493878316148953722 -0.24043591617668941263 1.4399574159633095061 -0.13763149938178850795 -0.78650155188062964573 0.2336451301101967748 0.21445994176926869157;0.10466641448767834144 0.082827213456684325998 -0.92318826842974943681 -0.0033775546154222926137 -0.06623944801449979658 0.87268511417220706594 -0.056754843325165477141;-1.9888807688313425714 2.2791667979364236274 -1.5049501204586550607 1.1495481897423291962 -5.1377279802281581311 0.63386790222411859563 2.1150924336545542381;-0.25844525073607610421 -1.057534779566241756 -0.0087302383317759482684 -5.9263700259374338941 1.8003330466996136927 -0.68062428021235577003 0.93111907422449236016;0.1110544189957806821 0.36022869129280066236 2.7692799035675377262 -1.9887752951043875527 1.2622831901600899407 -2.8038809018236201531 -1.0872348710262234039;1.6775458324672849475 1.158613798420675467 -3.5229096784450897317 1.5245254256219298306 1.3356220084449685892 0.41584061402550975828 2.9012295180919100979;1.1044249451147101215 -0.23179927106697209571 -0.31735052541849056995 -0.035265184683104938701 -1.1963138672190782863 -0.45195607009596805437 0.019557713800901169177;-0.19110940948553781227 0.17691829671437825366 -0.48366221950566185006 0.17763396149807458846 1.0346790384535167195 0.98978504713081871813 -0.85514665063397865552;-0.083975360266719006885 0.40849893057380465278 -0.15713481422340708216 3.3279977578167798669 -2.5831916023719116993 -1.3982819755078530477 -0.75424916466829217132;-0.081255663898971333681 -0.26046160786693839384 -2.2261738088233231636 1.2486180348802740081 0.34680010976799252598 1.120092217821510916 -0.27778154219755768484;1.0391326565790668379 0.1901444445886439627 4.1967110283875088683 -1.9803959991754176428 -1.1492769340759072527 -0.77770960272095257526 0.8082823237069142186;-0.89784971376578071034 0.2845564092230966069 -0.027330885247283581707 0.22167907496193403616 2.5431861363866743453 1.0044803020107282432 -0.3110189614703740002;-0.064845879859585481286 -0.086420643963411661326 0.47759003557150303543 -0.25414075026640320365 2.1121292547819727758 -2.9256021758267021227 0.89066760641539122201;0.16538083359865834998 0.46777760896838571636 -0.4395403794633879202 0.24256679358340216268 -2.876937406480079229 2.2595405335874811925 -1.5014526377791979073;0.30966717761775724993 -1.6875882335212069041 1.287928728049567928 0.17889543221571385656 -1.6400375332727246125 -1.5372264643927364691 1.7642633828667850793;-1.2578101407408619483 -0.9208839947323979036 0.43949390188326992179 -1.0341000477156938597 -1.4841940432448215148 -1.2797183060932471044 0.12987808077768295267;0.20509564579260333717 0.74183569423898410022 -0.41562395629151105414 3.9148552043660993505 -2.7060211360062758068 2.2197744250057342974 -2.4583813704143180345;0.080648678354027752979 0.10815052502858106542 1.0500096336484883164 -2.3278307306192722592 -0.90345952673847951253 -2.7094009922211457209 -1.0234899191827457887;-1.3223425247843574315 -0.74961494830180175342 2.3890329460159027697 -0.079623173221261972499 -1.4537193171491593624 -0.5680374699090599 -0.4406798040447196807;0.23558152380112620805 -1.2991692885935173241 0.57726577101232168232 -0.52691351108079376164 -0.5791233342282564589 0.21817634543371430822 -1.1132864616248849821];

% Layer 2
b2 = 2.1419771209927507272;
LW2_1 = [3.134888311271118333 -0.071428004373159381668 -1.443538089007869285 -0.16407340215275531548 3.0123563356368965316 0.75322407758578358017 4.1985990023530064263 0.14924160737947619881 2.7480107324379354772 0.75578327010403500985 4.0771352209321918281 -0.067721484189721639635 6.2081577054610823652 -2.4469339007249244489 1.2307318666959083941 1.3072704609194141234 -0.14714583670403008631 -0.58506612270984792445 0.21151006444265094131 -0.018798096620386298139 0.18858215892783899981 0.97774762080146815357 0.027695921646265251465 4.0490130826607781955 0.096018153260207836364 0.034219193142333077795 -1.5071043743979346541 2.8015060979519330608 -2.5377969340190782432 0.94956215296151225136 -2.9914210754970778083 -1.440626758485483494 1.921936294391693778 1.2103766536621178851 0.15338929894654321218 -0.20973475100748165123 3.6744574557810585347 0.46778902427683860532 -0.39637462702730630326 0.30759586819514445066];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 0.0415843642790311;
y1_step1.xoffset = -0.9;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
