function [Y,Xf,Af] = ESPER_phosphate_16_Other_1(X,~,~)
%ESPER_PHOSPHATE_16_OTHER_1 neural network simulation function.
%
% Auto-generated by MATLAB, 15-Feb-2021 18:30:31.
% 
% [Y] = ESPER_phosphate_16_Other_1(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 5xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-0.999999984769129;-0.999998793562952;-77.961;0;29.715];
x1_step1.gain = [1.00003298043486;1.00000060321889;0.0138606862425759;0.000266418009857466;0.193068829037552];
x1_step1.ymin = -1;

% Layer 1
b1 = [0.59373146271868693091;20.289128628952397548;-1.7118495948328573686;1.066870073808785957;-21.495232621198589129;-26.107596585940292755;2.7348805352943301727;-0.28466776399550042242;28.204948333216869116;0.76343244303034485387;-4.4738609867876864001;-3.0422747452355514142;-3.6861914385282954498;8.9548794476163102729;-6.8921347946902198345;0.84533000922339618377;-4.8873780154586530244;3.062828900131269183;-6.370305223415891227;-1.7085334237941625091;-0.51553468914791233946;2.0183601294396957826;-6.8520681060115222749;-10.952373315690449473;1.8769378765572917178;-5.631169060395262882;-11.408526748324106848;8.1351535655426978622;-8.6562161187428952047;1.33795616134173323;4.195724531192264628;-0.5556410497038739571;1.1844606425495802782;3.0950556010536374174;0.49610592474975545585;-6.6526011510096116908;-31.03872209924546155;-3.0006661744855414042;4.9179446341651553709;-2.6957849866155179086];
IW1_1 = [-6.0093146851478085324 -2.5490965352244780995 0.95887580246509063198 -5.5234618101863413031 20.632234872151414606;0.97242117250854254173 -1.1837633622385355103 -5.4578079264082370869 18.841046061631303132 -0.3685272239032859054;0.41622330926550832331 -0.63712404740428296712 -0.35866346765051432266 -0.51571581588846326927 -1.7464932106242125887;-1.3671316876825252429 -1.6690338807985407588 0.3007427728929769617 -1.5024299729941348325 -0.70492163943022456696;11.924835400844074229 -8.9997949199230422579 14.116368600957338586 -15.991100361204674485 3.192901394624407807;-0.26880070373360809288 1.177676863358519066 9.2291634701809694974 -23.237411966100005145 -1.0419417245518671766;-0.4344318615446459142 0.85710979043495805207 0.77528655985133321238 1.8940446371515053947 -0.21948698528752638715;0.024298440625013663363 0.1085204858923444482 -1.2861518402438336661 -1.003290019305452363 -9.8927468893330932076;-10.363370342167046445 -16.037664923380965831 -30.086052464954256891 -0.10764285601484636923 3.1393801384108614982;-0.019575576341962355048 -0.14505061148528961001 0.89643258363122468868 -0.16677501856020907067 -4.2591127925575040791;0.30630924829618960681 0.12266599414410160607 -4.9583341122168382853 -0.47010722552227940385 -2.6033947515471500544;0.85708806845620244541 -4.8113077027909225691 -3.0233877680269234389 -10.349131581282556169 0.21279076800828777838;1.0925849157171290127 -2.4024542101611796596 -1.6596681135967839005 -4.2179655031783802599 -0.42502683483439102075;-8.4844796122673500349 -5.2751861527528927098 -1.154952989905416505 -2.9544520346549743017 11.688816486194998134;-1.9374350327323497378 1.107770058623426479 -4.6788360644464805915 -10.050749294996480288 5.2717149350262220153;-0.46700210919315232605 -1.043530476091380832 0.40270573503759693468 -0.18097331899880458872 2.8423356705339348771;0.61056140781390300099 0.10605992052930651726 -3.1957530879301780935 -4.7749913220419450965 2.2401763871645590243;-0.88098514114544601572 4.9050180577341260246 3.0597609222393571393 10.572633705418351013 -0.9159758136718110233;2.2195836547542122652 0.40781049536899721675 9.2505680891895227802 -1.9146574742844537642 -0.33962857431966836375;0.31063163163113144405 -0.52563693699231983647 -0.40685961713820451013 -0.80377557308468916553 -1.0236232284831299211;-3.3979453993790014188 -1.1181577898901509105 4.571705113626636674 -1.1424036174498877205 0.32111396822012361341;-0.25337934514690069188 -0.050042696232867389661 0.13317346924628145621 2.0136529127297730923 -3.7552650744944457983;-1.9122478220908325497 1.0901164925772361958 -4.5871700448729439969 -10.029880792805052181 5.1049635452281822978;-0.50979606845306435492 0.95960738599239103763 8.2229438408537909311 -8.862898847479549147 0.12928253363747851945;1.8071405476185797845 2.8564093743012635152 -14.608399585612167115 1.0554681949464674862 14.627500499046899307;-1.2642291856038505582 -1.4441102242741319372 -0.53740755930966466192 -6.1700184798181307855 9.6810178918254461422;-0.63636360951255521723 1.030658222802061319 8.3938697237460573319 -9.3336294687786551805 0.42431144042772084291;-5.5681036596551143347 7.7822895183193017132 5.7214381067672022141 20.842158027740243398 -0.69631526226167927973;-1.7303208726541539075 1.093860108373134965 -6.014091484409442856 -8.4354763545657078794 8.7584897621227533193;-1.3067734705020077612 3.0997815179674077513 1.2108893679404835186 0.52682136161702219912 5.8914803756272720037;-0.28568041856871223549 -0.14576947819941743489 4.5678277901406501016 0.60695306215586164456 2.2393240781818315455;-3.3065163120778007233 -1.0483095679293787938 4.2792561127023782674 -1.0441029494467204408 0.25046426290808432302;3.9955137562601374945 -2.2313715947176460119 19.402213153637479337 9.9946430988014256513 0.29830370801480554643;2.8970933348611782598 2.7348610329792339968 -0.0016960239359598292333 1.2188296836633851772 -11.181896001313813116;0.09444907372986866001 -0.50429431481098552226 0.88934919966492198551 -0.083474535507062949669 0.35344747185699915137;-3.0988203439100550085 1.8160039975507098475 -12.192388984565589283 -13.776263689906519616 9.4715706106911579099;-0.2295123211315766576 0.082832694497724193572 0.70657416184337018539 -31.856896644397590279 3.1217203285932200174;0.054146910853700304378 0.014085282488565754877 -0.12598963923348979743 -3.4317612420181724531 5.289357627321376043;0.71259455384347158979 2.4224802427606899613 0.19351475080330973744 3.5385215188960628119 -8.484833630714096131;1.0979376386122483567 -0.49920842704635753906 8.2964309834524438969 1.4809096236134722258 0.87008874720390738666];

% Layer 2
b2 = -1.6026675929070282045;
LW2_1 = [0.079838475745872036771 0.70835717396249053834 9.798880642975847266 -0.42631607019799383496 -0.16596738296470531226 0.49094357828772328123 -3.210969783957041912 0.49305934167350823349 0.27722561536894035905 2.4330220261443233909 -5.7549905790486759471 3.8579853540065420781 0.24968152256805009603 -0.14209838704723132263 -4.0881959103243667997 1.1390811438266059685 -0.44741725007205390696 3.7615072521383869919 0.28818718103628770955 -16.385318713847006222 3.3074308911814149781 -4.3285969631240694966 4.0498872407066803802 -4.1121085611851020403 -0.095183355359122909234 0.25621242407526856333 3.8927809741024961276 -0.056356507371320176125 -0.22577671096076565305 -0.1173245704836147485 -6.7245942938641363185 -3.4669538982581205033 0.065914944891188889664 -0.20845254184386627361 -1.7385945968797260619 -0.074882876831837863474 -0.25172211281507256286 -2.375563947715280122 -0.26398357626835072809 0.16161703660055859455];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 0.568038194888224;
y1_step1.xoffset = -0.04979;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
