function [Y,Xf,Af] = ESPER_silicate_13_Atl_1(X,~,~)
%ESPER_SILICATE_13_ATL_1 neural network simulation function.
%
% Auto-generated by MATLAB, 15-Feb-2021 18:30:42.
% 
% [Y] = ESPER_silicate_13_Atl_1(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 7xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-0.999999996490807;-0.999999994516886;-40;0;9.1619;-0.03;-177.232103709389];
x1_step1.gain = [1.0000000017546;1.00003626070655;0.0153846153846154;0.000309885342423303;0.0656325902039552;0.604229607250755;0.00425400504498441];
x1_step1.ymin = -1;

% Layer 1
b1 = [0.16984242099988694497;11.142162453445909165;4.5384469099323059282;4.9181928427603969212;0.27526677386877967946;-1.2040805669226135599;5.440505209408240006;1.1498879808975910333;-4.4265743174217906386;-5.3412884139876428691;-3.5931934411897343828;0.89728562461916172577;3.7788022519742541228;0.12133121833413898494;2.9593599017967981979;0.48782978191703935122;-0.60148869828369455615;-0.89409592710680874106;-4.7776982474216467267;1.4607773111727633264;10.482244387385385664;0.5466404999896384842;-6.6963566918951951124;-2.2249158171979379617;2.3156798924206398738;0.16223124489955398353;6.6798914354136869065;2.0032967308892772884;-1.2020130659269421258;2.226774315788240699;2.9984888569548053816;4.2894744364841281836;-3.0628382871144035349;0.1481437754487152092;3.4737882783621456539;-1.4278858824382334447;-2.513439277660553639;2.9574284750446855341;2.367678661420141939;-3.8052103444451215175];
IW1_1 = [-1.9915436589357382591 1.6548193198107254975 1.5363642007096982578 -1.86723757979371352 3.4662648587960100954 -0.81908002836932802815 -2.3713155067574946955;-4.2054163805644355634 2.5357031624312456053 -8.5259896156492462893 0.2917205606307838317 0.84628327183028229097 5.3547878099564067966 -2.5316789508836810008;0.96628911844208742465 -0.09655613370999532874 -2.158094890482510575 -2.3906826271808121476 -6.6257715014165770029 -0.0042022313911756646251 0.6742613964990835651;-2.1256137100373044824 0.44757168784184003796 -2.9062932903738212254 3.1872123894763024765 0.43003489629326696608 1.8052124573867236457 -2.4641264704886762793;-1.4850389307085820612 -0.75229356315737960781 -2.4011802400817465752 -1.9340675149747421635 1.2260848953541474415 1.4898910125232742718 -0.59408912360496646254;-5.1029930699517045412 1.6997861082826342116 -5.211667803551004674 4.0644306955630780109 7.8523961966512283439 4.677676231377193794 -5.0100829014546492957;-2.8811438469128676232 0.80882921052973133502 -2.9324970581882703335 2.2985063864279515755 -3.2487519935001238913 2.6204164238990355074 -5.4716407836993674607;-2.4673973451206858698 -7.1549440186158514976 -2.2773358186817618254 1.6672665018451751084 6.1805931048655731175 -0.844198961894141231 -3.6229156759409040234;-0.099367749020808138205 -0.27600815258157795906 -0.7516091978595201839 0.71817638768740155175 5.6103123759594311082 1.1627476323555503424 4.8209065528192560635;2.8374842250019294276 -0.79424359732184668381 2.8813633548308956733 -2.2582895842527008767 3.2399072246307771827 -2.5560129002215985494 5.4341760465648274447;-2.1562911769754276037 2.5691320717631773718 -0.038476701673122615244 -3.6910819250794033586 7.2077990432501115592 0.83510377728304086009 1.6581513024594871641;-2.0588959808595825862 1.7641941363303481616 0.38355288836043616163 0.34304856404410405402 5.5148484157708752562 -1.5807204866310615721 -1.478318747568448277;2.8733654561880772604 -1.5922343922540114214 -1.7447412982981520546 1.6528536392668193855 -2.434577278443476267 4.9249711239715674438 3.9159674529168166934;1.9858493241777888105 -1.6510294832660963316 -1.4641036057573859619 1.8184889256874134933 -3.881566096077680772 0.79474053417402090727 2.2887856857377588682;-0.78002532745248842616 1.0457566922013581401 0.64100223013237700442 -2.1862453439007465406 0.075211481611627814536 -0.8994386563888475683 -0.90477355107160950531;0.71753331022190902644 -0.65153487404808829719 2.2822630732418711652 2.56440337172529631 1.9530604052631883594 1.317341567949178005 0.59240234268789659922;0.7926199945844754069 -0.87836112998810245145 -0.621846904173931736 1.7245517195564301627 -2.5879931010353831589 0.39869942013108827794 -0.087456270279456821415;0.77402556032680935871 -0.99674251172876293658 -0.62843450877045881064 2.0618443396085197605 -2.8638184204493839502 0.78651282927710985948 0.71110609146880854325;3.8815360595980532565 1.2509360387873948994 -1.5589504434038663483 -7.9751172579305817933 -15.133720829514338391 1.9520022851214959836 5.4954271674294199457;4.9856260677073880316 1.2748020967421871408 8.8517366680638769338 1.7537311836671625187 -0.8876267790170433436 -11.923130279458820979 8.5505075122936684551;1.5585140869605014213 -1.6348274453627036351 2.5905884260986806744 6.9233223187426009559 -8.0436808443499288046 0.86218887800017773859 3.3878137256460467697;1.8114892976355720933 0.62856396087104438042 -1.8336217301054023032 -0.94401039959052024386 2.7045687465214762746 4.47458244070197253 -8.3101707176248105213;0.16589437955722236007 -3.0594915681729073498 3.3688354631076853352 -0.46585446574514932649 2.4201315525245390425 -4.8485312086749701166 -6.3099113353598550447;0.24349436688340195256 -0.6005685831216223125 0.75014273369619810516 -2.6116070051806050678 0.91895028349783203225 1.8797013279751575432 -3.0585735557861761791;1.2916599267582913324 0.19587682093864280941 -0.96411047505832225823 1.9840633405873617789 3.9024063561965616209 -1.4568372857732938552 -2.2331594326278736418;0.86236060865879093917 -3.3570094585305261248 6.7491022471552488682 0.87950629305465177765 -0.59854625898535285256 10.650397559105073242 -4.7076178436692819318;0.19776369925246778392 4.080506494259912742 -4.2072976483847179807 -1.3409435938753910822 -1.5685436431138415347 8.0517229398581005029 7.4726083004300418722;0.64797252649661496449 0.089998260543316180304 -2.859151404423045495 0.11939832596073270132 2.2282602148665633379 -1.0978598313834153632 -1.2800762537143031139;0.26869562833266386059 1.3608552007760184033 4.0935418416405848774 1.020090443473252062 0.22472330036994578317 -1.4154237744403603827 -0.087206017510289779437;-0.24579232275436144195 0.55001950515210851211 -0.69399529811289140113 2.5736856755474444292 -1.0810570609097176487 -1.9334684347138284544 3.0736646119543098443;0.89352824930300389639 1.5542146523194602104 0.34378840872639165882 2.6130676031528294878 -2.6196786196396550928 2.1116644474095935813 1.276166836534069482;0.0909079263416321115 0.27502898524853180984 0.73722626676839797533 -0.7977786625233697082 -5.5066849514433897639 -1.1328412087503376693 -4.8154491919719841775;1.1410097295967107645 -7.670428095632743748 0.14275895427213186606 0.16592814373323805377 2.7056079332317182207 -0.22396951237951104319 -1.530361567235467346;-1.5330481544361680424 -0.060284358918633818014 -4.2466097716497541725 -3.880123862207864871 -3.6552001575270991474 2.6989508674031426061 -0.22456976696873548471;-0.70666692443285938907 -0.25614173878391638395 -2.8321520502872608027 2.9026647540898222744 -6.6398973743593696639 5.5914961691405995481 -1.5079881875677934033;0.40365037027681494042 -2.5606791305314207108 -2.8204900170558317996 -1.9736277916680178279 0.32985055645097122179 1.564761363182234355 -0.57778143497232359316;-0.74751115494913489279 -0.10969257319028091757 3.4293627031653586279 -0.077564951741779686323 -2.1291102419180147898 1.0284590831973112746 1.1952666632058881468;-1.7693256783884809824 -0.22002026025918075547 -4.8247847453042513877 -1.1882949078286422218 0.56697546396843179206 2.0043386925736914606 -0.08418511425790337066;-4.0483027764958787742 -0.67469560358931057742 -0.097013512900866974431 -2.9937269048690526851 -6.4670121721564415296 0.30708669672359434344 1.7087652623603040158;1.2401161973851408948 0.47683704418371125611 1.274477157558964846 -2.9562502048250394182 1.9833228729744205587 0.46830510754352161484 -0.32401607867608078761];

% Layer 2
b2 = -0.40117295524542528895;
LW2_1 = [3.8733670324116640238 0.028379275628594480968 0.061574393420925174758 0.045067065080902302121 0.16711332624727573415 0.057915584903180231113 1.7470615368076332086 0.027170065623419992901 -2.418358150779762461 1.7785762915041218868 -0.034605682664838308127 0.30551432510721959757 0.015705188275711982893 4.0907286005972824938 21.401066536972372489 0.078829769766275287202 -6.2595398867500806617 27.933867645028232829 -0.066269204886459279202 -0.013739352452378100072 -0.022126362418205987315 0.030911587711922546007 0.059205135799241519201 1.1441687691417647965 0.57870022836258550036 0.016258005253561042674 0.037770461611418490455 -3.1335009775328832582 -0.18085085571685785566 1.202698385874383824 0.057807951847158423053 -2.4531884506338181851 -0.033209804919609259288 0.037436988546712637871 0.0730294204637857991 -0.1661225226776690822 -2.3319891083950183841 -0.15655849468807594982 0.024397174272906631959 0.079093894125209465717];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 0.0145232735458572;
y1_step1.xoffset = -0.52;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
