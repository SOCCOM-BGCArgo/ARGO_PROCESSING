function [Y,Xf,Af] = ESPER_nitrate_11_Atl_1(X,~,~)
%ESPER_NITRATE_11_ATL_1 neural network simulation function.
%
% Auto-generated by MATLAB, 15-Feb-2021 18:30:35.
% 
% [Y] = ESPER_nitrate_11_Atl_1(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 7xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-0.999999996490807;-0.999999994516886;-40;0;9.1619;-177.232103709389;-0.52];
x1_step1.gain = [1.0000000017546;1.00003626070655;0.0153846153846154;0.000309885342423303;0.0656325902039552;0.00425400504498441;0.0145232735458572];
x1_step1.ymin = -1;

% Layer 1
b1 = [1.0816757672779875321;7.688534887990048361;8.766959880401412164;-5.3264325531514504775;11.238262229743838816;-2.6417190951078586281;-2.9421548244965207708;-8.235459529237537879;4.0114339624749364432;-10.626117252649359912;5.0358171203996642262;-0.89245017276623284097;-0.61258573923938042238;1.3359402769665007504;4.4527320553583598084;0.39739853751538328774;4.7546489253743118297;-7.8909567684344281702;5.5883624479939300045;-4.3048168044281531763;-1.3465881946270255032;1.4200267591444128978;2.9272096878681410637;-11.726712092411137434;-2.4507435316608487952;-14.822893410116664725;-0.66107844196431242434;-0.97964503007082537334;-4.2953182513615582039;1.6564047661345873141;-6.6561048321918567794;4.0782390775743078137;-0.55281431987320706067;9.7990783106253402934;4.0432478921228316437;13.454383535311265518;-0.20451336823661958597;-2.1648718029790510187;1.6671139970664774488;8.0847641225991022651];
IW1_1 = [0.95800954876882382649 -1.0327610118376762127 2.157894185526074704 0.6131885001407199054 -1.9067517019160160618 -2.9427353950199730548 -1.2454451413506779645;-1.3049520780877779114 0.49346325416948200182 5.2024541192082836005 -0.66309108858306542444 -0.30991768827159416055 -0.9375891004957394026 1.6916030488405191523;-1.7065188649503981733 0.89492612138352822804 5.7680811794375204116 -0.7220164944777266447 -0.32075601696323607914 -1.0136361082886762297 1.7867106395879543967;0.88011023168560609253 -0.86315097820494646186 0.088873889574555720028 0.44173362962915424523 5.641187132872046206 2.1757311133819552396 0.90209016165784194907;-15.216692228446914825 4.9483913225954196946 -13.509706288517795869 0.3564172557287152987 23.769757466033656357 -3.1740957157005871281 5.1589576474214373647;2.0932514337054923814 0.95775335631640601264 -1.905506732048217966 0.59646072471418554173 -3.1828716678917836624 1.0854630747970153148 -1.1121253151112939772;-7.7132389164265475756 -0.97875114523250561493 -4.378710931929925998 5.1357441415729851997 18.439130424074203773 7.2088958048889253405 1.4681986065045475875;0.1609692616778670704 0.094899604646031754385 2.6524258946448693308 -10.420420658494061072 -0.89451110222569818475 -0.15718633510723706292 3.0888436638023284431;-0.41405224511392474396 -2.5277144472524208929 0.97456443225211852877 -0.62349222787282332359 -4.4615981672072999586 0.37263964431285351298 0.5581218841274742104;-0.31721945936080520045 0.2760110937290236599 -0.57566642810836343713 -4.2924563257858538989 1.8893394986971814298 -0.68188753646663546881 -5.3214731056752899718;-0.32913632412660326354 -1.3719694996930031916 2.4235397154354152427 -0.51252813507736150189 -10.97228195136192852 -2.1843104601526350805 0.73474182872298199332;-0.2579756880576097311 -0.38672386516073692375 -2.9064726822136770501 -0.35128880255359695717 0.099228634525190595461 -2.0938445988274740905 2.4820961282455655805;0.69226257397418988759 -1.2058112414611508179 0.0043698188465077902193 -2.9259777002409053104 3.7940699561040043264 -0.64437452591832122817 4.3338485238360888729;-0.22649290339494482227 -0.091616967011162869783 -0.96985058910861587922 -1.2006103179351681476 -0.011047942783399178693 -2.6296979015128760793 1.6778244183969572845;-4.4295114108869331204 -9.9122635377538550472 5.794566442850051402 2.4468939197648542638 -5.0355317925555178604 14.065816445222827369 -2.6669045843626122405;-0.78750447512834309549 0.73282409058185205009 -2.2198609780761433541 -0.69928335276728237346 -0.43909234672669161803 1.8925507162066026456 1.0717560410543252036;-0.24448696783036372171 -0.25708430319651021101 0.61790867534478399747 -0.13273880390993755829 -8.8199685192340826489 -0.15997088790176031137 -0.55017947523283972089;1.0403418323602440232 -1.075729675463141799 -0.50862238458183206546 0.93704705897839157824 8.6051447623734187431 1.2573084828520071365 1.0648259518894214182;1.0013140196010033023 -2.38993253476603007 -5.0742819387561866051 2.9090486957235244247 -10.118818456406156514 5.9028356214381938472 0.22174621021003079746;0.22518009592870108504 0.18216925836110070547 -0.48301957749329099689 0.26019826444452992531 8.0176163961807702663 0.10836450248074795677 0.58594752204813704832;-0.41631055172211683946 -0.02649068008653478884 0.2320305988651059359 -3.5436868585018479472 -10.714583899068664152 -0.20508258620075928147 -5.0324804150325919139;0.17183703878236175622 -0.35969704500583066231 -0.68979449018659078074 -1.5629774358504104903 -0.49077096173294143533 0.40475169732611376849 1.5525820199634894347;2.2444510807288446941 -2.9599947116664697688 2.6538256009347382935 0.9229867146618857543 2.1985594404672648139 -0.24068048801934385783 2.6549721353959743197;-1.3596451346005709038 -5.2847880953164372286 0.72955979767559464566 -2.9977287185785383983 6.3809770226292910067 3.092669109676577488 -4.9196329692226665742;-0.10431565465479555876 -0.0067087747749174902329 0.041829602288176219449 -0.30266843937194432002 -0.10224467369359113711 -0.49679183684246552843 -1.1059599009286888993;-0.49190388569363130422 0.0537470561503119032 -0.49994157795325511184 -5.2434472023984692868 0.1991789586857670713 -2.6362233134557677694 -8.5963335614089260162;0.71612592407815844897 -0.25429951303504688687 0.9896410566262343611 -0.28753950078113033051 0.73925759716797478927 -0.38960508281105260542 -0.93742706791854957249;-3.7450487827872231961 -6.5845480914246730109 1.1798613337935350831 -0.59540793434531980033 -1.0467619757488453303 -3.4733810504713842349 6.1809206908546165948;-0.69084723117548574312 1.0790878163164565606 -0.85927284249426783003 -0.47199855100158927268 3.1958378767106472296 2.6559900208475943906 -4.0261982451609847899;0.39146463382325907832 0.010188641622603565942 -0.2011396625907504454 3.7579285484906819192 10.238471370093527923 0.2477804726581352146 4.8738625024330062274;-2.3625032160478500742 -3.9050342727676796706 -1.0662508688910647958 0.19838666589197367918 -0.93574272298378080581 2.2464848731070476973 -0.8611064477896842595;-2.0926186867872411668 -3.596839963195002543 12.280218895705377946 2.5074356838294584726 -2.2707309870990499689 0.32658271364922314417 7.4065758211494934216;-0.89846042207666088064 0.91753788327543872594 -2.1384882556613247218 -0.60696388238657061898 1.0821720783548649525 2.5165279379334855037 1.1318698974877732244;0.60587258384181941206 -0.64123772053542682503 0.98736172554764767284 2.9889961418605843768 -3.0440631492654435242 0.66402769049896603892 4.9486867569794146249;0.23478133521632338354 -0.20515944499023500147 -1.2972036978959213815 5.3179950243097184881 1.4364595377370643625 -1.4649793761989582386 -2.7318311055674731058;0.3587258370435554844 -0.14355182934902704917 0.38462877647243626233 7.8675494377300401183 -0.93063409885161885171 0.73628057016422809866 6.1090035217409672796;-0.90104722472599763083 0.35903674101287119669 -1.1619004178947094363 0.14078339386359739471 0.81648073196288528663 0.33149796530839920061 1.0683785288438927275;-3.9510815222016586468 -0.89369772321017937333 -0.35769516721949157212 -0.18890240993681597925 2.8290266018226564171 -0.063159475695591077438 -0.39823591593300144975;0.074374630891299559066 1.0279975468673234751 -5.5619176905110423448 4.6332990323696527923 0.76849557972519433324 4.740170430072899066 -8.150611482827168075;-0.14701582456750417194 -0.066084925874976371829 -2.6682523424202000406 10.010320469002616406 0.72760019814555187967 0.37616745358788772347 -3.0151383335471990677];

% Layer 2
b2 = -3.138006408410153103;
LW2_1 = [3.1223173600813112216 3.3829010583944110202 -2.8480730400624416632 0.6389053913486184566 0.039894675347375598007 1.1444409510998156954 -0.01815811577666319801 -3.4427234831620259214 0.17254830619483696452 -1.645014013284431531 0.27306961787334421699 0.22205390268214084126 0.14435926337981710987 0.38284426710089070056 0.014972231248493400244 -2.3327951668797268781 -4.270106738395786472 -0.60806263039827168626 -0.021693107416624307637 -4.3798068529697786744 5.3997359929159935987 -0.57696662274411636417 0.1320835727121715264 0.016165580435827928141 -6.4909563482911742938 0.76297016475527545953 -2.6843733923643742223 -0.024006998552321474893 0.14612358679004733286 5.6515772855193864288 1.977574907497641199 0.019597926302977054791 5.5969467812302422516 -1.2122639634191831881 0.33101400857543555878 -0.41098399648197669887 -2.6059760499108786114 0.027872737930698616993 0.1701240224893082742 -3.7127948253722951044];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 0.0470499670650231;
y1_step1.xoffset = -0.28;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
