function [Y,Xf,Af] = ESPER_oxygen_4_Atl_1(X,~,~)
%ESPER_OXYGEN_4_ATL_1 neural network simulation function.
%
% Auto-generated by MATLAB, 15-Feb-2021 18:30:45.
% 
% [Y] = ESPER_oxygen_4_Atl_1(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 7xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-0.999999996490807;-0.999999994516886;-40;0;9.1619;-1.99149636107278;-0.52];
x1_step1.gain = [1.0000000017546;1.00003626070655;0.0153846153846154;0.000309885342423303;0.0656325902039552;0.0604107502911417;0.0145232735458572];
x1_step1.ymin = -1;

% Layer 1
b1 = [-0.9794161914306520611;-202.26120992399836496;2.4056086511756329394;42.913932214422736422;-11.425430344156346507;7.5889888953411661632;5.3952996309348852932;23.273325614313097986;-2.5597740076626753769;-5.1471917478656656897;-28.68214811095765171;-283.96525855131505978;20.673010694478342941;-1.643316189865839938;-70.29970197010402444;-37.336657392466136685;4.9353875196215506449;2.3466861385992876521;-4.9975310046273060394;-64.55132142709776133;-0.40496033394902475333;50.414996613839761608;4.9942910272637792701;-439.15829157110601955;9.0869155806307357892;-1.6528212604315897227;4.3120661009275540465;3.6342347474739011837;-0.74387835557833148492;-2.8795757966602999467;-5.1719208352058654299;1.50952995964141512;-43.417616771467415049;19.299681637803494993;-13.560559510871549094;4.2421257058129171469;11.081148584357427112;26.390692917621091595;-62.285748372304695408;202.28205735017584743];
IW1_1 = [0.36061403366479377608 0.30751369679031398396 0.44570926094995783062 -2.6751818002936524898 1.716108826137524801 0.22967985036497279294 2.7350149673750907553;-17.392090032734866867 60.533145488118641708 -96.731555809782449273 4.5775582108163783701 173.47236590042848547 -74.16631053522760908 -129.21902419332883483;1.9725182350519827601 -0.84253593086651745736 2.8082363550104134653 -3.7477098502217915943 -6.1566198674996863716 3.0648490047585830176 3.6825103185288119434;0.37600092455390632384 -0.045800112899277010958 -0.41729670278055258636 40.375224473195849839 3.4135606309863528729 -0.66818407625381470716 5.4475309013749919629;-1.0340188502066796072 1.3822436587804682873 2.0017632483027334445 -2.012247921038936127 14.52426947136072144 -7.7440260144269075226 4.4350148595872331825;-0.85750893358508573083 -11.751630977292593982 10.295021836012185901 12.690122195385168169 -11.217833663563981261 7.9767623592342298267 -5.5802453747263029982;4.744377119533169207 3.7674109663758330591 1.3195048346609141721 -3.1602444451039071183 2.4145031502598137685 16.750899911511108797 -14.842468766222710386;0.2034118815469310726 4.3920764382525483427 6.7431910771947194405 0.030665070534641805655 -17.112689056092904138 3.6292382047171134474 12.745525123158643055;3.7805220610184782082 -1.4197400960154629157 6.9518336466229815329 -4.574894021554376522 2.3893118207491306215 -0.74913827106839070424 3.0148588728958625182;-0.11063903340448819068 -1.0396570914664522434 -2.5316036730086239892 0.92984476385313785674 1.6154772796196843476 -1.8967891745176388429 -3.1902779911931054002;0.21268857547030842192 0.71091026955088720829 -4.3655064066721536165 -66.297224597676262192 16.333609195121109536 -0.38098139913391049216 46.042083504232614644;-118.15502698987992858 -195.60431885994196932 -126.38124317777263173 -134.0502014834826241 126.99381984399933287 -296.73134103166842124 -15.438050277070713534;0.41422104246451341147 1.0653135674071982919 6.0255850269005426512 -3.2356896627196309879 -3.9590453521477964038 13.690547346489831071 15.387766112187460266;2.4801216950506437264 -2.2197868779314102738 8.8591366870569778769 0.1667889016426405413 0.81814234984169109666 1.4359930606032560441 0.49139073734650512426;-0.15222780621779180565 0.94890624838643433669 -0.34999204893555746487 -51.26923077615604285 0.32352409990567293496 2.8499057979998871915 -18.328170691170292628;-2.9101470144241350368 9.4449413381831544001 -11.852001540572715044 -25.488739136905763871 6.46984476156442323 -13.516930868807923716 -24.667346996075991683;-2.1260202213105987568 0.72087830773326200262 1.8871037818698348509 2.1006822706729275652 3.033109017018018605 3.6461778916712246357 -0.1710453368013211406;-3.01664414668660541 0.28000979790746416409 -4.0105901396049743468 2.9404166666432702826 -1.7225705149072234601 1.1461435670339110704 -1.1509252217489671644;1.2182561413698504982 0.1865384420219080297 3.7937762779330563845 0.32545388374929590247 2.9257280041213111765 -2.8666223951658849067 -2.8693715229511838061;26.593525377370429652 -18.19871237825117305 15.603332113879881504 -5.4979215304817596888 -115.69741919922054763 -8.2614690651850199998 -106.82661928881245217;0.094399155410191337712 0.079129164169083582303 0.62142500830451696814 -0.6252020525361784431 6.2901548614464912745 1.8499476305889988037 4.7670273040475965587;-16.327036321603983993 29.895958654242779318 -36.395262278969362058 -5.5544917034358389785 -48.24790567044872347 4.6036755707167786866 -4.1697186629705838001;-0.24246358708369450397 -0.074626557125454309749 0.73891499912393532323 0.42903846030647035947 -2.9097777482432323204 -1.1538651068468934735 1.8726799819353732168;-11.354230660833570354 224.3373702975370918 -311.82669071568727759 -233.76335789466585879 510.76756619664354275 -331.97982965522618315 56.420113073384477786;1.9273740952799160997 -0.38642363012581198989 -2.6063583742124438736 0.84334074251636303998 5.8025108313145095096 0.82231672298438018842 10.64314971393485898;2.4912424573232954117 -2.1689608119935184227 8.7425956967099942574 0.17102979975199333884 0.84229150439599154154 1.4197275698902984686 0.43690629556216387108;-2.0397045836916487538 1.0049821479873177754 -2.276273851893886313 0.65197899413427018445 -1.6546866922819793988 3.5256728293274828268 -1.5652360656048460719;3.482821133783726264 0.38970465973944540261 -0.49921672382110804378 -3.9261033072291975365 -9.4701340709152841413 -2.2535063752669226567 4.5707924604859178075;-0.80254981460646446223 0.052944909986352595155 -0.43832867233065297974 0.87855168371201419752 16.722034393707726707 -1.5317003268291027318 11.931314094190431874;0.72172973377173632592 0.49359626117897342779 2.0053315556723823043 0.56983577003835217401 5.2477440308502485422 1.8169143450092619663 -3.1197198340045879661;1.5409893403781487198 -0.39879597424658630445 -1.3114192447500865324 -2.1264667199636719808 4.0821086652898133096 1.5623820708257074585 1.4759387755922708241;-1.7707437243877841571 0.81977112034674559649 -2.6833769882328040168 4.2701254260246583883 5.1088787303687945851 -2.6417296087916617431 -0.72619404811649768128;-3.9245008790978017643 -17.063938867896851548 47.867243132050433019 -11.753728542777622579 -15.372277260989623215 3.5613626080237255067 -14.244955345564765281;7.859990573769350064 2.8019688303051921707 4.2115522666566009846 6.6776667763383459331 2.8321628696905838396 0.98057919932741932634 22.28973262497063601;-1.4040628672497084128 -0.047290931913584431656 6.9076965714152738229 -2.6716927889602133384 -1.214938291754086741 2.4825546102906179691 -10.607744794696451152;-3.9340929449463097889 1.5395382416606595566 -3.8158655112451391744 2.9321899121846648484 -3.1117884583127866094 1.5652457054442503459 -2.7580881804709873606;0.2423214609924126961 0.18525322710384481417 -0.83414206878388852395 -3.9501262387785853747 -17.345213192093723364 1.624353021275095621 0.68485178999200080341;4.324613528440304222 -3.8108633027710254737 9.2707871763037452695 8.6341080300848602747 -34.770564005681798392 2.0711835370508442367 -6.2504772429904429387;58.859347098334261261 -59.425256877258469501 131.21289588214477817 -85.705117922059358193 68.971007292728288007 -10.792722966912398519 103.26450098268924194;-6.477296915846435077 -6.7707371777347962194 11.339594851705589562 -11.943809087757985665 -406.36694561945233772 -84.636859425526978384 22.865507982901085882];

% Layer 2
b2 = 0.40824692549334329339;
LW2_1 = [0.093888585935611487687 0.0021366175786158994945 -0.35222561908113481088 -0.12753706512813953178 0.067418020192207786523 0.01501877469989703999 -0.00978920460116639371 0.022244309765430757275 -0.076119110740004075621 0.11648134242069363431 -0.0096568614760691555421 -0.003668226753699402494 -0.020134381933733139225 2.4766313425366059953 -0.12992996020804375989 0.0062745290760643215519 -0.17320291375608762308 -0.12484217437691852437 0.11952808787699738258 -0.014616446053951672943 -0.10840750798436252222 0.012505825964880592019 -0.47619566929946732792 0.0014884599424483523512 -0.092234050344958448675 -2.4982443984621678368 -0.10631489204134954296 -0.039736859336347712945 -0.094464884681065522387 -0.13316560425124329692 -0.24135112942119144042 -0.4255895261983964617 0.007469124001197085562 -0.01029512376431856481 -0.069480650849558053817 0.057139386615313703111 -0.088645230743284356145 0.034463582192283362393 0.0087975807334258592646 -0.010838595889197430444];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 0.00368391969055075;
y1_step1.xoffset = 13.5;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
