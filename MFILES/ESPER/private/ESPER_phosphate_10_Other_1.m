function [Y,Xf,Af] = ESPER_phosphate_10_Other_1(X,~,~)
%ESPER_PHOSPHATE_10_OTHER_1 neural network simulation function.
%
% Auto-generated by MATLAB, 15-Feb-2021 18:30:29.
% 
% [Y] = ESPER_phosphate_10_Other_1(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 7xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-0.999999984769129;-0.999998793562952;-77.961;0;29.715;-0.9;-2.02];
x1_step1.gain = [1.00003298043486;1.00000060321889;0.0138606862425759;0.000266418009857466;0.193068829037552;0.0415843642790311;0.00819772922900357];
x1_step1.ymin = -1;

% Layer 1
b1 = [1.4561723253107670129;-1.0074121693870004002;-2.9246035505999690152;0.42349614384080463969;3.6368169963676715284;-0.98101875609359767694;-15.164746829364316838;1.7560609360210934771;3.2907395130970007457;-2.3500978042102111942;2.4505426787955761903;-2.7377234658417815005;-0.33885691672296675003;-1.1964825942818022586;-1.0980878967228684395;-0.29627452738339676852;3.6500648222982237101;1.2317262716109840248;1.023799267892252951;1.6128417625519624323;-2.0301728675255805712;0.11333170526069323569;-0.94762580060150602979;1.1740146211578654789;-0.39394712392332836837;1.2597940007482086866;2.075533920783033448;1.712812941764703778;-1.2201598261041470828;-0.95612943338229627877;-2.0822252887910992492;-2.0987978901435728751;-4.3159546473643155551;2.223353653689480236;-1.2923063176258586804;1.5581516881735864022;-2.2585749004112178895;-1.5740401743774776744;1.1717895224957923794;1.4851076025913025891];
IW1_1 = [0.99404381126011132075 -0.38772058504618289732 0.042555823330427164364 -0.17410837126602390912 0.28164359828646856609 0.56887950460709979517 -1.4238223820564608335;0.79604002208664104145 -0.28539071570640200948 -0.83740259181928311527 -0.088585682457405612311 -0.10617458653641304034 0.42831652997452618337 0.76329992875286001297;0.079035993429433640256 0.92591898886328627416 1.1200132306001533422 0.90144929255771044652 -1.5933562531139124907 2.4544709392585559726 0.073502694610192986779;0.90462459468767419946 -0.51262167637045386037 -1.2276073603320658556 -0.18172935018148611563 0.13287937686383985425 -0.546054067344769134 0.38208740344812869294;0.77255389595575152395 -2.2964841855076167931 -1.3369357344830337109 0.9729509675422776116 -1.6040792313335219266 -1.31101047226121592 2.5754165137920987938;0.80872159244386199184 -0.30873640463965862368 -0.91415367314661299947 -0.10224109582936079244 -0.035919085858561301816 0.27496817071875129246 0.73756533389685230429;0.11449138398044662879 -0.15035907751581981118 -0.18513911675171063065 -8.2513031503245262144 -0.60008585807417647029 -9.9372325550318620913 4.2729837688989258382;-0.073160134968167728209 0.60420557923072570894 -0.50201757918320200069 -0.86177178296343881492 4.7914082468930629943 0.073199152591436111859 -1.1069402155296206303;0.64293031657104438015 -0.59682091180067808889 -4.3930448381413294001 1.1739977195891535544 -0.13528255360478719238 0.10365194936917866697 -0.15454282018790124753;-0.48066826912551890993 -0.76604157337730727217 1.9662316453850519071 0.82389625878355365884 2.8085208670036720946 -0.052509675255594169541 -2.6488885296152626658;0.30391519666895588925 -1.0879715047500899683 -1.2157882385079308296 1.6977409815292876516 0.47037582239634062597 -0.23775540353114313352 1.7154871205660202627;-0.47919474137349249432 0.38498003208753217574 3.9743238278494330551 -1.115532840958096239 0.43187699865879958239 -0.16460360259704034935 0.17633283710690353385;0.14159252279694853338 -0.31009400337898490596 0.81993257727907775667 0.23847437704530891067 2.5264432151508802171 0.027509464687427605256 -1.148724285501279363;-0.044628299301817074551 -0.40519076853528296356 2.4179813855646608012 -1.1002260715016154435 0.57703929916847562787 0.50407035287111856547 -0.29928242630246165712;-0.024478630370228626756 -0.41397543144687265482 2.0396616740232778042 -1.6763910347311892224 3.4407925496324511805 0.050553685106411110073 -0.096789925588378025734;0.087841960495375973061 -0.27670258028873634393 0.90862114633408574971 0.27474806854216760055 2.6830842062787327862 0.050346779039018477175 -1.1735676507756194198;0.735926672884897215 -0.71049635491924334474 -4.6805105713753851759 1.2585571359507403688 0.1642269340012507961 0.045491717106839163476 -0.16445761327313970779;0.034303950220359112622 0.36396483799798706738 -2.514185635507625971 1.1012053918262669772 -0.39018299059050026711 -0.48277533726089938426 0.24161066312293613678;-0.59808568165115749693 0.96745616229086284221 0.22299632163994534406 -0.083238343539061301901 -10.100127219133694823 -2.5272762503875183526 1.1670584212556784909;-0.1372032098195274108 -0.18724754364224802106 -4.619393945761766318 0.93123805499358058846 2.7492611736302370318 0.1775603740249561413 -0.96269852000617550658;-1.8721611955385897286 -0.72791839633008015298 1.6919964086621461785 0.24655098539635114663 1.3622839148651726404 -0.74157871493554672337 -0.23118878242999410522;-0.38154027829532316529 0.39645372758341668185 -0.11812675430802589693 -0.096698815150572436927 -0.47391452007321155371 -0.99797526825040017151 -0.75782617421431019977;0.49311558000500849142 0.22296750312893476309 -0.10801841543864885986 -0.063498713652814467445 -2.3879519818470948955 0.8744536861527761884 0.99252743223452100096;0.016264169409767041674 0.36015737295312910682 -2.159377793523062472 1.797013716224600266 -3.7815117322215203721 0.02463768651673688484 -0.019874250035107558776;0.45253611116950059889 -0.99173704076707291932 -0.031410119068608730042 0.3104393546403597659 8.4654242326147883801 2.0076895300470969374 -0.64003056589033135992;0.0041988413504057226985 0.31097990851012535796 -2.3188295700375878283 1.9452746518634504991 -4.0924840337538768154 0.1254884369466114924 -0.17001850422999303936;0.49479997896957467196 0.11898530145666902369 -0.5233423472684813893 -0.059209467688725425649 2.8833882735888818338 -0.27808720769435757436 0.55409305849298262636;0.18415564494821698438 -0.60671841241979518333 -1.145552977098132752 1.9244517068641697755 -4.1201313016739709028 0.183057201052380214 1.7855927830260576172;-0.44676820816016332705 -0.020026534899795292444 0.22844231148605165238 -0.0678637338818926239 -2.0749091901273080119 0.12839546024890827192 0.45732192044206543269;-0.44224647012382450884 -0.49429270255214169394 -0.011445945472545017776 -0.1150846440139220439 -0.39074705587761016101 0.050678861542309744381 -0.11753310706973575661;-1.621421894249393425 -0.67494940826106009091 0.56870393867832791379 0.34626971509133125382 -0.63354037429779286317 -0.2469051851403804565 -1.1780377703344475648;-1.1503042922411061966 0.664715320869400772 1.0912264225789016781 0.383034200372484257 -1.530099202438917283 0.6763692997348172975 -0.37085113318571821805;-0.34902152543865139211 -1.1333359329190968445 -0.56390305730810574847 0.1927019870349773456 0.21885158181688307844 -0.31402325579118661736 -2.7826088688373240565;0.45263491169388458957 0.14728419153988839274 0.0070569617607877275708 -0.63041036650868198521 4.2392216271965006413 -1.8697726031712877948 -0.43485872618353665908;-0.25948229184623938792 0.30521877022079840769 -0.76111448581281493375 0.77174586789969823464 -0.56167454000141503467 0.96312038450242054566 -2.1453309849791684094;0.80941658603910027203 -0.24488843174198562935 0.1567264008118903762 -0.49031756563149470063 -2.2550365985447524686 -0.28121277787880866184 -1.2980728844777322806;-0.27822306674824748285 -0.12623376783210166208 0.039595421158540845818 0.64441287326195828555 -4.4981403366912218189 1.9556407760395666529 0.35163590705382619106;0.079650854413111538133 0.026932275883546338835 4.1949854042813292665 -1.1178162773188549117 -2.1148169326596644169 0.13624225617044252723 0.58130924862166233336;0.31780559036153116503 -0.1463140519544980922 0.20396532595155170142 -0.1376154497701436441 0.47428901992836619561 0.17673618743487348737 1.1901911385702768076;0.36882892245134729636 -0.25501748111882721615 0.31392215798587996822 -0.16531174591025335485 0.84006513626788603677 0.22132024468997177347 1.3542849378649901571];

% Layer 2
b2 = 0.024253336587297093241;
LW2_1 = [-2.2657750932187430415 5.5536609308590216827 0.41720579145312219893 -0.53366517034463056834 -0.095313962860926179643 -5.3682172761168347463 -0.607496878843111765 -0.6301017937393084134 4.3709230581436564478 -0.46835407875449180937 0.28443116417715941235 2.0161033656537901138 7.8208347176038097714 6.132360642841915066 -8.0273620072821731952 -7.2441867647168347588 -2.509601132169455795 6.3590999983250346972 0.30960210058891241003 0.44734740107399939557 0.20141140942333687902 1.3143714484602311288 0.93504442122942743598 -13.254738826312625122 0.41347546329000112175 5.4754476772302700383 -1.439795041185622404 -0.28888753097023889271 -3.7583086509108776241 2.4259662992055175401 -0.38318777943788712159 0.90610638949830457634 -0.6744314780803649656 -5.3711990932553872469 0.48025304237158572551 2.4078346552640925715 -5.2648759327059151403 0.72703011092514513436 8.2413177066329605935 -5.7548034786453756695];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 0.568038194888224;
y1_step1.xoffset = -0.04979;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
