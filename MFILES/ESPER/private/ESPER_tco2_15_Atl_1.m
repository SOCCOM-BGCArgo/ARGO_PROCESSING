function [Y,Xf,Af] = ESPER_tco2_15_Atl_1(X,~,~)
%ESPER_TCO2_15_ATL_1 neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 12-Jan-2021 17:03:59.
% 
% [Y] = ESPER_tco2_15_Atl_1(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 6xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-0.999999996490807;-0.999999999390765;-40;0;9.1619;-177.232103709389];
x1_step1.gain = [1.0000000017546;1.00004398834998;0.0153846153846154;0.000309885342423303;0.0656325902039552;0.00425400504498441];
x1_step1.ymin = -1;

% Layer 1
b1 = [-8.5424743914699732;4.0212324458955893;-3.1780725216979007;1.1670192089974472;9.2157803186241054;0.0090434169746797105;2.1936916315473218;-0.39465908105196074;5.101859801750825;1.0962856358022863;-2.6508722376580658;3.0485443189664676;-4.0622219226783649;0.49265664171788159;-3.3049024404534229;-3.9977442433672374;-1.935739741747547;1.7527980421157623;0.57512422798786489;2.5314722903780198;1.5065805770286156;1.7096087603497865;7.7122988993693138;2.0817345569698928;3.3967428735498713;1.2091841879804328;-1.0321680412430032;1.6336669028708655;-0.62275909272690499;-0.36787571092552784;-1.2315312919214694;4.9547704592317858;-0.75368503382698704;5.2461823748038148;-5.0111055950211627;9.5680284561288769;1.4873545561371304;-8.4141425131351202;-1.7788331106552173;-7.0119696198074672];
IW1_1 = [-0.779775235369083 4.3661301063521796 4.410289176711089 -0.036177727975702546 7.9452239639296822 1.0104418695873625;-0.34744359252290064 -1.50705657836336 3.1537502847689343 -3.4764051092371502 -1.4325760953360756 3.6712233146151294;0.9534709806420949 0.0079773494752888516 -1.9209338642071765 0.038162961462129101 1.9600945897400772 -6.1415680093749367;-4.4628451145772399 2.925483628020086 -2.1002081173614471 0.043966567615651361 4.3488174084310991 0.85303838831639411;-2.1474147606082403 0.73830314755903725 -0.73873703204041663 -0.41355075235144501 -8.1958739177895783 -5.3779071287602287;2.186937943831146 0.34072099128056299 0.74184002323262355 -0.18642972507695238 5.3469079213313675 -1.1464388824640597;-1.8650700865684926 -0.59141409834085112 1.5278990292910535 -2.2598808594905768 -1.693559892818421 0.88147134670841099;6.3824421719051516 0.3633933468783126 -4.3059915532894895 -0.10842281358660719 -0.64863961185338781 1.3441099871804616;-2.1921142161994416 1.026440492399709 -1.8719525266417123 2.0340012448322957 0.67145084882736938 -5.8396462537849212;-0.30085941042275394 -0.85939388491046076 -0.82856029797119335 0.045672665995789896 -0.70898716523841543 -0.46258805065326553;-0.55874915204623632 -1.963930319880028 1.2581441341744095 0.73917194381320572 -0.81182342605738445 -5.4601130526168822;-3.6134146202299542 2.7575107011668201 3.7255812426301058 5.0861061817288862 1.9029988171842922 -2.118871549646927;3.1349424369206682 -4.3806880340400394 2.26231848249311 1.9736355449264158 3.9319336395827049 10.552168649510451;-0.12876601445872382 -0.59832990291967958 -0.54021707254313822 -0.0008890561977111511 -0.023886774212081859 -0.32815262753190849;-0.25238856237704194 1.4631442338036516 -1.1015343842959029 0.31622926808556734 1.5846102169534115 4.6106160182712914;2.8797335911002238 0.4985039316198423 7.2536374052677761 0.32282224206258248 4.7724662707222638 -1.4213336249029758;2.4061751986792084 0.018154436549596056 3.8714763344712733 -0.6488082419732033 -0.89622230516505164 -1.4022115399374078;5.8902951022162471 5.116503499414339 -3.5395110331754092 2.4742054818738417 -1.0141212466758325 -3.6263250739793804;1.6755230296567722 -0.12553517123563812 3.4574246860383973 -0.80798197995173116 -3.9425893741703542 -1.8332127973778443;0.50274530948454577 -1.0388489003871468 1.4936479619481 -5.0221430870207433 -2.6391523650484108 -4.1630973344656876;-0.024843790522300048 0.68172800947631995 -2.1577061658089778 -1.3742745045829228 -4.4743192473451288 -2.0412041880005125;0.75222814041314257 -4.291410043991382 2.1512871498955777 1.1789100698957873 -1.4587699869930097 2.0820336997621771;0.9732431231023132 3.7017556616726219 -4.04737454173807 -0.021942614811849604 -7.4334565548460718 0.16056520051157311;1.1250879063463401 2.0514303761584198 -2.5083145447749464 -0.89995174202641393 -1.4659215941923114 -5.0295106303833554;-0.17637470519604809 -0.50141980666609076 0.18244023127237594 -0.015112270808249281 -5.9515477421718268 1.3472722241520594;-2.2117048000459745 -0.60112483327895805 1.7707295562697991 -2.3753460594865938 -0.39938307957095409 2.4805815896207477;0.46542315421460484 -1.1254936997902956 1.7734721038940764 -0.87811969534861589 1.8043245371375163 -1.5682430246597434;2.3849113207738846 -1.7351383968109593 1.1991145251748148 -0.034413578419379302 -6.2119942241682269 -0.73361584779833888;0.49939489610510601 -1.1419231611028278 1.8536462697348142 -0.9329735587268857 1.2351698924459356 -1.6431540679864125;-1.0691602180769684 -0.47525397089699378 2.4436613467098347 1.3247769272381171 4.0990979695234566 2.8150954703521056;1.1155538994446534 4.271411999948568 -0.83104344095884475 -0.4628175376770633 7.5119433882041795 1.1850251061360895;-1.9090235435374672 0.4952525212183464 -5.4934003693930116 0.52956634279454973 -2.5443801569824913 0.60563165008017694;-1.6859330490109852 0.076037409041761525 -3.211013805478478 0.84863954434179056 4.0513244699946069 1.919214366683772;-0.20898717068832126 4.2883391684647156 0.59945803279091947 -1.5107567279172072 -1.3867366400369034 -3.5094294613372474;2.7357384940778244 -2.2518375856839938 -4.363669954915907 0.80558942717045889 3.0749292539691142 -0.11465908081188814;-2.3816346131794242 -1.1566185145315853 -10.011788927219406 0.44887460518911443 5.4267830306076297 -0.33766757282159304;0.56204333042634769 -3.1968438086802498 -0.21227974741388894 -0.96226989895765935 0.7801013188650896 -4.5058612494168937;0.25911749669662792 -0.47422721295417875 -0.27444143862752718 -6.3734132844401143 -1.6067089831506365 -1.8635337062271597;0.72648538678917018 -0.4002191950228427 -1.5363908060426941 0.13133348571507339 0.44898606508326205 -5.1436353145314389;-0.42594595391317536 -0.42104065387365974 -1.136691125060566 -0.24016885772982416 9.5138551129148876 0.49330160789396948];

% Layer 2
b2 = -1.2949768358087932;
LW2_1 = [0.024810348605275472 -0.0068726686293751477 0.11477900596778733 -0.071153059051801526 -0.050534087087001328 -0.22913143601001851 0.094426923942867946 -0.01614294845128568 0.025198502884954812 -0.9681479048186945 0.087402506461962168 -0.0035359809376542062 0.01839303326409299 1.5322877941721056 0.022135071464749002 0.014404311198968556 0.14716871284866162 -0.002471933429647698 0.78021963652579429 -0.0075398562072063998 -0.18221782069588099 -0.034873808962268403 -0.021842196043294768 0.02070918021482801 0.11416804434978856 -0.084270208488115714 0.71690678597036439 -0.20225393013059584 -0.70952513656940952 -0.15800467394836923 0.080706809847284844 0.10100272793343813 0.8134337963085817 0.0099693098518981779 0.026135745146124986 -0.093753254226885782 -0.047841881135398792 -2.1427952973495366 -0.16278249841832984 -0.14453188131859107];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 0.00115315130997576;
y1_step1.xoffset = 678.286531932822;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
