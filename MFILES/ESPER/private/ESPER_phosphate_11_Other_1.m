function [Y,Xf,Af] = ESPER_phosphate_11_Other_1(X,~,~)
%ESPER_PHOSPHATE_11_OTHER_1 neural network simulation function.
%
% Auto-generated by MATLAB, 15-Feb-2021 18:30:30.
% 
% [Y] = ESPER_phosphate_11_Other_1(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 7xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-0.999999984769129;-0.999998793562952;-77.961;0;29.715;-138.904784718693;-2.02];
x1_step1.gain = [1.00003298043486;1.00000060321889;0.0138606862425759;0.000266418009857466;0.193068829037552;0.0042772329208737;0.00819772922900357];
x1_step1.ymin = -1;

% Layer 1
b1 = [-4.8838203680834491038;2.6688356155895398558;6.2068037795827146752;-3.2682001235513538084;4.3677425602426538376;-4.0019322693558176951;-1.6941187086385463001;-6.008494311829943868;-6.6730464239007014626;-3.7187476810413948591;0.44549729603268461986;-1.6528184818749398488;2.9889936145676467838;-0.27364093637158981576;-0.083876291422480153681;0.5219940474183741852;-0.59089882276101590719;-0.71781974176444074409;0.96692799397029427499;1.0706717709659165916;-2.5998560312094234348;1.0187682650115801319;-0.86942436603482542434;1.285522780055584624;0.46556888084318304166;1.0724688625843932233;-0.47017660781764125666;2.478441278584045282;-0.65311457136793382716;-2.6352258407733351042;-19.768058687216385039;-1.3129832891176307363;2.0030972308962966544;-1.5913882348546217749;0.72777322113388553948;0.015989586047485879888;12.749766141522417939;2.7600432762165567624;5.7512977433880942968;1.6542619311636670432];
IW1_1 = [-0.18833859903740479691 -0.82550870987257396472 2.8572007933718031047 -6.4442535677473040678 4.280733299129703795 -1.8133253966381532862 2.127284763116894073;0.0047742127364643529436 0.038122495649253067274 -2.3021723468690091785 2.9667749571689814303 1.9698359670229299567 0.96029527980161766276 -0.128510485078735609;-0.56446734555870814454 -0.26172408847396327891 4.7031979549925502226 0.58731922932398261672 -4.9481966959618155499 1.9683727368328507445 5.2924320670477218442;-0.65700425117856575685 -0.88175375402204125841 0.86382110940945211475 -2.3525423694232938665 2.0278045829133271027 -0.84675244866276211386 0.65727144709255558297;0.18034245038478785572 0.096412129806445812097 -0.50583895607550244389 2.6951698130221002359 2.159240256335019037 -0.017032757238775592112 0.47580628149896869727;-0.57430347767509015711 0.12002413669913079841 3.2746053077542431886 -0.36511216334360135916 -1.3639562473931161612 -0.14590166499450471504 -0.16967747792494938808;0.58967549104850991437 -0.75030563704787045509 1.0901046418630311319 -0.47390185036232307381 1.0260673222328073884 0.42128913638591980462 -0.69532040413672113743;0.5579202053751622925 0.2385042138173172066 -4.6374938683921280713 -0.47061865744423003743 5.0456882977540224999 -2.0986924372669886196 -5.2239888762208819273;-2.288040902981475444 -0.096313052606438034897 4.3457308520547126562 -0.20417887881036167474 4.6189349574337486004 2.184821279574141073 0.12073599223231284983;-0.61421348571275158346 0.42951546538278023712 3.4162972585227922018 -2.5091695327570144869 1.8946971836751660412 -0.31070590049680174571 -0.4517359068302029268;0.21460656312119008593 -0.070131419723756915907 -1.7720672064726377126 0.42527227501791636799 -4.4833253821897196545 -1.6045009449826197478 1.812267820048119038;-0.3007931042886916595 0.25897179076171511491 2.036165087186901701 -0.3692195491775805416 1.0393727122571287946 -0.96004151212729793574 -0.1157476421321251836;0.65510088068464711331 0.21993979109022240848 -1.2885390451436493642 2.3984249694339077053 4.0329314552819344186 -0.21338760557280059271 -1.235912100916878531;0.79661176343148187851 1.1474813257432383562 -0.1216673715348596807 1.6179081338045300242 -4.4666222715441872282 0.42138068637648296022 -1.1279539171316494972;-0.65267401721895879074 -1.9216543877942460217 1.466969487290339158 -0.10643892968429877199 0.48720233024080406015 0.62330610651892714991 -0.66203565286407572987;0.20879569226546143557 -0.047133412842719497882 -2.0661883214283665033 0.38831702420702879364 -4.7550218181908920911 -1.9210841091803430025 2.1182667723884462951;-0.12725548433711894591 -0.044471880795734212988 1.486851101922424423 -1.373735423833120306 -1.9827505326637888672 -0.064568149603229790801 -0.98129087908888357195;0.54645232167017188107 0.21932681414898674843 0.63108922404257938865 -0.71587967709656152859 0.90944699928153183155 0.61889963192915742329 -0.14300908745655699361;-0.22112050357420165447 -0.18028993451791056057 0.46838371536690698305 -0.70184907046987099477 0.89323417950786121455 -0.52566695212312319896 2.1263457667712057919;-2.860575763975254926 -0.32633893983075934475 1.5961300973660770275 -0.0097294003800691732098 1.2730837001751669213 -2.1265265827515200669 -0.73815909931930645538;-0.010264403667810822335 -1.0448421094450834889 3.5890867621780921937 -2.5586100034157674976 -1.7020397696100750817 -1.4818076760142324666 0.80593421485130889437;0.6920034229629167255 -0.99836898369704796252 0.62484669400589865074 0.61297651547724008037 0.74314626638017466931 -0.20369501738575043759 0.14442058128771140257;0.23556226693278420337 0.19640212436192300283 -0.29250511019516783895 0.62663389461464813479 -0.35042404664161486139 0.41651694385521742525 -1.8173191151112473296;-0.4701880000814473437 -1.0719359433139294957 0.66910853145353677007 0.75550644579327042027 0.78893576093336870159 -0.78180224324913405454 1.1371748951148352713;0.13122006499594865425 0.012886049087923527948 -2.1467498197357506307 0.78519731981053397796 -2.1505414051044517976 -0.78188832434619981449 1.6844260901366698846;0.056745926034718216502 0.43428699755190269816 -2.635833322876329543 -0.017700964728283245797 -3.228414281063269442 -2.4473963286224256208 1.3310809809915580271;-0.11867786387919242175 -0.0011965042743324811377 1.8482176118810378362 -0.83613754326811751127 1.6914145143049659215 0.64114650087363200814 -1.4592825842071397435;-6.2779762009384070254 -4.2734707834735514709 -1.9209869049676602248 0.75916055138069404862 0.2776537130734882397 -0.33263441218015205036 3.0501878355496776507;0.74548730773460691879 -1.0198978436996357644 0.086343689533666043157 0.4086361692307000637 0.88569334298675417294 0.30009928062344726207 -0.27146362616729391437;0.57540606961988238766 0.73442104023773768784 0.11613895997051272568 -1.1509675526970428727 -0.77271571405262262644 0.77868083243048558106 -1.6776741849712728527;0.32749104895525599224 -0.74331543284096834867 1.7972867244279246979 0.64353285552449202012 -1.1796518613094812977 -0.90861571562902299082 -20.814248766148487846;-0.071173709582601552004 0.040662570596890823538 -1.2404105218205891958 -0.031678409390122862221 -0.81290510037592511594 0.99882351569374272504 -0.70899549327000344068;-0.55825349498936438497 -0.7911045336017836771 0.45005761714157094255 -1.6905112756160152188 2.8166014049257528384 -1.3252735143401577211 1.6246625255244286912;-0.053225652990688716859 0.10287825970029755573 -1.7391105061765619322 -0.13263297958617470407 1.3674407625947997413 1.0189545690166146308 -1.1911166051699964008;0.24130035583367787089 -0.53042393948973065587 0.76426761456303604625 -0.066047786031184371747 0.56498649486648977458 -0.29096847682382148692 0.025778704860646577818;-0.49917753784682306062 -0.73540415943942427646 3.2703995465782949026 -4.177988525804354758 7.859033427309162434 -3.7861392023537452367 2.2552745968976708468;0.6346124806756124892 0.44543287130200631685 -1.3024719134698743428 10.80531171393931622 6.4476102114773956586 0.32537738903258928147 -1.2837202740055873029;0.23748763842465664409 -1.519731752480716791 -0.777276633220486457 2.4446980154069239966 1.5794545374621964395 0.61170379236642868914 -0.40035961579999373994;-0.086347761829877536788 -0.38927661839252308829 0.21687442815967095111 4.9251048342470813424 -0.61411103386166598916 1.2943730598479574745 2.7403140864804185206;0.67130424292307067091 0.73653794749063161706 -0.28453106448510523396 0.51836282039030789903 -1.4273519559543697 0.324959543170057652 -0.22154931492933044312];

% Layer 2
b2 = -2.1974601712337391568;
LW2_1 = [0.17309749032169655103 0.96378005215256890015 2.1198465068308873782 1.1174765455336146402 2.5820089688486804747 0.64206631116669088399 0.91080199282785734294 2.0900089922406133169 -0.11003343013055105759 0.44795956369741074532 2.4031783819840111249 -0.98735527035272707685 -0.25127832281715528628 0.16472410933981174175 -0.090744743785015249959 -1.9943821767212301932 -1.2049015521319357269 -0.6667471769664168324 -2.3620510475172173948 0.0551003514426404023 0.22800194459469430575 -0.44029554221909916745 -3.5688458744448263715 -0.24481315010007623223 4.193212719735330829 -0.1516470137577942412 5.697336267757456163 -0.0210886458129755823 -0.59698365991462765123 0.31539806789103586038 -0.09510791892240323675 2.0726788824272688316 -0.52528570826324716414 -1.0936108977582899016 2.1332689386827179412 0.10173132957144750965 -0.31148617235638087486 -0.20115631203053221943 -0.08904281246913958725 1.8353068612568079754];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 0.568038194888224;
y1_step1.xoffset = -0.04979;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
