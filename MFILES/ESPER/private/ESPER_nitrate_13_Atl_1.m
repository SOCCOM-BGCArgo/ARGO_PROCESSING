function [Y,Xf,Af] = ESPER_nitrate_13_Atl_1(X,~,~)
%ESPER_NITRATE_13_ATL_1 neural network simulation function.
%
% Auto-generated by MATLAB, 15-Feb-2021 18:30:36.
% 
% [Y] = ESPER_nitrate_13_Atl_1(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 7xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-0.999999996490807;-0.999999994516886;-40;0;9.1619;-0.03;-177.232103709389];
x1_step1.gain = [1.0000000017546;1.00003626070655;0.0153846153846154;0.000309885342423303;0.0656325902039552;0.604229607250755;0.00425400504498441];
x1_step1.ymin = -1;

% Layer 1
b1 = [-2.2672582066171447224;-2.6766957121143128973;5.7914618253882430565;1.2505023408879749613;1.0335530704858484352;2.0761794266527751063;3.7777454801222467573;-0.0088538613593674795471;-1.7328525524960909365;4.4665304883256720103;2.0621191080406728879;-1.4651639488787937537;-0.60405194644565707307;1.9792003301963121409;1.6822545140760551963;0.56359243235663658567;-2.6435586648398317067;1.7541801725184555938;-5.4190164433233221075;-1.4334322674859654168;-3.4718797008845063701;3.3200400233425475527;-2.4425435855754407122;1.2093751830173788964;-0.59216886000691515424;-0.37793809832793584524;0.36928150213581029115;-2.7535757350606417937;0.45487083448264986618;1.4704225545327558322;4.2381473073348487901;-1.6491861730436405686;3.1954258293486148546;-1.9755691945088613704;-0.86929519755654605095;-6.7141699151784592914;-2.6893410457642668021;1.2072904157574662065;1.6552786761926054915;-5.2560247174878940157];
IW1_1 = [-1.0350461322731745462 1.5499544337348967193 -3.3775847236481268965 -0.069466317950817493831 -1.9894313153704996644 0.58812275168918570767 0.055104550672602579942;0.36524142119563368647 2.8619594797856140467 -0.36262817502489685939 -0.34600567025104866925 -0.26736848631832860201 -1.8829173383894184379 -0.53676262404158969765;-0.62005553481588393527 1.7136675400585745788 -1.4717575033381951055 -0.41163740423761113751 -4.9033154838747003978 -1.1930434546153134701 -1.4668727297506978235;0.078257178402229565783 -0.7638541707257016089 0.65051652212124244645 -0.46699129637593628228 -0.89060688345456584525 1.0299956923820110521 -0.22194586743987604338;-1.4034755457459786587 0.4874260674241440161 -2.1550206472279334058 -0.33507841332404891821 -0.41214643778817416919 -3.5894222662725252526 -0.41498567035378053358;-0.15902955226318044035 0.21322319043306200981 0.038344240916853560008 -0.73165638622294559834 -2.6876146377092657858 0.67423699264193737157 -0.78533563321920185629;-0.27766869097108048958 0.17191476053160503756 -0.21203749092972837276 -0.92673436158225286352 -5.562514651202921101 0.1327272907572661087 -0.31233173813691206266;-0.51496301585848203164 0.23454779830025840326 1.237553578263842935 -0.12275106390880577423 2.0364633802471825419 -1.094589559407278978 0.39065227095771842825;1.2449249013628334026 0.052407919815427014831 1.3199748686529713115 0.032859788069552975376 2.2375791508498772409 1.5017385506144804719 0.57661790638271315235;-0.74924849438166829518 -0.42071917860122454158 1.9027906930068296809 2.3551505541271420263 -0.65304699637198670992 1.8417295751111268931 -0.36689834541681864977;-1.1116039680911156129 1.0311612507364522617 -1.1981500989254276757 -2.2370284161644966581 0.2431933947530395268 0.54348660606661669537 -3.8751424049033986741;0.97551777569211395313 0.20954160294366411255 -3.8038279695251802082 0.20222612775465928503 4.8277623319196676377 -3.1008529037201157941 -0.0046129190235440903356;0.01576218601862207358 0.059518357982213103419 -0.27977936533468705793 2.2092231011004548336 5.3591980027416807886 1.5523745484921891435 -0.17186581863004823933;-1.4012274312484549466 1.4121006614690547742 -0.25589868630778050962 -1.4872212116588305886 -0.099327095016574926123 0.92448872028465767237 -1.6313179500523677934;-1.7316695546444433873 -0.76849286259346594186 -0.43135037114204488606 0.5071908145559391734 -5.422868025605115605 -2.1936604715692484824 1.5120606830239136098;-1.574558010798583263 1.3705781985913216836 2.3219088376323635536 0.44419311327459737315 0.83368478872586604389 -0.08660325157978297772 3.3734479476594714242;2.2771036957546519908 -2.4188041958097339368 1.2097108265037048724 0.69210777494028519197 -1.6326473980677471687 -0.04347548637618985079 -2.9034023902166294917;1.7674797788239537955 1.0134655797151792544 -1.1952043181839533403 -0.41544823314507728362 2.5337832115011216239 0.48516004116970845583 -0.012102606480117700932;0.97986604473926308678 2.4333637815241004887 6.5031392109290413472 -0.72890577064644901384 0.93704064052510305238 -2.8457689050703751654 1.9418767042671936096;-0.6157107710296703118 -0.78683746438414337021 -2.0377091889461458329 -0.40134338410201209069 -0.60729942453854013351 -2.3700659029045363368 -0.29364277951703998681;0.41167886373407608369 -0.93687842909882435016 -0.86786873067406955506 0.10331418285923633926 3.5505715490164084791 0.70986961736591480676 -1.203982666294188153;0.12111364386424244843 -0.30745838031770428289 0.2004028002779586759 5.2547286297566353497 2.6440174155056324068 1.5499564159293399701 0.32502123509814445645;0.14032640627883585793 -0.084059077514958155386 -1.1774324330509493564 -2.6340384322310823606 1.9978061329320222494 2.0306071987555252001 -3.968121432804051274;-0.31094951281497595907 0.48449282587778430553 1.0607991731681358782 4.1681594456664656789 2.5041262895768636731 0.78695053538135084636 0.88608981358537386441;0.26837055455062813758 0.12112448063235213558 -1.0586057168322040578 0.41036959169792786017 2.9756952397651326159 1.1342514410052517704 1.2397543253455509671;-0.63709640796000388541 -0.38985211011730558361 0.40359235416768207694 0.0013442800145924943111 -1.4714106111360183426 -0.90876778565552374101 0.30255104669344484725;-0.13998906961800264281 0.40010037772956846824 -1.5982281022436684026 0.93631659359804708664 1.4153896402844043934 -0.10315179724021573959 0.97007446482417636346;-0.21373750463020360635 -0.75817757056687296036 -1.6995419772166968642 1.0090619998890484332 -0.58421497751928308517 -0.31013081499684491682 1.6442866256204786701;0.21634734014022197202 0.15439808260204720969 -1.4131763825798302481 0.85108745468540025758 0.22065781708808474004 -1.6142465857246652838 1.1934720524202488967;0.95337208192553624109 -1.9650712295822703179 1.4627302555183603339 0.34100608362534823303 0.64030448029013486977 -0.40715731155727308277 -0.81074433941158507988;0.63318890063501565013 0.83948453664765043669 -0.43495351255600861462 5.7304140320450578372 1.3124716194811567593 -0.65059486148937495376 1.6992994564514534162;-3.0090440526353292583 1.2902667785373043152 -1.3216416871078762174 0.5142441291689091587 1.8984321407357946931 -0.77719762411388160217 -2.0115799902076902939;-2.0174386306065712482 2.112967795165713536 -0.3735065991452554135 -1.722611301249473037 -1.0244764914853727866 0.55114814001263734422 -0.86010549058912233455;0.029195939050563141093 0.23088153706219421979 0.8146201102468048072 0.098786937941456209877 -1.6713102027771893354 -1.4124554479174760147 -1.9424755678703420347;-0.54787871153767864207 1.0278206895376971186 -0.2412634028884500792 0.29812970109861358647 -0.57006274977632498402 0.46061661062685271828 1.1114450643014728293;-0.23252790246144525166 -0.078343747253305479061 -0.022454084516814565992 -4.3988164215583669403 -1.4899933843451445004 -2.2613803880788214684 -2.6012919690027209718;-1.6168201248421552041 1.2848767284083233431 1.5753322020697935191 -0.86572691732138307152 1.4936977274124318971 -1.5723384290203132885 -2.6704823027176289862;0.78147941335028214827 0.43245293875058221644 -1.3776860503023931059 0.95696886627470334474 3.0723362610105140469 1.3400351417277078792 -0.62580365851881358807;0.83488634389462657026 -0.3822233349334960284 0.17271416918663523576 -0.42165461607394283394 1.109358412059644472 2.1105755955160661053 -0.05613896756420742179;-0.53752117850663438947 -0.08071413333140468882 -0.25584807075722615366 -3.6599593910693988263 -0.84137682052549456202 0.42952879219984813064 1.1455320648481981394];

% Layer 2
b2 = -1.9805430982604235179;
LW2_1 = [1.0915209402152474816 0.10776473848727784188 -0.23324169947307382689 0.68906800692669467612 -0.086886322991149830819 -1.5341578347189706033 1.0462331880981068366 -0.5827554794182616682 -0.29585773386038005661 0.15722237894773474776 -0.10304879737893399283 0.14409923899414442405 0.94695897242448212605 0.61542477288010233316 0.21180925096455716083 -0.1128473471105688325 -0.15119854297098098139 -0.42790009359534375566 -0.054275744905980569111 -0.19520191660012869983 -0.54796747702643311406 -0.20096599035439977055 -0.17651409275161919488 -0.12197131701923068225 -0.55915298692391002255 -1.9172038893894725042 0.38485813635332316585 -0.16562270349171895334 -0.43769453159294491318 0.91199703181322622214 -0.08664208049198098005 -0.090009701606172984323 -0.34428257952906621275 -0.7770915755503894351 1.0550997242297286416 0.58558360686345201085 -0.10050434642816971631 -0.63936531164240240077 -0.58543049417996950723 -2.2360563255238927738];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 0.0470499670650231;
y1_step1.xoffset = -0.28;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
