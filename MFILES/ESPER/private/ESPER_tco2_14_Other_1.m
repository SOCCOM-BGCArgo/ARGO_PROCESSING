function [Y,Xf,Af] = ESPER_tco2_14_Other_1(X,~,~)
%ESPER_TCO2_14_OTHER_1 neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 12-Jan-2021 17:03:59.
% 
% [Y] = ESPER_tco2_14_Other_1(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 6xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-1;-0.999998793562952;-77.961;0;29.715;-0.9];
x1_step1.gain = [1.00000000274156;1.00000063368067;0.0138606862425759;0.0002963841138115;0.248478071810163;0.0419287211740042];
x1_step1.ymin = -1;

% Layer 1
b1 = [-2.6149057746494493;-25.004483254770662;0.82514604498308175;1.368626799123029;2.4890808648676517;1.8369383570732889;-1.8337924005894788;1.505197297733528;3.4804577111423534;-5.3466837928365463;3.5425335804674631;7.3684599810599254;-12.967597821803915;-3.7024228699882391;2.5341761680067316;-2.1129255326772798;4.8665204662760324;-2.6354940336965407;-0.060779190939734586;-0.46448998557518956;-2.953628721108061;-1.9957996413902936;-0.71890857878571723;2.4211145137158603;-3.2664535795824281;0.31560075126214338;-2.0742017033331392;-0.53040370610977094;0.013716953331429945;-2.1995642743873867;0.025184492076901821;0.65779684090870927;-11.783902426705117;0.40440088844275435;0.83183108431552966;0.84415462643768491;2.6518479732647733;-1.0722180358773985;0.7408681035999013;-4.8325346747765119];
IW1_1 = [-0.022934214351184614 -0.60532260743877264 -3.4719062400574798 0.048437347821018467 -1.1050771256373495 -2.7258954816346801;0.047287789964441919 0.77018847817428304 -1.0969852070897828 0.88604975083879356 -2.3609913374493789 -26.941798842351208;-0.037968255587271946 -0.86491948243139227 -1.7234350730607439 -0.69994692453798468 3.6243420357584659 -0.76060029721118361;-0.8362699952785162 -0.15329569104259669 3.7454983023538317 0.082536811219177442 6.0057706348870674 -2.1411167774594717;0.11847462002535178 -0.76111334637450356 4.2118839623597157 0.75862874177294748 2.0299124806799234 1.0347706433717494;0.74191797409931559 -2.4753365833411216 3.3778479106366168 -0.91607983804258009 2.7020047592543883 1.9628478926437691;-0.35322786042720483 -0.64111107685606861 2.0588392070566992 -1.1373762907121523 -2.5322819718321927 -0.4878705570382782;-1.3642735300598117 0.48129835015492906 -2.0248151966953065 1.7863618441365983 -9.2780526434768493 2.5843120033587055;1.0477847045401043 3.3704629480981403 2.7460022188331821 0.56269380058214069 4.5942674412439235 -0.37362894610994279;0.0039780492332083198 -0.53182998485181154 3.7230047188132116 -3.0164852532248294 -1.9242177418830297 -0.89406686903271737;1.0598999268229905 3.4069853680113349 2.9198212125860814 0.53383186252357195 4.8647059668896775 -0.32988855740833067;2.767241875773812 -17.616686038831769 3.1897352539005879 16.050067770743475 -11.52668352704503 -13.757700330495981;-4.2305886313539105 12.409061010376176 1.1638148558622852 6.2788088878543462 4.0233437772336806 1.4749294049460648;2.3108201318795358 -0.75057837500142743 -0.93951296538114926 -4.7618056163067752 -2.0654491054272262 0.027540629212380038;-0.42640661126213675 1.2144843659845068 2.1468276535893906 1.0006054873294223 -2.7234052030366613 0.038395497463797619;-0.48226949771239708 1.4027993010418518 -0.062883982234615415 0.41699570076604525 6.337141009790086 -0.21460780041866512;2.5085876623238357 -1.4600336801957325 2.5369969204212928 5.554703877671459 2.8313393201464239 -1.1758519394401532;0.40473769574391072 -1.1707298637070902 -2.3070304129320318 -0.99821678638936973 2.7873866740077169 -0.096163457611039213;0.075469769665998124 -0.21751973491637819 -1.5592381388079855 0.77087990284196606 -1.525980038978294 -0.42379248857351315;-1.8009233517510994 -0.20311331480019501 0.23276460485004702 0.0796463585236271 0.48283225219895881 -0.22470693955781804;-0.13708173340046914 1.5179810829308769 0.36010494145712996 -4.919441891444948 3.8979641897280288 -2.6314399240416964;-0.42002075037173053 -0.40512960268095255 1.6320682243982461 -0.84275368729696043 -2.1642075224158517 -0.62818110714323039;-0.00111680077807707 1.3733873046786178 -0.3441868265420544 0.35560626925031286 -7.2186589306034348 0.72430630168552401;0.023713587064818305 0.60129233165684692 3.4021130472788865 -0.22355416281959589 1.0658442398781693 2.7842582943732763;-2.9651562393631878 1.8273935729492068 1.0480078131394035 0.54581066537387257 3.0137874387556511 -0.59312625387933615;-0.82201517586193174 -0.80648372800673584 -2.2804002220084181 -0.66319067408501264 2.3474665452780221 -0.095116854782124172;-0.10630458166840923 -1.2801864090291672 -0.47104376037918011 -3.3339159834491277 -4.3932925613407221 0.11561810619279241;0.3058842985409565 0.16736340889378518 -2.3046055458687627 0.77706132997183375 -3.2488452953218672 1.6269759407615605;-1.6767516976188623 1.1602344677639556 -1.3526723480345537 0.2820428896836899 -0.35869538000338724 0.27771168175498023;-0.52597590845599818 1.4163104647336644 -0.023864966373792682 0.39519101093544917 6.573369043391537 -0.14223709540418797;-3.2772950447106979 -1.9289116009860374 -1.1416789837774277 0.77351275061238156 -1.0711061770042689 1.5654434636964443;-0.47913398426021736 -0.17491309112301615 1.5607311302593974 2.8802184684516612 -0.74113266907654785 1.3129283398143095;0.10609546627242657 -0.44420067160675153 0.35248494507764394 -10.422507715891516 2.2612792366776553 -0.80721062468030946;1.9787498167938233 0.36271804750210185 -0.42894466134750836 -0.098654191555650902 -0.69357744748510419 0.2820471191604666;-0.43994274929161648 -0.7423164079869603 1.0458613465831008 -0.75168746246312224 0.30907061980988859 0.81999832170023801;-0.52642581466627425 -0.81337779698358148 0.96212447130211187 -0.72542474760816167 0.25591609852861424 0.83018545258164023;-0.10581369137574108 -3.2453122033453914 4.3791037833125639 -2.099523890772522 10.904298085027683 1.7877497030853871;2.9661200022654293 -0.14519174506078159 1.4359328978025288 0.25961401249553456 -0.98388187001871874 -0.1447302232610331;0.1054965555683243 -0.74106179960224128 0.2773132476438166 2.7099838613759424 4.439300752712307 0.85293264802737601;-3.0844350677251691 1.752933996830911 -1.5343227917137707 -6.8624389668264021 2.1299713625913141 -2.2224428468232982];

% Layer 2
b2 = -0.064968220567338808;
LW2_1 = [1.7804220006674691 -0.067874413053492677 -0.39006616387654125 0.10476998334521236 -0.098821865490377997 0.069612470708349472 0.5295706185867346 -0.043758856404428059 -1.4562618161580112 0.47712456067091974 1.3569467064229628 0.0062700511190129692 -0.010060413995889521 -0.044009726803552217 2.5362850939216819 -1.4038765268640319 0.043598070816859159 2.5324565651420627 -0.61923214986540476 -1.0617342020157012 0.050468183698451741 -1.193741536034195 -0.14969327689783055 1.8075195132013364 -0.11108179147715939 0.28169603056592774 -0.054196296047830224 0.32100130797530635 0.13013095662447335 1.3218356179697479 0.042432219706018022 0.080620390702542788 -0.21917556809304251 -0.80853347741132087 -3.7154532278232137 3.6120479370110239 -0.063256011295101111 0.13861153135683607 0.18786015496509045 0.046351232464740981];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 0.00314743155299998;
y1_step1.xoffset = 1774.26765577007;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
