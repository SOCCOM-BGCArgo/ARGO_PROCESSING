function [Y,Xf,Af] = ESPER_pH_16_Atl_1(X,~,~)
%ESPER_PH_16_ATL_1 neural network simulation function.
%
% Auto-generated by MATLAB, 15-Feb-2021 18:30:25.
% 
% [Y] = ESPER_pH_16_Atl_1(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 5xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-0.999999025224415;-0.999999994516886;-40;0;11.29];
x1_step1.gain = [1.00000048738803;1.0003169936794;0.0153846153846154;0.000310077519379845;0.0705602618858232];
x1_step1.ymin = -1;

% Layer 1
b1 = [1.5421731321375107271;2.7073913218231515643;7.6094414140918500422;1.285870475482469466;-3.2837210931049880536;8.5545965007421198578;-2.1666517114390133614;1.6907747801988011194;2.8001786429505042264;-7.1260058822555452096;1.6007769059103578169;-1.2033429646945670299;1.6253904262118670232;-1.3312955834214323936;-6.7459988137614583792;-10.924297855780826794;0.79041345912728222523;0.93010538613587689927;0.81940914360593752885;-0.66864664768563886188;0.92219208996388202237;0.93670033624540827155;1.3498891194512272484;1.6105391513668136927;-3.4112729252467777208;4.593642348537030351;0.07688192530166701455;1.8189493354952346316;4.129313058329504571;4.7092167297494489375;4.8786829109609035626;-0.24589423237890722929;9.3974028728777536656;-3.1829580717966150516;-4.502582374468124371;-6.1208498768529615575;-1.0080425026858959026;4.4114130875316579505;-2.290669415656459762;-4.3935857413890468948];
IW1_1 = [-5.0155585581439448006 6.0100866733401137054 3.422637330617040341 -3.1051086602908042344 0.62488232223901707396;-1.0692612635923899322 2.7832827212358948188 -0.46545289967699315925 4.6475745839804547543 8.6305582547359822598;0.069361520605907056591 0.0053081393374044688604 0.25773576270466191929 10.843016710205660047 5.7278398251431958954;-0.36396835039152641844 1.3010694682318000304 0.93052619207278830515 -1.4963372457389048087 -0.57257449917559544161;2.7468276958967869916 -1.6928631629212116394 3.6586726676003258341 3.0414374584250887246 -2.6910115055295897868;-3.1262318487152427338 2.2288497286994193303 7.4510797737552634246 1.1785343882576486685 0.88586556227084289894;0.81591366472172344171 0.39214837369904115283 -0.070351003404954842724 -1.0451293507058263543 0.91900161509122857417;-0.95612026264625804561 0.80770459805561023447 -3.7096928570307845519 2.4389616396301661005 4.4016947317922863192;0.0041160027634348072406 0.87101794892596828834 -2.9809031248531527858 -1.8630041012346441054 -5.1739109401162357571;2.8507536174395244899 -1.8532400259571584211 -7.0468867339802079286 -1.2867008891410931515 -1.9948498647271863948;-0.090674783121179658441 -0.26661482754495341441 -1.1106134981198583223 0.71786317181416436917 -2.3510013238279952041;0.546818140895887983 0.12615788345092920908 0.068518072515947089918 -1.9195234069021673839 -0.781955201495367902;3.8324370783173531407 -0.25740741465430228008 -3.683775416964957472 -0.19203358411514773185 -1.7881605022878863664;-1.2475094900953243027 0.95405076175794667481 -1.7604929280400445357 -6.3952792553650530394 -5.7411430021918157252;1.1947304210063744989 -0.2675184489662121301 -2.3809910995572014514 -1.379288269304355552 9.2829729584339677473;-4.4363401357380078949 0.79037914685988408525 -4.4640959601881746721 -6.1170679643970249373 7.0468930140541399254;-0.8615771186228765588 1.1515693356307143969 -2.5251989207192604425 -1.2222789333434440628 -4.1546805886347106807;3.0902811905427620687 -0.47284464370124401622 -2.9353284281099489839 0.19378156461298085 -0.7013044984604428489;-0.62269705150312248954 0.27024193203750379588 0.93932199000096527897 1.580905103431892833 0.18671275677065313214;-0.21665274618352717284 0.22622354707743277946 0.75096883367286026978 -2.7716792444201141521 -3.3487828189490125297;-1.2604866929949047893 1.0591348085992828842 -0.49861709200575249357 0.91643592821656749692 -0.23929378030962725199;0.4787418090801520143 -0.57200865859593530427 -0.002184835833539178207 2.6883082855718782866 3.3008491445512286866;1.5523430255491801333 1.5750184293908540134 -0.737515856064867803 -0.67603053197793583351 -0.48251183154135796061;1.6140304021502995813 1.6465082230215315473 -0.74225805878370487711 -0.82792199091058549243 -0.81492158421036553495;-0.69267464649170640278 -1.5149059134206213084 0.23910511409458215515 -2.179914723152981626 0.97468374473146146553;0.54157742825546584253 -0.52462480928115950984 -1.9896574990615694123 2.7451522722268011378 -4.0459967146786031122;-2.7128768733551105186 -0.62156299778820489621 -2.2422839504528035981 -0.35952248623381494186 -4.7097751756642916021;0.49957761387783022888 -0.71908911800011487969 0.71000705188296842074 -0.18906356815204999888 -1.9790146876171439416;-0.95210665626853041577 1.0507623410745747794 1.2439640883467273369 -1.3776351468496714769 -8.2287323576428725858;0.077403976841156518773 -0.68410887177387036395 -0.10620688703327528513 0.29897790449272698687 -6.9923622647441208144;-0.33839735165463175059 0.33868714604800653767 -1.0325270325142854588 3.4782350324938748898 -2.7402881820286970616;0.14376695766148314681 4.1335115612535808793 -0.047946193097056749588 -1.3948893238587616317 -1.8705334046535351256;1.4835519671906816086 -0.67774965731783332057 -2.4710191842694304576 -1.2200211196435313266 -15.377764462507553134;-1.2813036106454889218 -2.5550792041909282659 1.8259867363904325188 -1.085510765259645849 -2.9538164608869732497;-1.2677979336943407951 -0.65128729810439622838 -4.4416780304654013278 1.2212768014902977143 -1.2226416340138641647;-0.4787944104137552559 1.5030502019085489884 1.4959065692055852903 -5.7124991699757670105 0.44745358025015752323;-1.4598851726311921073 1.6516553098318318415 0.68907950988720567675 -0.86981516685436488512 1.5264123557638529238;1.4445511870255938192 2.724931348657239738 -0.012433850426373148357 4.8408643250266685243 5.3203157929152480321;-0.43584653582767080016 -1.1990441524330290868 0.27365988499422494451 -1.5149447991605600183 -0.11423223045047772861;-1.6977515771889912788 1.5557512950934908602 -1.4936403150207453461 0.21718815513621261837 5.9418610270872784795];

% Layer 2
b2 = -2.3006625340945539016;
LW2_1 = [-0.12974194001584524183 0.50125793347702141123 -1.4427896975835254878 1.1619341627036197107 0.11611248721014862106 -2.0526517895458824547 -5.7299101127721447924 0.25949039440405474721 -0.60572399962332013068 -2.2526963719715928924 1.8493856556029490967 2.9306392262060780851 -0.92680519210141787401 0.53653695972050197138 -0.89158428892213026362 -0.17025477764786894896 -0.83269095369424883657 1.4436747647243246551 -0.88594068994034724795 2.3121981852921806855 -1.985816853242017288 2.8014351965284585155 -3.8570082560131573324 3.359712368644998115 1.9405822142390429796 -0.89987919257318749189 0.93366043651739194509 -6.180693114165718427 -1.1650685027662932569 -1.5977614327913940429 0.75409845254253027313 -0.32507535136961240863 0.32491983285490849687 1.2557789931125564742 0.52132769927133060239 -0.1709312896620817368 1.4099134064728757743 0.92066476297478083701 -5.9664758255916812146 -2.0722924009072682949];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 2.03830178109291;
y1_step1.xoffset = 7.47181919175367;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
