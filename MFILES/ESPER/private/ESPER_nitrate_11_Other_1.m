function [Y,Xf,Af] = ESPER_nitrate_11_Other_1(X,~,~)
%ESPER_NITRATE_11_OTHER_1 neural network simulation function.
%
% Auto-generated by MATLAB, 15-Feb-2021 18:30:35.
% 
% [Y] = ESPER_nitrate_11_Other_1(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 7xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-0.999999984769129;-0.999998793562952;-77.961;0;29.715;-138.904784718693;-2.02];
x1_step1.gain = [1.00003298043486;1.00000060321889;0.0138606862425759;0.000266418009857466;0.193068829037552;0.0042772329208737;0.00819772922900357];
x1_step1.ymin = -1;

% Layer 1
b1 = [0.65376032051259491684;-0.54001010676947902578;4.2214697940354790617;-8.2074354626794381318;1.4180395557899192482;-4.0439948881473766207;-0.54139630383007775194;-7.1352902327618892286;-1.242743436163455506;-5.1053809656900002167;-1.5032362862515842306;-1.3139300890627159113;1.7982779233285564047;-1.2205729057277752148;1.4141929857384503144;7.375042023976847716;1.3651308171548897086;0.23213417858287854756;-1.5430273535263236973;-6.6416834560828093004;1.283173144213292538;1.0850496827380293752;2.3278890668485714421;1.2414558606603169899;-4.5877095407827628293;-0.50333941643429602752;1.3930727156528988075;3.9865409915074274672;-0.31106158487468171803;-6.4231734441124945789;-7.4384853664688943553;-0.90315861886243431478;-4.2715165312197251879;-7.9233492439746262548;10.051594795307718044;-0.89823706752976106849;6.9053598099116557663;17.42982124186694648;9.5011617241048433868;-4.1029587221577648037];
IW1_1 = [0.37894076812048960168 -2.0624758222683472475 -0.16976839714103605927 -0.21075931225083646692 1.4793393365531337658 -0.1127487219030188087 0.59655808896186868218;0.22525870893257352034 0.047482846645986273582 -6.9841005811895193744 2.0005503247827141067 5.5648879351428028883 1.0216800490513027189 -1.5277563253243957586;-0.23393678938985928983 0.50104505239422003626 -1.8485646854012163232 -0.17179082320969690789 6.4835022110116344862 -2.5598249804573853794 0.27784786268797323494;2.1389444819799541264 -0.2380524455678325324 -4.6887104741318861301 -3.6680111102596280048 6.1441337990146243087 -6.380785330608429895 4.8973103246064377814;-0.12058227602397240952 0.068557356997879501104 2.82896855018560478 -1.0003948200991910067 -0.26025004662236472797 -0.99987259506035541801 0.99631238319710213602;0.1293295635554325973 -0.40992432079193069638 1.9663051519121967914 0.36909616737677614084 -6.5029385847503160534 2.332202842739214077 0.0044549395277608573596;0.26996068229676034589 0.064689225453660487153 -0.11461405887249581648 -0.86859081720041786401 0.0010282750383195683741 -2.864341371057329777 1.8432512507869518448;0.024930834320336384829 -0.10073062972274567095 -0.20200870177770205438 -5.4694992574290957066 -0.26350364796972663983 -1.0392334574588324436 -1.1165432437388045361;1.1529296622653990578 -0.23027583999266260095 -0.14125601015671457317 -0.28335444453286778854 0.5090297193126639419 0.31262096697260377542 0.48885514296181770133;1.6326735715565405815 -0.91499063243469602735 3.5330267759430520336 3.649262747874901347 1.9076319024313250772 7.4690024889654154094 -1.8983343287051750448;0.14269120326298237456 -0.057139486243861267734 -2.9981076291122468191 1.1665299975567684498 -1.0293440439719749868 1.5364867348418334014 -1.1071005523729651188;1.3736464216911792313 -0.14266368570418314077 -0.12966328337808810667 -0.28744971615373543505 0.83298535896197622996 0.35545142668359236415 0.40540501635415460147;-0.20036940970932892725 0.067911935223696526243 3.6594100787627050764 -1.4916801618481263514 1.7500566123356950943 -2.2326812017110517772 1.3712747079331437661;0.072914484807027057922 -0.18403353832437818749 -1.1933404930975011204 -0.60827754040467163499 -8.104811736974458114 0.04583976317418089752 1.4673487663264597192;0.058704682682885034328 0.053812730019917751068 -0.40349698206652967469 1.0325370227160668435 1.287264714212827732 -0.26764331621147396945 -0.21384099630549555093;-0.034252850661554964939 0.10866508729099012831 0.18424215512041039466 5.4761879577337211344 0.22936031911401530414 0.63733981004550077643 1.3491011856074472952;0.2841868441101930709 0.88489613168799718945 1.0318666112873662311 1.0168011751073109394 6.6317585943957668704 0.6272859081687688354 -2.571983746297332285;-0.86673453926275856318 -0.26995340676256124324 -1.417967863105364712 1.7633268335316971687 -6.4629182831057629954 -0.27516921886147305276 -0.074608395394795218314;1.9093624154177000207 1.4929431571947640034 0.16374311543673597535 -0.87891462821268451222 2.4201555764661453196 -0.16290976830323103397 0.56317345671567742293;-0.25165208960938778571 -0.17857891313812399026 2.9143669981184325835 -7.519917991112888167 0.7888247283716529612 -1.6681507465651437272 -0.68743703396321065302;1.2598348030115869012 1.6049301057673663884 0.36530107076459455984 0.32284295419705771879 -1.6289168912926756949 -0.03150414011814637455 -0.87953267907637600054;0.12565286923175794653 0.018395278460868025316 -0.68238386542880991037 1.4693201760818976886 0.62556152463379821604 0.042970112636876403589 0.38969795480166274926;0.18254653958734395891 -0.4265487238773990053 1.6574630865524155876 0.87696045561030699922 5.7689629819609207217 -1.4420189374602740973 -2.0717264742507572883;-1.0142381625968468484 0.42708028040555090499 0.21394409724071433709 0.35680976183555429548 -0.14906765572263555586 -0.35815535466428666256 -0.6846100728041570882;-0.23574552693225128697 -0.79192950450947730001 1.8819312633556717351 0.58364677942012621603 0.50569649949685724355 3.6849644371798211395 -2.0749142858790525779;0.42166508651963990895 -0.81676831063624999452 -3.3421769243238328428 0.63193688167636674624 -6.3353442374563115891 -2.8689603162332462105 -0.62578938359219682397;0.67249295557122512612 0.074186933687463860188 -6.1154467761101134471 1.4628489197043532677 -0.45089799297073829276 -0.063844946365166133084 -0.4065105059644827934;0.15101017320362750129 0.51659673386720106336 -2.2197082039490330096 -1.2552669808371539339 1.9276850121724888876 -3.0757265206690833637 1.5031728170212887985;0.068283104852174356103 1.3300750501658926694 0.34139520346905732895 -0.78169308172562368409 -2.9383027437603450593 -3.9777668896911517749 1.9922283600699479678;-0.17954076293255000207 -0.17041814028203236542 2.5620981660567991867 -6.7055592133262944543 0.18358847122797525286 -1.1242612480547480303 -0.5166151246661402352;-0.23443018873162088656 -0.20755317474419665569 2.5216719546868890944 -7.717511739094444323 0.91892657256227139317 -0.92695627238223632371 -0.56172700724636193126;-0.19936817807068163422 0.02776123384936830113 0.71880025644113654248 -1.7067370752775914422 8.1104338962118145417 -0.44373753408372984541 -1.4854596799304975452;-0.26934456426638841986 -0.71868420952188738493 2.0788898442050123272 1.1193194958010848072 -0.47777455588635131534 3.47121743451896414 -2.1588935176029759866;-0.2437038236949893022 -0.2288063085668549379 2.4104837273799883945 -8.242613844188680261 1.2371150903258820719 -0.75138323921704541775 -0.64556178178153122982;-0.016376507870015259705 0.050045233955092013889 -0.047572765110168557801 7.4600797211372231743 1.9183212270787866061 -0.55791055576914860836 2.3905252431302113081;1.2489977069756752481 0.25578777920496126308 -0.33653533306503768952 -0.73472689050744277584 -3.8166997701044778069 -2.254461369936933135 2.4343455215387619361;-0.83801488670515522639 -0.41198927276396063446 -1.3223852893533685204 1.9093675972405257379 -1.0103257650880057561 -2.7299685573185268339 4.225405148050837667;0.59972603952187419907 -0.0260585454644280054 -0.63004863770116137367 2.3630248025183080429 1.2399240729532290395 -1.983197216163986587 15.694199251151704999;-0.20815873870455936512 0.55210560723230939217 -0.17601479617026108415 2.9287589545574133076 -0.26341960063698605099 0.30390238229996957564 4.4998689912434644;-0.2108385354992741989 -0.60500835104910200002 2.1968341446129908689 1.2451275561256696101 -1.4617480361412429346 3.2232310426890311561 -1.8539057083063579245];

% Layer 2
b2 = -3.8717548093095315309;
LW2_1 = [-0.17551312774966756902 -0.12998737652230341055 -3.1484666981997166957 0.16875575123510414 3.773343162877378365 -3.0486741263547822989 0.41519958400951356703 -5.8226908087784918777 9.9697547620391606671 -0.073060034576128890516 6.2168009980944960446 -5.1725581726978075991 2.4006082394464267615 0.5312021978061998162 -2.1049668795240883412 -8.5468046167608466845 0.20655667862972415527 -0.085516068367532810379 -0.16434460146267268477 0.95940986342644163365 -0.19776297244423707289 1.2641611423165908246 0.23329209888645474624 4.003677700999757505 -3.9958387686174319242 0.06819775631544994221 -0.1074559764120934513 -9.6627979899857781021 -0.087935870835597895745 -4.3578601583676306319 7.7295042923436199089 0.36197239762093880167 11.726271893619095721 -4.6607499577881021935 1.3610599880783367244 -0.20164534346511700513 -0.34305086498201781131 0.1316825981109453203 7.6786165520593607781 -17.324002755668772124];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 0.0415843642790311;
y1_step1.xoffset = -0.9;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
