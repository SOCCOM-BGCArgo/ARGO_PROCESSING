function [Y,Xf,Af] = ESPER_DIC_11_Atl_1(X,~,~)
%ESPER_DIC_11_ATL_1 neural network simulation function.
%
% Auto-generated by MATLAB, 15-Feb-2021 18:30:13.
% 
% [Y] = ESPER_DIC_11_Atl_1(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 7xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-0.999999996490807;-0.999999999390765;-40;0;9.1619;-177.232103709389;-0.12];
x1_step1.gain = [1.0000000017546;1.00004398834998;0.0153846153846154;0.000309885342423303;0.0656325902039552;0.00425400504498441;0.0145655815308426];
x1_step1.ymin = -1;

% Layer 1
b1 = [2.1352743212430187469;115.21521246554775075;-28.662221436446941425;18.505557023747602585;16.909957326531458222;-18.070511104330215346;20.165364866475442795;-355.16303715343201475;-132.37992594993616535;612.27590787869144151;-9.3842663551933913624;90.642691066453608073;0.92588388555422229675;-18.420164186836050391;4.8078378369553940175;-1.8960629432747635459;0.80540046315157276524;158.57310947289434466;-98.664877813163144538;164.7112460912465508;-1.0287088593966282613;21.630360350664009417;-17.943965376285092361;311.06358880769829511;-139.46760606176761144;0.2420989913030394125;-5.0602114418423553843;-6.8318529151595210891;-60.700298807202862861;28.036247362962662066;41.181929226608225747;1284.3625862338647039;1772.6440673786046318;-13.318791695113983309;-89.427394088239054781;-2020.7543342697372282;-0.66315527802962837001;-95.960340754961592324;-277.91357567527569472;357.84918261634282999];
IW1_1 = [-400.86955264411977851 64.945227314547636865 211.54879940168927988 -61.85677340107651645 486.44131962689863258 354.7780336414639919 270.96914659837722184;26.161925724758432921 -6.0295667066981710747 -35.982734985596813715 42.342304407120735732 -127.51771220989535038 96.099868095268789148 -55.034716020746728304;-1.2084669291596616958 -13.239927595800420335 -21.314773491425746954 -11.990910571043940536 118.79701516164452357 -110.25334910097696195 102.13773840673512439;9.6478150055303952826 -3.7505890345844905553 16.829109025788316245 -20.572321876127727336 18.502698085978639853 6.1635697272913407829 52.00365590259747961;4.8849280103728656144 0.47277472198345593668 4.2971494365473601462 -0.81668086937325634622 -23.604841148210145008 10.151304435218083455 5.1793869085117965056;1.6212684942904960206 1.1074003071986946445 -7.2455706765371852285 -1.9676535107668076119 19.887883588165383486 -1.6624906603255729109 -7.6090515364678017463;1.8472641020800313338 0.10847936251882343839 4.7094822776395917074 15.061264192178143162 1.8904596349338296246 -1.2184419820444871707 7.0573559096914717514;202.81659317499330086 -138.13459884270542943 353.37397429061684306 262.29933369861225856 514.97578316804299448 507.52561745933945758 332.60627022773775252;45.287196726865772689 -66.070062727138434866 16.30565044892696136 -47.522044301377960096 126.48353603275755574 -29.030253819426956596 63.042243102138236566;-159.03708726580418897 -96.682726340838556212 -18.841717249731093631 158.26318062740944015 -948.08385786262545025 54.635792054504058513 -224.80656616423920013;26.616339525328921667 -12.671049262872658758 -120.59889864439250573 -67.10252405521099206 -42.559420787836820921 186.97889766983132631 -125.78920038789702573;-55.292600549014323974 23.494555508445220227 -0.1215510526707188621 -12.009293284811750624 -35.968530879545170365 -30.712499733245206102 0.62013478747313288686;0.21739725390518965797 0.8110244220531260817 -0.47701111056104833485 0.32749640883802799696 0.13541009185308014451 0.059120075883626249658 0.72057056422823140274;-22.030130334012078208 -3.7888041287323406259 -12.434994816122410199 106.39054185876081249 32.089874498987079221 -47.382037140985723056 -96.655475226021650315;-0.15970006667595432193 -0.40123357593911679331 -0.47452420918966076169 -1.007011503121555851 -8.6384224476512407875 0.31234078378293350653 -0.043168877928146491552;0.53669472738278645174 -1.6830941028121224612 -1.2517722853520398818 -0.022784702710901633127 -0.64536765551539221342 -3.0981362987971330369 -2.6119505885889839902;0.21911310312207790685 0.79659686912698746131 -0.47437600024058024228 0.31369626963679980713 0.28508141059537328577 0.065131102177594019098 0.72353373190503966761;-22.730642060557066486 -58.432550612459984052 19.066054799987675494 43.589211603402226558 -223.3302046119333113 -16.496986878473951066 -49.580970985505508963;37.534757598367185949 19.809583555959282108 -31.582353211962868045 -14.637859492314936105 61.474193800370073859 23.907927336165929688 0.60807403969523776688;-73.050272731737322829 40.849957291905809598 6.9254589611237911129 -12.957434971833807325 -121.43758652661294661 -23.374688606781575118 -14.847070696964902226;0.10342208262444695099 3.3780906906030141457 -2.4213132894717626087 1.6349814022590409834 4.2632124227131074079 2.7147352331860608032 -1.3038655143976438655;2.0571908751477105959 -0.010209342667414376959 4.9844063137797309793 13.640925237466053233 -2.4388831485284820921 -1.6266822942032659327 6.5838914015980289918;-7.8174121030572552016 11.310080018858226225 -4.5959848470548720911 -4.4655774071572711392 -19.640976562163722008 -13.24635277230462016 -39.21469162746203807;32.7826666682596084 41.050318244102705023 71.700827381699596685 -25.840564686505253178 -342.53939582231311078 -45.123851893479233865 110.76229799080650196;-41.681648022472991499 -76.791560300811198658 116.37873697044119581 -101.63584479032572006 112.86669660971300289 140.84020364865511965 39.269763074824751925;0.030585295936752611434 -0.54242199945286218021 -0.77792031978167164308 -0.562357994407635009 -1.8783176542950954513 -1.1921619766463367185 -0.69354950686035354845;0.071069325222575377432 -0.21812588485736431054 -0.19973815176001988303 -2.2539171787720095885 -1.0653714452718414663 -1.0161210460585061721 -0.5189141663160867779;0.53865869871380367417 1.9036786914506675927 -4.0237484807538876908 0.30534728758369633628 7.6467849889026195953 -0.59491271327844186256 -5.1293346036993652248;0.36403500085671969266 -2.5525168499705994662 17.210778618687712083 -8.8876859351133497 119.3876986752290037 13.727120156191734424 47.232558343644512888;-6.2459408113215584279 28.278895111831786835 -21.335614357656453421 -3.244590017127525261 -36.512878783252034509 -29.39955089327190052 -8.6642866146783017456;4.2295033073693026893 15.799499514275956003 -36.699022805592370844 -4.53499635852805838 20.057439284381306521 -9.6129637556586615688 30.11325657941561218;-146.34014355495540372 119.55821877310012269 47.450802051878142152 -209.15893544384221059 -1177.6916671386693451 -896.66921928150952681 467.87951903567824274;-956.06470169750309651 692.64091459263977413 -177.50698704179268361 -660.03123322516501048 -1956.3440412738407304 -438.53472959790883579 -286.55612007379346551;8.5150764188213283745 -7.8737294726246966903 3.2179226943238616876 6.065003741754762423 71.297491268833638856 -19.957706742454622173 48.64499033657450866;5.8072576187589399765 -11.631943975631697796 -0.55220019023918809342 7.3647326751997059802 113.05732275261844677 -8.3123933505626794727 -1.9707594542514241809;-216.28614391592543598 -247.35649992956368237 100.68568976365681067 -79.48745774384934748 3005.8891692052684448 238.04129719273191768 232.83830989227706709;0.60533050253887243919 -0.95469457904157606354 -3.3295245941758206953 3.3656856597798099351 -13.306440782434961534 6.4499075384047355186 -16.177864441160100029;-223.7381134891033696 74.883872048430347945 -37.378344048205356387 262.82336619682831724 179.96818227412484248 451.75647292271423794 -105.88145912712472807;-78.791276628064395027 79.647969254163783148 98.428759059235758855 44.796430644344837901 723.38210659311528161 -491.46613286729569836 173.21458139437805812;140.64427474319055023 453.00132544941936885 -6.0167616192524127072 29.202392692961797849 -228.61175990333995856 152.37459935255941446 -210.81748503108747173];

% Layer 2
b2 = -6.0172699817371118058;
LW2_1 = [0.00051106097964835812443 -0.0025812945461818788406 -0.0015946285440760776548 -0.0053709484001838326411 -0.0062750409278814704012 0.015327756179199377232 0.15114172080544818755 -0.00028876253313402745542 -0.0011039542385763627484 -5.3496705982543411948e-05 -0.00085681431132008051364 -0.0012777938674092921209 -3.6033222024767539438 0.00086697809928709549179 0.084092765291041426945 0.037567344747626178758 3.6461893890398915374 -0.0055482682172098285456 -0.0028046346112231977828 0.0016501891114062588236 0.018241890387653805078 -0.14512904600744599981 -0.0069499019832100416769 0.0010685528021081151274 0.00087791256549934082887 -0.13102873880276763585 -6.7637497376416106931 -0.020136427229704524644 -0.0029003138125009487493 -0.0017854018943463945135 0.0023932563690891237029 0.00067591450379625146825 0.0014675358173847777646 0.0035570113164566062591 0.0016623553064986696694 0.00035378741893129681765 -0.011916397695478935306 0.0008056962775857872067 0.00067808775752284616931 -0.00058614667822008031158];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 0.00115315130997576;
y1_step1.xoffset = 678.286531932822;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
