function [Y,Xf,Af] = ESPER_oxygen_10_Atl_1(X,~,~)
%ESPER_OXYGEN_10_ATL_1 neural network simulation function.
%
% Auto-generated by MATLAB, 15-Feb-2021 18:30:47.
% 
% [Y] = ESPER_oxygen_10_Atl_1(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 7xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-0.999999996490807;-0.999999994516886;-40;0;9.1619;-0.03;-0.52];
x1_step1.gain = [1.0000000017546;1.00003626070655;0.0153846153846154;0.000309885342423303;0.0656325902039552;0.604229607250755;0.0145232735458572];
x1_step1.ymin = -1;

% Layer 1
b1 = [4.8336932131527694523;-6.9926505905854607903;-3.2689797157079163448;-2.3619312949774160515;-1.8192621121064029843;2.3224024889080019385;-10.343195295150387381;-7.05262099111948082;-3.4649205469300681237;-4.1112015213820365389;-1.0169954484285916863;2.2831893124134512441;0.85121228931193271272;-2.2998245039749023455;7.6877222107397358286;0.39466924690378135665;-6.2748474073952378305;-1.460122004140948393;-3.6044443178992633392;1.9965858254610262534;0.64377818819827703489;-2.9608335403799186381;0.23256397120152111357;-10.90277682153279315;-10.961651816627068001;-0.61902148566003112329;-4.7355820541060715811;7.3274335856943642042;-0.058891878737570041435;4.83745508384984646;3.0759750551480791181;-0.46898477590798454129;1.1210959270779661257;6.054570137116249029;-2.7125874689949753815;-0.42888460458614646731;0.5031019512949821415;8.7871609355865096802;-1.0339600457229232155;-0.84481683251308736793];
IW1_1 = [-2.4219475514782575765 -3.4744596716602509368 -0.97578008011293015933 -0.0029255961608300128617 -1.6734581985596823639 1.397524650605587393 0.84357410993450598902;1.7704196785329255892 -0.19905483587962616299 1.2225161893468081686 -5.2313518638055942489 -2.575543458836242916 0.67031356623951643403 -2.053557171511260826;0.17799238688109220163 -0.25001951091444352127 1.2542036525905113642 -4.0889416328580141524 -2.8585497648736755139 0.33817397758326156465 -0.81130264794138584605;2.5096181537310067178 0.95872839900179029904 -0.57556239017711197103 -0.63170576584332516212 -4.3547456564709703386 0.74461289689579601703 -0.55268450359066245703;-0.60288309799057437921 -0.4415438643567627941 0.22428004348593508221 -0.061386003014169555903 2.0113976747590478489 1.6846947467919386465 0.64739383271085171323;-0.94981186386737315175 3.971358989148561669 -4.1760157811600109312 -4.339136004041362682 -1.0017156269078386632 4.3085705118005455105 -2.0137328748952754154;2.3501638986231956352 -0.56140326862156475496 -4.529706105171810826 0.62549002373611339856 11.589162277370832044 -0.77448168546273954416 -3.1897154543790842141;0.12093159072529251208 -0.34437498137740918391 1.9970792761085609524 -3.5371362602011684473 0.79489252426970780085 0.63387385031409293479 -2.1066380872022913984;0.97368374011179226191 -0.59914595590602715003 -0.50206083436207837867 1.5399515509005650138 5.2163342122689826397 1.4683348637094466582 -0.73434791646802477505;0.39854410862473160782 -0.100503795663510892 1.8852027619769209377 -0.075682044816335086734 6.1408077540470307198 1.6089967082403489052 0.93612420225364534332;-4.2393151614398476568 4.678607761428563272 2.7594410748016278134 -4.0162898611407724658 1.7569806616909748875 -4.984362534882028406 0.24928542013248669584;0.79821536442084028984 -0.46947567096165709888 -1.452056310105291459 1.6433935313134746536 -2.0056049788130838607 1.0150489472373864785 -1.3399194039838593362;-0.33503708298421897016 2.5882799105272598084 0.39334706018024129248 1.6211398717142158077 3.2729440842335724149 -0.92019500524741970615 2.3681341606277954703;-1.5572649662182587171 -0.85400283682201660884 2.4111362283596942113 -2.0681672892465261526 2.2478946512780377809 -0.2831576310416455966 0.27422467535710981501;-3.2095000689744570543 0.53327314561822403149 -1.9621494318499337339 5.5443573646191888216 0.75547860787488763101 -0.71784489800289053019 0.028103835281209604835;1.2328956805805340036 -0.63587028544438972677 -1.0170525180969167689 0.77452732586901429368 -2.8322416435127237833 1.5097493127986258976 -0.92707587503552635333;2.5765142226695378902 -1.1620435940278490694 -1.9632808891866460055 0.6022419381852206488 2.0247974332179481394 2.2964533291713182805 -0.61461185378171923066;-1.3461850390065865923 -3.2900327374091027366 -8.9780457571702925179 -3.4442920299255961325 1.0177477857336219014 -8.1541652384922773678 2.8134107183369936322;-5.1086277479891268882 1.8132937039844196914 -9.432336134643740877 -4.7326818294154255895 6.8059625995264445564 0.60373100209946217731 -1.0373015012359039222;-0.94136704790299519097 4.0705597031142559672 -4.2580520739725100654 -4.2580104476065256947 -0.57986688701343447327 4.4722347954828718386 -2.2337838882886176251;-0.32492064885502286442 -0.29115828877531402252 0.1152062178230664341 -0.26085161916018667627 -1.752570038990519885 0.55333841061961996921 0.74636570204394614425;1.8784684826835480465 0.46438108079116119375 0.76431268354147419153 1.2763679874285134286 2.2383394447233015967 -0.17167754093347215028 -2.22113900213933535;2.0693380105817498205 0.48856547923180032589 0.68299896555095962469 0.89649153569048845025 -2.0641392250891454907 -1.0436943005198826562 -1.4448617523938471763;-1.2671257612085982114 -3.0570859764303142114 3.9724445430307082638 -4.15524486325298259 6.9342302768988561823 3.4269121488436193879 -0.88689961456328580969;2.1841621913859179394 -1.4712294053445973407 -0.78188137169504801083 3.2129399996360632485 14.23267707949307237 0.49263400875528451373 -0.30819086748908175455;-1.1271087672107318323 0.86745155630496795229 0.30268773517535840778 -1.0593547542824284236 3.6958486713103111398 0.62745767189711421086 -0.3347732234684302477;-0.23875756495235689325 -0.13645606992331593688 1.8522059800786980777 0.14379505208137197125 2.9438418946603657211 2.8803855731957166419 -1.3510500012147939053;-1.0895182784038581758 0.49319285061758194599 0.20974503488286860842 -1.8829245525634745739 -7.6337299457316376561 0.15363983682483028925 -0.50495819970753041961;-0.410495251074755374 -0.15939266498579743314 1.7453948931849689874 0.47416912519732778986 0.51490271665592834971 1.4551484891200043847 -0.94213722246599407306;-1.1846972879011592461 0.77557553619932662059 0.61139658951593289782 -1.7462173436462911091 -7.1939650302243425273 -1.692577186227581354 0.64613597751828844018;-0.20389455151773958064 0.099444565679589577711 -1.1137435725828186417 -0.1877322522328689347 -4.1797347310001278231 -0.8143075636304603071 -0.38873749864179357738;1.4627946817224539711 -1.2650894169370314746 -0.72358782384242903429 2.4585061925089850554 0.24635190132210801894 -0.31556903242244138674 0.92971698471001829045;0.40825126371611458742 0.69924219756002004011 -1.288455462664351181 1.9469792605679450137 1.5897511486287343452 -1.0614815210476742369 1.9479801654526320842;2.4282302338247219176 0.05340708001230189822 2.741531481388707725 5.6687715657737802744 1.6515370915766423021 -1.3703088063203983094 1.1916994415767905302;-1.2070514614653342633 0.29160984763488628779 -0.15866251755560675796 -0.43304293541222099728 -0.15295799100281542993 2.0415475747826374864 -1.1015822778178481212;-1.1769090920095803821 0.71361532969502083912 0.33130618064360173314 -0.86802210554102643414 3.1761600272233119213 -0.018485403435790272869 0.40721488225272900463;0.073727218777872111088 0.40688679557282758648 -1.00390641797392699 0.63839720951796463666 2.2829793866244338929 -0.47851396745064778138 -0.48477972569233551692;-1.6918829341134864475 0.25605968320065036758 -1.6233082519156585288 5.8165254804686812307 2.3904669862952436787 -1.0302781461392083173 3.1773988301664046752;1.3994013236247662135 -0.030928128435956585979 -0.57400646327057103235 0.65208564634069920984 1.3827136246696276611 -0.12094303380564358497 -1.5226654050724750533;2.1351908075146437405 -0.049789612013232537047 -1.9619457654515892742 0.7669335045355496483 2.2084964987326278774 0.18262753097414016756 -2.3125225492413128414];

% Layer 2
b2 = -0.16638951370363336268;
LW2_1 = [0.12827061568722608609 2.1165300419903712026 -1.0411675478336701595 1.451655481432810868 -0.9863179381460510653 0.61464606198640114876 -0.18637561544940053904 1.1912017179978739989 3.4203868274159052731 0.54666971518921969597 0.060979493255495766102 -0.9427710624420906349 0.11802659377702254262 0.15117244281531122541 0.17708610166768107286 -0.84133757789544716399 -0.41986901622390110367 -0.022126148560199457999 -0.024320524794215047509 -0.60800531295860194003 4.0149034724867762591 -0.48822699936205460336 0.42817625470544812272 -0.065027260484230450799 0.28428269627102153994 2.3184672767225658063 1.5833639918522122159 -0.71715977277269304935 0.37507670254625302686 2.6148361889034505978 2.2376761042294956994 -0.49939854924195192787 0.24930282023988592499 -0.18872852085220548357 -1.7505711695330810063 -2.7333295388854552677 2.8851545781363938659 1.8332076150150180549 1.2660112083532004679 -0.58466421322704342778];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 0.00368391969055075;
y1_step1.xoffset = 13.5;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
