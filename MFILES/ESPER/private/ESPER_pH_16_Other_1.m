function [Y,Xf,Af] = ESPER_pH_16_Other_1(X,~,~)
%ESPER_PH_16_OTHER_1 neural network simulation function.
%
% Auto-generated by MATLAB, 15-Feb-2021 18:30:25.
% 
% [Y] = ESPER_pH_16_Other_1(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 5xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-0.999999984769129;-0.999540494077341;-75.751;0;29.715];
x1_step1.gain = [1.0000770825255;1.00022983623563;0.0140762793578401;0.000302617642608564;0.251952632905014];
x1_step1.ymin = -1;

% Layer 1
b1 = [-6.4447873714554138047;-4.9277060572242730174;9.8558832778702711863;4.6713138117296395535;-10.371249931321777638;-4.8474670090477873785;9.595407183146219765;4.1951752357896241463;-2.396224919311655821;4.6265039543541188749;-10.355550418708837412;-2.784994826194763462;-9.3142724726004573199;-2.2730512410559242653;19.836023559308781472;-1.8978971323852422692;0.69612778063373459414;-0.113040606664206289;1.9425014861563640878;-0.36226514865420050837;-0.66215176226872241028;-0.9650123636114291692;0.60745050455538418532;6.0705545270913274791;-2.5623589976184524275;1.9615585534460320272;-7.9855559861106852892;-0.46876618308347300923;2.7263638870722459728;2.9986633656486922916;-3.019550624422421059;2.4727172799014103255;-0.20963805581253880383;-0.31399973026688104971;-9.0539311417841439322;1.0171136641711582271;1.2295405808431356665;-3.1424797534911168562;8.2948118451031866982;-0.8496299260485209448];
IW1_1 = [0.5609524178069809075 -0.47874691693884768862 -0.80967099353953209118 -6.0175022022487247852 -2.4064911576895720025;-0.47283334541163690723 1.9900497896977973333 15.131003506874193931 9.484848293030790245 2.0769613264333628422;0.65333191691379033372 -2.1612444308291727246 -3.9375860418298902488 7.4976833406494272083 -3.9313750109556520052;-0.17262468021552915265 -0.13869099165787338035 3.1599485138084135727 5.1625408280608739986 -1.5472000913865868732;0.74860167870435145865 -0.4210827463391333958 1.2157294158785709737 -12.039394950151509178 -1.4773845186346310498;2.2446519922591194884 -1.6675628345718616075 -2.4807976137555849405 -3.623174351146235761 -1.1318135437566916313;1.577699787668802589 0.8465540017728528932 -8.6945167622003314278 1.004897958027500815 3.0550236911963390973;-0.50195067610775845335 0.91093649240129659361 -3.3706519380531028141 2.0188025976250956184 0.27576556197753893107;-0.094810338019437320756 -1.1964869052025310925 -0.26510841458829198514 0.43437493880299066218 3.4917407647978895291;-0.1575198099025384435 -0.13839091379748447164 3.1637746411684251058 4.978310058381332226 -1.6054535262965583531;-0.66318459429446463549 2.2975366524538149982 4.3219497775238560067 -7.8226844835041884352 4.365627183223947938;-1.136880036847396136 -1.046218923885455343 0.13293683442862941346 -1.2915070623153361851 9.3916408956375327932;0.19727850058145743328 0.46702888088881144846 1.6502846093840097819 -8.5351739583602217465 0.46291181402934278299;-0.10595830986154643194 -1.2687952684304661943 0.04138662116918005035 0.53040020690694822392 3.4638089146792916395;-0.50815597493157249609 -1.1776281765588265671 -11.551243541411214011 18.109793586530223308 0.45053606428152853658;-2.7142833254422975564 -1.1030971477238029621 -2.7063262352816863654 -1.688061612106248166 9.3740210181644467724;0.19812311140540905807 0.7666932008401925458 1.9479785947442334049 0.03577549008179171236 -0.80947203943740597687;0.10530115774842689624 -3.2636347708873687523 4.2555641724696160466 -1.2226371727680542811 -5.7419397995821928049;2.3724721673679836087 0.44948465301839440889 1.850408751417943698 1.9146746477267624353 -7.3918718311154600897;-0.22317212817587595008 -0.78236242562116897759 -1.3738499000355512969 -0.29754370487258524625 -0.31255265157133227394;0.69006607509281858714 -1.1903261268154772257 -0.012166344176214365091 -1.7679399946376366248 -3.077243206768121464;-0.19786551894401821494 -0.75577807132548868729 -2.4264832166834402472 0.074868504503521379756 1.5848168673723213029;0.57768285537208752256 1.395732742978308405 0.10995721146402478996 1.2249912155581514916 1.4232559814983209989;-0.43690968074785230257 6.3145563406075000401 1.1564596531041499983 4.5778713957449754801 5.8244833356519238876;-2.5368185306864177164 0.12737871733357300497 -5.1627609077557465866 -0.25503089494572611651 -1.015797623770714031;0.040975929265741936613 0.056997897147357839964 3.7308795040336999449 0.49005272466835902989 3.6840563855285131112;-4.2603944420182617847 0.18922775907803485174 1.2225562135976688616 -7.3261054279798170086 0.63242428382782323038;0.21015103070769780569 0.6042537620837440393 -0.020257247266167024979 0.73448966025032325078 0.96952744059204465366;0.56569534827784950792 -2.2270317247995459198 -15.859206880440455123 -10.135197380282168211 8.4439139868473134243;3.3772912837651132278 2.943733680011338727 -2.8848859711428445074 1.3306488298522156644 5.4389535461365259295;-3.3400467836803753308 -2.9544633189824978103 3.0145744139217258706 -1.347021449850671404 -5.4876707308696897059;1.0120209151339134568 0.89555561836545072296 -0.17897737862667265074 1.1182526153886012121 -8.4388389113761057558;0.1667305328560606259 0.58534134799616321931 -0.14836383535088856767 0.63428561479064349271 1.2344945600510175421;-1.3086882519984996964 -0.093290978468687488223 -2.3350784904102011019 -0.97347011700222618735 -11.026812625831011516;-0.91785342991728280371 0.30498807037319985991 0.75237658636216653285 -6.3647996187876918484 3.4897854540407422519;0.71143038608965925018 0.78201281023912172508 -1.6332495802494773063 -2.0961542270655195708 -1.105338939752228189;-0.61021213923042993965 -1.1411630478346026507 1.3660668212235358432 -1.1477430679040767636 -5.0669597282871077226;-1.2791498887879781954 -1.9226439927821812326 1.1925299626284850962 0.093545946368652752034 -1.1987340720303876207;-0.066317801712671764491 -0.3640059971415613993 -1.4290855878140469315 7.552932255513261417 -0.48695903592069944565;-0.73665042339738073807 -0.76541535158975770869 1.6007623423366463822 2.1297915549995272144 0.35851512449908573554];

% Layer 2
b2 = 1.1707732995705335544;
LW2_1 = [0.59484620350831907132 0.31077527712059260789 2.3988483688548907224 4.1461933229933309875 -0.23970412617237893405 -0.077943303508336517216 -0.52577803727873861916 2.1087258602614080694 4.8429413606463818098 -4.3751026223872102605 2.0441211680391306871 1.8225954976089402404 -6.8111815484995865688 -4.6291133648516833432 -0.25111514124127237713 0.25491070330856063775 -5.7119467996329502668 0.20246985563993735724 0.31061404743800075101 -2.9924141289291599222 0.63418807034999646888 -3.2808092124754750785 -1.1044264851484069112 0.10384561243566570177 0.11307082060558512615 0.41880407610453190825 0.08789110874180425248 -5.1880378313729060835 0.30925274318512246952 -2.7489753889794092956 -2.8058547436906602357 2.1781447994214806485 7.3332296403414121144 0.179268436344583032 -1.0646316761596383849 -5.8668212648485447147 0.55176579767780986607 2.281066090431186133 -8.8499977466991381903 -5.7986579802313551468];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 1.90239167587468;
y1_step1.xoffset = 7.36300175998845;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
