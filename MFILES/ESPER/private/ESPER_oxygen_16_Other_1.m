function [Y,Xf,Af] = ESPER_oxygen_16_Other_1(X,~,~)
%ESPER_OXYGEN_16_OTHER_1 neural network simulation function.
%
% Auto-generated by MATLAB, 15-Feb-2021 18:30:49.
% 
% [Y] = ESPER_oxygen_16_Other_1(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 5xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-0.999999984769129;-0.999998793562952;-77.961;0;29.715];
x1_step1.gain = [1.00003298043486;1.00000060321889;0.0138606862425759;0.000266418009857466;0.193068829037552];
x1_step1.ymin = -1;

% Layer 1
b1 = [-39.669355425065603526;-8.8398936377595500602;1.8336800559552188794;10.729999331582734001;22.050274960278223091;0.71884477614118846844;8.4813329802131587343;-11.068034699908295693;0.75346024443488979205;1.844265297152018368;5.8501191811505366402;2.1090638741607130591;2.419623470230928497;-7.2678301860392497957;9.9126790032255556184;10.615520357043203958;8.7240485331371040445;-5.9930798589933775844;4.4434263358838084201;5.6230360687357432425;-0.7044348826346212844;2.3941945886731650361;-0.078726523221648747608;-4.2571889563237821363;12.817696650783810597;-15.002546855340815668;-6.4004587185747841005;-5.6999062645648326253;-2.1966231236599478294;-2.9297081722214919353;-0.95927889824078860226;-3.0635744156666384619;0.95537244968299694925;3.3008904271183618917;6.9034481955651534335;-0.7597300105619136934;-1.3384254517933042994;-0.82971810029728543245;-2.8430349632738445287;-129.73084104234990832];
IW1_1 = [22.030545726196990586 -0.038739986757819387664 1.2893049634842659312 -17.985435406912213097 -21.350867724338346676;6.7969032401251174846 2.993912235950351608 -1.9524688962718397267 -5.9186290481340293468 -21.981853461746720058;-0.5165972771546222253 -0.46472732966470642335 9.2622033239225078916 -6.2203384214502266403 -6.9465378519308886851;0.25434983247675363449 -0.29391601606775780153 3.4666669419841213973 17.71251427917498944 -19.909514127707378606;0.044641084374757694642 0.64551985983038961958 1.0319865987298286747 18.745347098328938529 11.221409962466928789;-0.69128896106605830507 0.51302939121631696562 0.77987701593256653076 -0.11877647406171727706 1.1916450950563586275;0.11705072708753157251 -0.17882955857594326488 2.365094011828435594 13.566023954128759499 -11.643676550942975823;0.17078701280703181831 -0.18185970883721669367 0.47819919120281295655 -9.1747916714543400474 0.42503898505030274224;-0.68084120672824355314 0.27180761502876610303 0.76479519275206231388 -0.13675094713117746936 1.2457625172871529262;-0.17608129613488318621 -0.40758799728351019498 5.904286655186903765 -2.8957531298918306462 10.657980333610050039;0.05041587665852059752 0.052557326904894778596 2.2687951229746099457 6.6898914704355192384 0.51295023016300667074;1.4075348393599269592 -0.68880282899659250884 4.0403463232370135927 2.895894015898389906 5.2459744714268552457;0.051406971101746606889 -0.25361462664615669338 -0.48952195577090862333 3.6597466503709146224 -7.9669669559000491077;1.1318984897691681812 -0.13710583751072974446 3.7640823649025403341 -6.6067943519206773217 5.9647013969374667042;-0.11617421552368269178 -0.5479033993775911382 -3.3416632286325560486 10.981838312718911865 1.8132451963449476295;-0.36137122718618203132 -1.7691132788658956443 -3.3965620798711197992 11.091744255993425838 1.3143187818983350645;-3.482033572468105298 -7.8892355608675375223 1.3217485594688174189 2.134001331312792793 7.136546004596427295;-0.14662882146720562782 -0.7808658129594175934 -0.90913536010117845798 -8.2794465035352331483 6.9651549085599695488;-2.2588680516487826822 -4.687224313827315747 -0.040806652435602865092 3.8159632887372652021 3.3340262351396829921;0.11819329195998463933 -0.0048575277983617841729 1.9550250390761101382 6.5636424843186311762 0.76193448590575263424;0.8054884639770268917 -0.10208112480457535998 -0.74637421368639633723 0.18152325175192474127 -1.4135423900203072378;0.056716579015498667926 -0.2292625740685414748 -0.52389622239290478678 3.6927245429337944849 -8.2320882140086517609;-2.0429657457386167785 0.6865509300658743097 1.6146798347096511517 0.08470314479401248875 2.3604699651807141692;3.1417877656827544186 7.2129940294629903974 4.3927477992929127026 3.2356427798142037844 -5.4872629558168188879;22.228640864582914105 4.3950401761973330039 1.1343587851866723248 4.4545637303458374134 3.6058539838082044326;1.5279855398978181569 -0.61006340816185800069 8.6650989536930715929 -15.127994894075444066 -2.6911966222925967074;-12.59164508431053342 13.814664701932180435 -15.200526542147857256 -13.357870911972513639 -0.14826613709107172578;-0.083231540618215207883 -0.031598501167738497764 -2.0989087805840589418 -6.5853949636388389166 -0.57133164488605614473;-1.4698612880221770816 0.71941076474024989729 -4.2241961306312179047 -3.0056709299972430571 -5.3410073358910059582;-1.9799849537063478611 0.48142543869327525385 0.69275268692481206667 -1.7102358951751384097 -0.085434597460410627301;-1.9276841582994721502 0.86535961759182655761 -6.2045699635348299239 -2.7964337176506188776 0.44181038550200257831;-2.1657922266066167438 0.49351569762062191815 0.69796882576055385705 -1.7542325859511955777 0.037862552928188498991;1.9260358576337508474 -0.86283691500998382917 6.2429941278433389584 2.7566008507670498595 -0.41339134138755617709;0.83564773605585740412 -1.9967178993875001058 0.26834269003001554044 2.7363781835725240477 -2.6844489330736722721;0.76733296413847040807 -8.0471047632862759968 -3.0021628223940273195 -1.7998266652245322739 -7.4107022823302530767;-1.1552896267993286727 -0.049991473912163131299 0.36054961362061305197 1.5145492492149781327 0.81997253323231777955;0.36297837004285515849 -0.10864000209271425235 -1.1890399701879872385 0.16639241488253309065 -0.010837208321929581167;-1.2702966623990219475 0.0278792764835629793 0.44554351186399104856 1.3599322493549710344 -0.37105256886637172364;-1.3738660736468539803 0.9729986036483989631 -4.5543552844193895268 -2.5158638614839179404 7.9610988264562276839;-21.279326767252914721 106.3841625771920576 45.917153717119383316 1.2021579921689484749 10.682661060967740596];

% Layer 2
b2 = 14.031447471176436537;
LW2_1 = [0.046962619524863420672 -0.053418936322090722346 -0.18217970109113187926 -0.28405479889385154557 0.26935605882209112671 17.44416661915125033 0.42217510850733053207 14.38576410019653018 -37.877510238083843319 0.3055213822072074259 -18.151457919813339004 8.4489894455820593322 -8.5678950572412766462 -0.58303534060067552236 0.51140421090076404464 -0.32650917684059149737 0.099392356164649697803 0.27630065779654666702 0.074844218222158837017 -15.978336753543482374 -16.751166713983799639 8.5767167313447849608 -0.65602485809550126206 -0.092231749164662146789 -0.041245644895491685722 0.28590992120614128202 0.028188225838033296317 -34.279927502936160977 8.030654839859888483 5.2439467623980799971 5.6375557456496716568 -4.6786396643502383697 5.4808868759449120844 0.28155922028509067223 -0.17458067851449626806 2.5906520494121014764 -3.9096905941888318026 -2.7223299695087477268 0.23649850247181353202 0.29224873635955350704];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 0.00454442172233583;
y1_step1.xoffset = 0.3;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
