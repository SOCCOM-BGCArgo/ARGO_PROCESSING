function [Y,Xf,Af] = ESPER_pH_10_Other_1(X,~,~)
%ESPER_PH_10_OTHER_1 neural network simulation function.
%
% Auto-generated by MATLAB, 15-Feb-2021 18:30:23.
% 
% [Y] = ESPER_pH_10_Other_1(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 7xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-0.999999984769129;-0.999540494077341;-75.751;0;29.715;-0.9;-0.1386];
x1_step1.gain = [1.0000770825255;1.00022983623563;0.0140762793578401;0.000302617642608564;0.251952632905014;0.0422119037568594;0.00826143816767911];
x1_step1.ymin = -1;

% Layer 1
b1 = [3.342173316569266639;-2.4928657564800005275;0.9300796678101158621;-3.2847009809589970963;1.7086065063859852131;3.2742931135462725045;2.3259441087778895962;-3.8175375356338121513;-2.5691873994270655324;1.8184242220356847675;-0.60561049050299953223;-0.79402571742582761516;5.2135568491394890245;0.99987555407040984434;0.59441727155011658823;-0.95049286514555209049;0.8764832486050446736;-1.1586251056349388122;0.090120666950761540992;-0.86003323214444382661;0.80171341225939862785;0.79191775524521124119;-0.32024410318892765348;2.9581594015272889564;0.094649516042783571335;1.3620016384197601855;-1.287988667257431219;1.4620972233098001869;-0.19001561117287624203;-0.75491387391531095119;-0.98028896327803072275;-1.080214723500178442;1.0923080397087343574;2.4085101817617537989;0.29817284587505266114;-3.4922703754832320477;2.0482633499615943151;1.6776803352981199957;2.9094748469716749106;-2.4170726649649778572];
IW1_1 = [-0.68976511799468231967 1.4397453526178709549 0.83758730342519704948 -0.042870378153913785146 -0.55292412140672908549 -0.044016208557446305505 0.24245932273467560303;-0.1782113823844322098 -0.36132101734213561972 1.1045188714843687805 0.26988645660276322502 2.3255251858750498606 -0.24294107141278481476 -2.6868717094672720513;-0.1411380438893641287 -0.1455963451916449658 0.12722593684796479341 -0.24792005472856351589 -1.5354667819018090746 -0.58316455773521513883 1.01029097699204784;-0.56369807253307724348 -0.90245421043187934451 -0.32286084740469428445 -1.9294688238137611691 -0.18529459550963722769 -0.42413762888739187096 -0.52440855044128942275;-0.96233411012231784287 -0.00079120200120913464475 1.148892619313693908 -0.53620341745011801393 -0.78245274372751683067 0.046332692101246630845 0.79041973892648687006;0.24007730478431152377 0.72465054116846339127 -0.41042353214530419292 2.9177018789827466883 3.7372194621696097627 1.0426392906581301023 0.92303687478622720164;-0.017641728880954849618 -0.42848670594074683704 -4.0397439270778212617 0.09066234844133103099 2.3062300312011463355 0.58305224684792700263 -0.15352626562075227801;-0.020015701531913877853 -0.23666967095827182166 2.9763594695964670223 -1.0064829214546455738 3.2529256960574368662 1.5140178634500325305 -1.9919924383732763307;-0.20346979279669621943 -0.42504313707203345007 0.99251067572527673644 0.16578307901642169719 2.3726925737858435284 -0.2501429711824330604 -2.7431741968271414756;-1.4827274309987439338 -0.78533013208687341145 1.2316196666357386302 0.80097166293156840666 1.6406600927711245674 1.6621329550378471929 -1.6467660654620013272;0.27387017757465315082 -0.43331331227719116495 -0.73730109495416173981 -0.18481262934903924799 0.77971560756649793689 -0.79386944954617477688 -0.64738406022984751331;0.15021595231199535991 0.072257979042321104912 -0.010205691920247525126 0.19267837312874977473 0.93866046125011404211 0.76764098843425332408 -0.81131432546348525303;0.36826592116172118807 2.2829019407740651637 2.0228503476048902421 -3.8231915314761470981 3.3320273670026758772 0.33399966508612621841 6.797498291782691382;-0.11052950478960048286 -0.09147765157249046486 1.3774373136712589893 -1.2898221093535806592 -5.4240205265525487377 -1.7209968580913446168 1.266194974639285542;-0.39014532457984385516 0.21095668076526552515 -1.113485676489025078 0.29342725641556066662 -0.34296554631090603316 1.0598177023007469 0.1159188227049807729;-0.15758525268153947274 -0.020014492557347260404 -0.036015026401953448287 -0.73695458759156495798 -0.97081352258626263385 -0.84808856289990020016 -0.096742679717127577632;0.1032877905832264992 -0.56203161520668398765 -0.43531137364783778487 0.70503813138403559346 3.2009887810180530643 0.023492368838005414644 1.7097856894424714458;-0.12473556953745873477 -0.1845047604260839913 0.061506810547723535232 -0.64249278637508799861 -1.8488798640935917295 -0.023851409596122984808 -0.80059093927918323352;-0.0046732865187683976169 -0.01969526725338533249 -0.074312133079545789061 -0.34960813823063824346 1.4206254837730951657 -0.69470947884100353598 0.94736672458547666054;0.17744511299116894065 -0.21298621458098049297 -2.3280524605166346142 0.068541400698854157425 1.3877018344645795089 0.40092050843183185682 -0.49920729975785932409;0.004265783366667017483 -0.024367426928294456251 0.43333333369943838331 0.18325485914125075326 -1.1689488503056530977 1.2226886529404037418 -0.3309049483420430926;-0.17090170450317443418 0.20312526450366361064 2.1518006378164304948 -0.061532179169839759658 -1.2506521202116531732 -0.43517877077140343367 0.52560818539014408923;0.35322473457434316879 -0.14308494626403342465 1.2810116872151657841 -0.47670525838254484974 0.022753311336711944807 -1.0606017410319985572 0.27329177667873816304;0.019026511441708481714 -0.56397346344240073535 -7.9197453834638293912 -0.011531848457303870911 -1.6062229140005814809 1.0565042776508513089 1.6650357910311017751;-0.33512855422098880576 0.31227788669945788502 1.0012223793556165319 -0.018404137144106248736 -0.94980245281144359826 -0.046661345743721452384 0.98600416852564298775;1.3627890785237435356 1.8447383837359332404 4.1232997710683090276 3.9848549805901911647 0.95628319600773914466 -0.59853252287852010127 1.4139710459215684146;-1.3541121822191528601 -1.8457853792852036978 -4.0918556152475646925 -3.9683977551421452112 -1.1406999416469307818 0.56834023424935620206 -1.4237114117034528338;1.1741370395497257029 -0.3325172808095651078 -1.1466823890445125844 0.13723997332561424511 -0.27714915605149592626 -0.041526045173175075986 0.9114223181358007686;0.21186857844753143043 -0.33100283517812334466 -0.48135177061458422898 0.04678609007369298467 0.27066461561001742275 -0.51475292468110167565 -0.50840295664103496431;-0.051211937217746951456 -0.48124807271209874004 -0.089958056050570806006 0.58302197207526285094 3.4161396666823238277 0.35211478277311242246 1.1740707234995115815;-0.12223123138963455647 -0.10918050295609306455 0.025001113822325452679 -0.70334837632745461633 -1.3162587572029864624 -0.50377926207772028011 -0.40366166884143678262;0.12723468883680780217 0.25394667557638633815 -0.20310762232459586563 0.39139161536486943849 2.2122969040653281958 0.41300619438616908985 -1.2363611367827886944;-0.18093654524065397315 -0.031697350772478379011 -0.13150952209100280621 -0.019042612964328509834 -1.1664745013600603674 -1.035807265799471466 0.5948070609872911918;0.31377835147956878448 0.58289304471695813081 -1.2686947968629256334 1.7504608053099275367 -2.9131026376106841091 0.28336347284113466705 0.70248452283028539611;0.37786384766920605438 -0.049941740025678839354 -0.27217602834064724693 0.22561851243502512032 0.90780275176767633027 -1.3294436222346035503 -0.47991060099075155687;0.87173911082600152866 -1.9621812957522328791 -0.8892860042816708166 -0.11360291476205794381 0.68623073179177696002 0.2125204375659801026 -0.253054115107391564;0.3281725073337007359 -0.064522459772600876393 0.010281679471710202314 -0.31314277395912371027 -0.63144616585717150414 -0.64591570537932352369 1.1155999055426693012;-0.16201361103627998084 0.68253732335579053725 0.36047343292282213456 -0.39849536956748055072 0.19117742743220980661 -0.30964365076623290296 0.1856684988727115293;0.71278749166910115864 0.17251671440484520059 -0.54596139804282006747 0.023370390686557784149 -4.9136146762967412016 -1.0053683364371106546 -0.15410059613193943795;-0.30254317433349287025 -0.53846151018595189708 1.2999011661362895875 -1.7416291581970988478 2.945273085268816704 -0.30276403226631259935 -0.64687082878127299956];

% Layer 2
b2 = 0.5950123569555604286;
LW2_1 = [-13.48038519644048705 4.4976482546274159091 19.038588072360759895 -0.56360564723365436102 1.3447214826012932054 -0.34304640514376177896 0.37877819623996095144 0.22353443456674335077 -3.9193683457721264496 -0.34056348655123569458 -2.6009516313275757859 23.943791443455435086 -0.14988422172962501122 -0.3402970022075824108 2.875714223024985472 11.329890827539811582 -0.39355924045556778257 6.2435126380606096319 3.8548551096743501887 -6.0430690026966100703 1.5237706752525379539 -7.2209656814636025146 2.7415626802466701584 0.072069413421693095945 2.0035630607533998493 2.178817955587567301 2.1830895541057944165 -0.56462257100916446451 7.4940500892560582002 -0.60756328570405637723 -15.665011573007655343 6.4077466212284299729 7.6880162911364147149 -5.9550370136285080136 -1.2431477182533643422 -3.9685534161689703936 5.7325698057905309923 4.6065009295749463902 -0.72371433735241408325 -6.3326005804779086361];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 1.90239167587468;
y1_step1.xoffset = 7.36300175998845;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
