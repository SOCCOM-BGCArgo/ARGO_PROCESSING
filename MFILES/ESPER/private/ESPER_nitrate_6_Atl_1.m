function [Y,Xf,Af] = ESPER_nitrate_6_Atl_1(X,~,~)
%ESPER_NITRATE_6_ATL_1 neural network simulation function.
%
% Auto-generated by MATLAB, 15-Feb-2021 18:30:34.
% 
% [Y] = ESPER_nitrate_6_Atl_1(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 7xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-0.999999996490807;-0.999999994516886;-40;0;9.1619;-1.99149636107278;-0.03];
x1_step1.gain = [1.0000000017546;1.00003626070655;0.0153846153846154;0.000309885342423303;0.0656325902039552;0.0604107502911417;0.604229607250755];
x1_step1.ymin = -1;

% Layer 1
b1 = [6.5427170006834725058;-1.0855002175447603374;3.3456025586121507231;2.2549573990214550889;-9.6516979889076477406;2.6384848024704585789;1.2498094814534523866;-0.62787609819157685909;-3.9245279422379977241;5.7950174208672908804;7.3280589525481252267;-0.53641710488728433504;-0.67691754920818292263;-0.22569933524394716895;-0.1462333962838687218;-0.43121742903540044578;-0.97653274057938510566;-6.6808182427298961059;-4.0066665847704312498;-3.6834910034260817113;4.4627050118500921627;0.10335141342324200009;0.61451426675124420917;-3.9393793096401319431;0.28892480133096049011;-0.44102335248988255856;-3.674509154662771504;-0.7175087486293836303;-1.0648498429797774723;0.48247165615970882824;2.7463592703879080581;2.9356850776842411399;0.0012735052770308733644;-2.5225552820216434746;2.0990514417250079049;-1.1435405223558354759;2.1246398953508456309;-1.0923903656328437517;-2.2399592139164479221;-3.9772171643579361522];
IW1_1 = [-1.1157901867281898589 3.6239428167467151454 1.8781186826710529747 -1.2979465952344027002 -2.5108169497857271146 3.203483918794867602 2.5065662227497442771;0.45296147832755478957 -0.56944261552955277583 0.14091784505072948996 -1.1654945190320509241 -0.97862396923147221273 0.48125072888081671385 -1.9355171375647446386;-0.13427818848769032534 -0.16235767725574731801 0.20282853644696952067 -0.73925920787197030304 -4.7753131601817218055 0.13054415354939016836 0.24129188409256921433;-1.5031372768025015318 0.35459839691588251887 -2.000924421146042409 -0.74596104675775598558 -0.65300437705296776603 1.0586144254822198452 -0.99406790099095143631;0.21715465526095478754 0.54002218036124238765 0.50807679185989029769 -7.778510543946749678 -0.46460209807409968974 1.3983276337828629554 -2.2829912768234073006;0.40419575151045156192 -0.20505816136907542568 0.36302789948790448182 -1.0317361352545915132 -5.9102121549574695436 0.4897719424731563076 -0.5516216511399362199;-1.0768924952355665159 0.68828850843083277944 -1.7771857019680339373 0.97863094891421231747 2.0462441093761856159 0.34281008390627437654 -1.6565163190203220367;-0.17217137226642181824 1.2212461654833453029 -1.1646658750978575725 1.4002091457043090994 3.3435939472714668597 0.43862087553328871214 1.7138562235947358836;0.51526925623913000241 0.44979236658391380521 -0.96904989186614520769 -1.282079056407097406 2.1563745924700565837 0.27286538245780644907 1.4537299974923116874;-0.92565049711282709755 0.041360892851113301161 1.448846335084747583 -0.50193257349287623281 0.72210497742810464405 4.5048154812295457816 1.743543001375414514;-1.5250543193532064556 -1.8391720520399208461 -1.7640330459478454905 -0.92777133868725192301 -6.7316983239856300614 4.112159437049715649 2.5354210960936249819;-3.2497655263146452143 4.1406022661508883331 -1.2403011255437901283 0.62113158827915493365 -1.1988067116249929711 -3.7322666398722423864 -7.0517443052959967176;-0.19547986444195666889 0.56435864927554590942 1.283243476628555424 -0.90008784716480072507 -0.23869897730086306331 1.4213386952474236224 -0.22294262055531388622;0.13197153407139763925 0.16987631481474682604 -0.31665635557307353354 0.67563608041904055224 -0.1300551723545030347 1.02778407803466032 -0.51015871232807130653;-0.0052116180778989844649 -0.46387721544230764437 -1.286129946038179872 -2.3060775876043515531 -3.1713698245421024779 -0.38655367701942150438 -0.78361692712890518298;-0.29014426784212710153 1.3547087139609998996 -1.3228246647936316993 1.5086764504371230622 3.3893101224630481916 0.61326810271364950999 1.7283838380874969598;2.8444146626254140919 -2.9542933298686482324 2.2723072969600823789 4.2826327884865929008 0.23563753683401761352 3.0054243928693358257 1.2679465911477489914;2.0113635338098059258 0.71625582868644055434 -0.97965351530550670578 -0.34492882757640763725 9.2092852353924730124 -0.88811977337753655881 0.5709222346446616303;-0.69748599703182478926 0.20073366178594534426 -0.69691472810020838047 -0.71148984692833128207 5.6385420218950663696 -0.6030523255193389609 0.44930914844508951234;2.0951414092889071306 -2.2406008987706482749 -0.52206635233902187743 -2.9270281400908673142 -0.29776608352949962555 0.75539949194989663983 -2.0027772975649207332;0.83284016647210890039 -0.2607038957105239918 -1.0263196013088913272 -0.10107779193358934489 -1.318150672449031946 2.2298923480592236501 -2.8474567471035872046;-0.58452168124428416363 0.11538396705277555176 -0.34206048984496650878 -0.50643539915055046929 0.83323153127703486476 -2.1194815017908634758 1.3538886194625006087;-0.89885942026447662734 0.2853058361079259253 3.1677466877604318896 0.36596960179683096781 -10.666737743968452534 -2.5439145933575626479 0.66364015208764481901;-2.139833850184180708 -1.8474720432229665423 2.7300527345391398804 -1.9385545155879531087 0.78490183683718006691 4.8199214692809597693 4.9607819053107906626;0.75084474575583937117 -0.31118149364098374177 0.47659378633113735901 0.61060459884257078933 -1.4098212024551926014 2.7012397653551172283 -1.2599818828223787737;-0.31785846055437477764 1.9013040711535895699 -3.9382027635237610852 0.77735521294301712647 2.3789378423267977247 0.046956754187301490144 -0.24306677382477415161;0.32266051304765980268 0.44521498196887471233 0.00055210955100341320683 -1.1979864730219815794 -0.84970546067703056625 1.5343118044404178146 -2.4811265807494522484;0.33506753108593029244 -0.48160354176779818225 0.31657193922764664817 -1.8342745069744190722 -1.7534481687695886443 1.4668863724984362307 -0.84516132284131451069;-0.11834204270229332912 1.5026059770474335942 -3.3879827949249210484 0.71408116642575658606 2.8095555176924142948 0.059275026937218797118 -0.19940674385392390122;-0.4715526277216216533 0.47095014574195914747 -0.10362061315789185267 -1.5816713590316695548 -3.2253400428461787008 -1.5835494170500965527 0.46735495352958872362;0.29157440205371421005 0.66749641359162636967 0.20272755266873423996 2.22011144934747362 0.51955118325612870134 1.3882673680036512476 -0.8519639255463008487;0.41998544226886791453 -3.8408667120880624068 -5.2730682485405289128 4.4958543429423647453 0.17741546737625032981 -0.99007855353665263909 -0.78425360429209611812;-0.17139320591855058962 0.15700247999845154401 -0.42160779877646475944 0.53851746845081061021 0.24784053441973069587 0.28104586386035540491 0.18756492176855041332;-0.77120446839285472507 -0.44131889707368304743 2.6075765160024615419 -0.28386573325317648875 0.65501087210731290256 -1.922886151681161726 3.7870402054910199396;-0.21745103049079006485 -0.52493251632601767298 0.76828443224785858412 1.0376812012879559344 -0.28400250561274431593 -0.32806406711160157608 -1.5142898980827030897;-0.062594260501265486241 0.29037165602903464157 0.6933127578847454453 0.19459801633129958365 2.633524662950165407 0.4418447133238573854 0.98909464001396463217;1.1089539406477380012 -2.4101056495973063321 -1.7407056355025753991 -1.2778888257512921456 2.347122218012826611 1.5760203987254051139 -1.611867734329655022;-2.6255907131028792811 0.12018415839808083145 0.92750756292386116186 2.0832538683210857222 -3.022796869653025631 -1.4444199921912255213 1.1278799202005735935;-0.02443103919374159036 -0.32555142356054356245 0.40419467090748462113 -2.042511060408318091 0.2984246135722775084 0.24197755964265810213 0.93001075703415114759;-2.9175965910180035046 0.37706113196808971333 0.067126582089851144497 1.86963296355526154 2.9386252766551228532 -0.41855792699418792324 1.0343520875428164896];

% Layer 2
b2 = -0.46066186086240717978;
LW2_1 = [-0.036922824004999181546 0.52568011049074114815 1.3577811951523042211 0.24373847970260417717 -0.33486014453287582526 -1.3023704637384927452 -0.20676878781441118682 1.1523660044940506886 2.1638018733654078574 -0.74254801003297055129 -0.05531321488531657643 -0.031434300815738780432 -0.36983379121737242068 -2.120615163987423113 0.19731340583348352946 -1.0620636325276393563 -0.03707347706004748833 0.091251207266198799961 -0.75312184059182174511 -0.058779772268877587826 0.47674425498289207948 -2.6016927378011449612 0.14592422752778064221 -0.12787378611704230957 -1.6753178610838908025 -0.67385278841219986568 1.2998088475838067701 -0.42428703620590024759 0.8141152935524889056 0.38734872803442182976 0.39521602595576726946 0.038077282057676978266 2.0311527554705897103 -0.13959414497544275768 2.7601657344123768922 0.80163471207733583146 -0.065711762436725010272 0.28752468652079926636 0.88172146245487592608 -0.34922318068542690384];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 0.0470499670650231;
y1_step1.xoffset = -0.28;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
