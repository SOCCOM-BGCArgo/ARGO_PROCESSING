function [Y,Xf,Af] = ESPER_TA_16_Atl_1(X,~,~)
%ESPER_TA_16_ATL_1 neural network simulation function.
%
% Auto-generated by MATLAB, 15-Feb-2021 18:30:05.
% 
% [Y] = ESPER_TA_16_Atl_1(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 5xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-0.999999996490807;-0.999999999390765;-40;0;11.29];
x1_step1.gain = [1.0000000017546;1.00031699124092;0.0153846153846154;0.000310077519379845;0.0705602618858232];
x1_step1.ymin = -1;

% Layer 1
b1 = [-3.9383571898093983066;124.89507197064371269;4.859602235417505689;8.2564017371069269302;-0.22446770792108827752;0.43320196712206782141;0.8049410547999016341;-0.52145392434220394495;3.3327362813441685496;-6.917600728107679231;43.760192100354295519;-3.071087337934987449;-0.41544517043104417509;-5.3644788117019945872;-3.4257899298033858138;-0.96096713817114054468;20.926203082584134307;22.732059314766825509;-0.35333449303356861959;-3.9052488379042564759;26.49163159497176423;-0.48490143265650437199;1.8880218391364753661;8.6981851837411632289;2.6088685655906584948;18.481243638107645921;-1.9532341755001714212;0.031337865752335436476;87.669957381950041508;-1.3755373363138847509;-0.64007014645043946999;9.9887881730475385211;5.7104066109928250938;-5.4583968721718969519;14.811209131375663972;-25.845976865407688905;-0.56020142933726813084;38.821039663396632591;0.76437379433434349263;-10.840028691637504821];
IW1_1 = [0.36056051751595857846 -1.8527699933726715642 2.6280087281817410272 -1.2882088869960959254 2.5909455430477530413;12.287485538710255284 -25.466074007767048215 13.849020318686010356 34.061717727714899695 -152.39670894641889731;1.9456939585718793229 -1.5131435492992624248 2.1900168063952265562 6.6715111333345111788 -2.8572483723071870898;3.5006159218100201258 5.3279784625923296559 -6.1555650439403510887 -0.98851828779910688727 -5.95911291619808825;-1.1992611977059706163 -1.1323952920591233706 -0.73395118404005044166 0.26500093082462383709 1.3935043331023837521;0.37734833711817694635 -0.80863188990474765827 -2.883502516831066842 0.050520453921831971755 1.9167205187270643929;1.0483363135349903494 -0.5989348873061488554 -1.2871892633564490094 0.4479487961602216517 -4.2921488254178719046;-0.01365544512273949955 -0.14616959279364072355 0.85220203285525319981 -1.5742551818498684568 1.7922867919489091637;-4.2559687340856831028 1.0519471139090399436 -1.3714854148675013068 0.38752094237633843976 1.3589488788613155457;-0.77373457928180544574 1.6852611932146686069 3.1648893424313948586 1.2832682148146328238 9.1422777852965619871;-3.9747307092501160675 -8.0152796600732489907 -39.711597286664598982 16.562880922329764388 18.210064859036517504;-4.1205948527453726271 -0.88847746413366213147 1.7329420543445037683 1.8624151596110536389 6.9124329065863578947;-0.96758993681874660986 2.4076993785430746975 2.0863512959686802972 1.2449288719228772671 1.5200344735944244512;8.4408467387210368571 -11.245436228913209931 -4.5285933933196496071 7.6337516328613235217 8.8421806621697065509;1.0253422076437788135 1.8991068257356726878 -2.6917126942558424751 -0.30390794208941812604 5.2004614621346751946;-1.2156124358742093072 5.0090231528897941615 -2.8844196960405725783 -0.6152781705282618363 6.4317115613422606302;-3.0371939396757778873 3.3202942180694421381 0.55048424813079943618 -2.6925119496185634382 -34.653187943378256364;0.88095508095143693073 3.002235476467528752 4.192871888630555155 0.049032634555023685285 -29.739993433379094512;-0.49217497345529326314 0.8684651740382899332 2.7570271207330114827 -0.051314771266952337314 -1.7439453141162852834;-2.9830631695903075951 -2.636144307126636388 -1.9267825221738446029 4.2355721700567885435 5.9560435689511992408;-26.576734150079204255 -8.0664761502367472445 -27.725476415569435318 -10.766735070284340736 -10.085577694202376264;0.71183654263590367961 0.89807537263169645581 0.56071178303310043045 -0.18847748412582973621 -0.1335856517281245881;0.17167788634323158381 1.9408841965375140948 4.8468848239613961937 -0.096261208488253396931 -4.4072957369205312261;-6.1581030786162012092 4.2998806717666440136 -2.2048819154553482846 4.6590647564993776797 -1.3422745632536614568;4.6422783776777700737 -2.0014457410251771385 3.6091781968845944029 -0.91000587098716723133 -1.931269717820093712;6.9817651279868693237 1.5502347917079026818 5.9834875756712397887 3.738869122125967781 -24.82777158024908104;0.59028754064037991522 1.0341432292466832266 0.69492794893972420489 -0.65631360083330880784 2.7697358455218474838;-1.0227423991141053605 3.1755655186962732373 -0.89961692652319380503 2.2351867576358115386 5.9905396435465307903;-14.175154732581814798 -43.345798258667748826 -16.295703584192573032 67.717584128255467135 -94.970705537962970766;0.058286876705247021857 0.49656513709085470243 0.75826339149097421455 -0.62199140009650455418 2.2089516847361121421;-1.1109207850070541568 0.69342392202940650314 1.190866336110570245 -0.46286710908863326619 4.1298643665884231524;1.1120474339065775649 5.007695451952138832 -2.4212074339718214766 2.5959730683205082258 -7.8053277920241992405;-56.011341855938944434 11.98231955382730618 -60.558750711295779467 39.877021782012540996 67.031634318555461505;-1.645432278912109858 1.246476671446454132 -0.99889514813217827882 -6.602537624054206411 2.8577391166826631164;0.94976188207406286867 3.4589565933652135499 -2.9833141035722579026 4.1230574180971562015 -9.5677566371574389592;16.072540885196055171 -12.411309204634740411 18.851278929516062988 -4.6685521252229271738 41.610779997957166643;0.99122927998390408799 0.42909405929085908671 4.9960792987215860705 -0.088847446814350222732 -3.3205734688043309077;-41.474685887736335133 14.675706677443091763 -55.914572820598763769 2.303167197792900911 10.686703106971537025;-2.6000451425940660499 -3.5856660131656652446 0.80556157243532822143 -0.95692206990319650384 -7.2414825218262812712;12.878669954438919376 3.0970508040891928658 6.0814997119329445852 -2.8601947291379801186 27.918514838227995511];

% Layer 2
b2 = 0.28592392804680644147;
LW2_1 = [-0.084846881698311935049 -0.0010238065742902259861 -0.026483671502834447986 0.019385851337521915749 0.67501973090500211327 -3.0089520983740536408 2.21833461112992536 -0.16446418773591056639 -0.10117781349502071031 0.068240283259024814289 -0.0098833292418834678417 0.016488006235417615453 -0.096778699004610294065 -0.023288152440012199751 0.072933108146513520031 -0.043317608396749168742 0.011970072926442743705 0.020613167447469177979 -3.1753326750774397702 -0.019670868026038429432 0.0038569693923258428422 0.73161933081604146878 0.35960882844419889137 0.020574898238041254561 0.15299414653342716108 -0.0031298327665519000071 -0.29144672804656907017 0.062461131321406231087 0.00082163086261862589531 0.53754011992954220389 2.3270130222182547897 -0.017384197778058479295 0.0019766131073753068909 -0.03136895475026097585 -0.02579943172882583069 -0.00661333673118941201 -0.33152899226641496799 -0.0030598935444555385409 -0.050135251509247240331 -0.029682350747088793314];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 0.00111018595614765;
y1_step1.xoffset = 1025.5;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
