function [Y,Xf,Af] = ESPER_tco2_8_Atl_1(X,~,~)
%ESPER_TCO2_8_ATL_1 neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 12-Jan-2021 17:03:55.
% 
% [Y] = ESPER_tco2_8_Atl_1(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 6xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-0.999999996490807;-0.999999999390765;-40;0;9.1619;-1.99149636107278];
x1_step1.gain = [1.0000000017546;1.00004398834998;0.0153846153846154;0.000309885342423303;0.0656325902039552;0.061098595529566];
x1_step1.ymin = -1;

% Layer 1
b1 = [-1.6702658751386041;-2.157594656666793;-1.6118211090009207;5.3452698467389075;3.4747179206574326;0.42783337829631485;-7.7969028835605299;-8.0346544632695327;0.15429132453170441;-3.2055006781836251;-2.9654794626332275;-3.2135570847753456;0.7761655488071536;-1.5374411586606542;8.3069484789505896;1.4599586219416911;-3.9990477930685691;1.3218017975679357;-0.68232169253032671;5.7403884140029611;2.5998053999949904;5.0765827107879495;0.63061345647429945;3.7995134123584364;5.798305365946371;-3.314557935072199;0.88445265950452612;1.7895916701644621;-0.026244138303940547;-5.7103887125447246;-0.28782576087370965;4.2432535556543449;-1.4554442801935934;3.3713107276292917;-1.1196588855287055;0.70711620520372731;4.2864566650114559;-0.95239620655488766;-7.0334659810755182;-16.666621249829724];
IW1_1 = [0.66576795191971005 2.3797180105352984 1.1695036771872285 1.0347043093487316 0.80143700591341038 -1.0676150397119382;-0.0075768862135314422 -0.37436775655803811 -1.2578559339406044 1.1333507250312416 0.37755188865927158 -0.65354174649331154;-0.052429476398584599 -0.32770865445203756 -1.1178361001710018 1.060660615498856 -0.20029213486903757 -0.76663834810583564;-2.2720282511911662 2.3523126088282087 1.1064858959696171 0.68392331662630901 -7.1015569953445601 -0.53083105266189212;-1.4457539509596267 -0.20535496853975194 -2.2729283245367449 1.5298488094966007 -2.9409096752745647 1.5868091966447868;-0.46045462357362155 -0.52939570219639032 0.72482997955979245 0.14525909017246125 -1.5353626533631681 -1.1669656495596252;0.69129568221182291 -0.019793860967527232 9.3382695948836236 -3.6093643589585511 0.32655217910407935 5.4329783960363383;2.1075576193226957 0.63872894174663519 -0.53609896199027052 0.17388685562692729 6.8285706745415116 -1.3068545681301516;0.042577287383998137 0.64507115211872323 0.20221875700198444 -1.2369024404431892 -4.6620680650539379 -1.4913753068467199;1.1507919394325579 -1.122387366712142 0.82745581274302926 1.4507277722474285 3.095199104373128 1.7489681472921308;2.0965211623849966 -2.230868765035837 0.53294654743789716 -2.9689979128421462 4.2077568297196759 5.1782188538111358;-0.35531241560183019 -6.9376933209858294 0.091845669862827092 -0.58245278324847638 -6.4440596299890576 -0.79059895691937365;-0.27393787514209345 -0.6920530178986265 -4.2296398862057432 -0.88274551710500315 1.0208340081785541 0.39807956732544031;1.1692692537695712 0.15709848046708291 0.45416911918783454 0.029518712691111466 1.2112542003921867 0.69301779940992825;-0.38489918085896019 1.6925905669669203 -1.6293324051033717 -0.23405875463321868 -6.2454070170285378 4.85023580125418;-2.3624842247152107 0.68941217637147401 -2.7854403394176739 1.7711464832141464 -9.5566304028781381 -7.4703565976140469;6.5537653580847586 -2.6821147249885113 -3.8790481483682044 15.263121043768052 16.193136180859042 -5.7534533859965284;-0.66940520341382204 0.5728038718815871 0.91610677391851469 -0.75073035341465078 2.3293926344808682 3.4954821592092835;0.58344961208665291 0.56418414691869379 -0.95704721110113 -0.28279659266550594 1.7914830918519487 1.2927070675231875;-0.0060229839639363448 5.5108732112205896 1.1108536477706217 2.3540917116522908 -6.3645073896250217 2.8947469311981711;4.1119977813120094 -8.0601935142964098 12.259064414990018 7.8375365187179034 -4.6626162699621938 3.0425125059322862;-0.20474632149223471 0.065481144728827628 -1.8974709032267771 -4.8119062508724886 -12.338655092013148 0.48618206667669689;0.98110201018120324 -0.54983118527789232 -2.7210897143796404 2.5944899809700499 -1.3050703346903949 1.8305077904529259;-1.8078511336285361 -0.40753354303150319 -0.61104189626433802 -1.0819171048692886 -2.166924846782214 1.0654376533912691;4.8448258496083199 -4.0690692958343515 -2.7985959469947721 -2.5452870362077675 -0.86090614491247408 3.6149793339153984;-0.26273489808271688 -0.67712398553137287 -0.045951800240621898 0.93209432479921661 4.5048121150619691 -1.4470936273392834;-0.84327399221133559 0.48437738463574609 -0.45914923571895744 -1.5410507081387161 -2.5169841075436379 -1.4285881733272365;-2.5541651024952836 1.9942637140352542 -1.1115766357888406 -0.12479039589349028 1.4851990510552486 -0.44997094060890996;-0.79551117634992086 1.1987014977408397 -1.1064456644924645 -0.076727849144056379 1.2639001535202949 -1.1495474100552838;0.060815252238394714 0.48752466608457962 5.1458108196673402 0.78986044210407202 6.4994673263300813 0.73093755492000023;2.4285183856724819 1.3361110818199484 0.81053701597543537 -3.6073307861150452 1.8240299883035407 1.7358814029255347;2.4062550996026548 -3.4242556535288324 -0.32272802570270864 1.0573489506136453 -5.1255179208869457 -4.7512712136284518;-2.9439044202343325 -0.70290919632614579 -1.1599458972882366 -1.3532201144480909 3.6567881409614089 -1.1517201400508252;-0.057227308866250694 -0.040412776031196411 -0.38324122538668115 6.20466736974344 4.089552683267609 -1.5154632458711061;-0.63410058422449544 0.092439654016007539 -0.056691038398256878 -4.6028911436403739 -4.7421006285436222 2.5098042440802422;-0.06566252501407735 -0.078801418534136553 1.5554852022702381 -0.29874281266120462 -5.0796430586663242 -1.0334105535670191;3.817778131537616 5.5223775191865556 -2.4780424156807448 0.81464100657646255 2.5358374163780173 -0.41715099793465049;0.36397500825205492 0.22925677846213777 -1.3225293229069475 -0.089629048257706956 4.584254414183242 0.97069004670589776;0.25151368617021225 -2.9425771328244914 1.1633295620547082 -0.6107296069651611 5.0346969466264975 -0.74712711036548307;-3.0098233961526497 1.0491688722025321 -0.69033644526920057 -13.256731292641495 -0.91917592692745531 0.73730713283453508];

% Layer 2
b2 = -2.6042842599449045;
LW2_1 = [-0.1144132688508623 -2.7928629239322649 3.2642039079917176 -0.21576408500137303 -0.073708415140766786 -1.5087576335386401 0.031238920637798501 -0.17539458342484385 0.4313322545481531 -0.17964028234236615 -0.040762359843448809 -0.075057224377821738 0.071305471656906122 0.38121181948243393 0.052267066425486605 -0.048087820034440031 -0.014130539554251588 0.14739423091939105 -1.1999081318909619 0.04584488368142834 -0.010705194137728165 0.063836519807770845 -0.081049469534550861 -0.24476531123813774 0.031730513260752803 0.39150494576663286 0.22620407183741881 0.19835952088306558 -0.29741970799679546 0.063818277398658793 0.018149390362870093 -0.037506386854085756 0.14097570618724223 0.24093017860036547 0.16405121483573992 -0.7954556229835904 0.038954563150486662 -0.97418587861602479 -0.10367544043667702 -3.5104670831397873];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 0.00115315130997576;
y1_step1.xoffset = 678.286531932822;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
