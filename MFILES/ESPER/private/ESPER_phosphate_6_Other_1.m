function [Y,Xf,Af] = ESPER_phosphate_6_Other_1(X,~,~)
%ESPER_PHOSPHATE_6_OTHER_1 neural network simulation function.
%
% Auto-generated by MATLAB, 15-Feb-2021 18:30:28.
% 
% [Y] = ESPER_phosphate_6_Other_1(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 7xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-0.999999984769129;-0.999998793562952;-77.961;0;29.715;-2.18999082656054;-0.9];
x1_step1.gain = [1.00003298043486;1.00000060321889;0.0138606862425759;0.000266418009857466;0.193068829037552;0.0582073296585987;0.0415843642790311];
x1_step1.ymin = -1;

% Layer 1
b1 = [-3.7485458515862641882;-5.7986094735223252528;0.76299061664529677085;0.059622079269954150749;-0.25643920996796509826;-0.6261906161705482754;0.45472930335330774554;0.69927217343624503698;1.7497157954547057912;1.4407688248672596565;0.83839360826172248942;0.31338751291702232615;1.0348124022996953997;-1.1314224253679003862;-0.32129542716147679871;-0.39609188489451641058;-1.0230711517111026332;-0.54409538944961866047;-1.1952893787659957248;-0.56708037937587352229;0.88829018946112048294;0.13763250659668191389;0.70376828177308980994;1.054061362044405481;-0.39025315278949246345;0.28138704087318350267;-0.44368017742197796149;-0.93862224369280722325;-0.56335073377409361495;-2.7487177975772341121;0.46160563913417196336;-1.3990620247473879445;3.3422813979289069941;1.1547304783444629628;-1.1344371408684461588;-0.78743938519394207631;0.51101733950517813643;3.8340370763097531004;1.1857975244635436951;-0.91178675932257213788];
IW1_1 = [1.1401244965680459309 -2.7623628068945969005 2.613229090834465751 -0.91541721638844708586 3.4639681052048523213 -2.537856615603422572 -0.29826098738841666513;-4.566832863241981677 -3.8533351440743661698 -4.8575425091601402983 -0.13290341690548793108 7.8694798733333657381 8.3008632084440918675 3.7366630022746187834;-0.16961905956896988767 0.42685407296188482285 0.68939432352412288729 -0.033248333325612000611 -0.77615778864767437373 0.82319162486546049173 0.12633704976970569489;-0.33608847419161741454 0.54328641392501586527 0.80529446753422506688 0.042920963704931862359 -0.24223491260769416944 -1.6185937047783860443 -0.44749882373857341467;0.068403060830994816266 0.73153030874515034832 -0.11703905054319194146 0.90293120303542151461 1.8189324157940838234 0.85857315500699304955 1.3517021769065897807;0.28720218979660183667 -0.45547467713102179898 -1.0291034400235847812 0.2448430723401398279 1.8193090267241684987 -0.16846803533706067313 -0.50191142506478358953;-0.48761308096874439455 0.69676279667676055407 0.570690687604264002 0.075812326786653783106 -0.82664807641029147689 0.48212263612179534489 0.29219877735835442234;-1.0460054135189935653 0.23376296953607833551 0.54548014448640180785 -0.34665574364764001336 2.5386450012203325421 -0.22368410640298216907 -1.1673096942179050917;0.094911802977222473054 -0.18312745172616959333 -1.6485748611919115447 -0.17948608760189274647 -0.38029981388365785566 -1.5490584768515271996 -0.15518427245516516755;0.23597030106848113085 1.4202009871437752953 1.0036254083986382302 0.66764993925364590766 -3.93134393607778998 2.0051534933010897177 0.99182812613648663191;0.11773007564315535189 -0.36837194062319134069 -0.92569746560727772522 -0.16987863896185892432 -1.0013829989779929885 -1.6217643931324330353 0.21884827606623014074;-0.39154292325765865934 0.057964007775921207177 -1.7313767750795197031 0.68045929725611054018 -0.43089191573798413248 0.782260972611456884 0.61366538970980777368;1.1863657912268890104 0.42192151510654152258 -1.286914976849447001 0.95541767242120401171 -1.7216770544627291173 2.1385357742767125977 -0.061318474549132313822;0.10046308721881865023 0.56424916314175799226 1.235090997975072602 -0.25893667416577648144 -4.0278343441612101117 -0.80006233045346675237 0.18171599420578993245;-0.096286440573300879908 0.054899707431717591211 0.034327966302405053811 -0.7426968119626229381 1.4983126830595037138 -2.4951316121089721634 0.88412627759239448277;0.12358516887808865259 0.14371741664494239177 -1.7791481599031924166 0.57821123517196648667 -0.97764800219691005978 -1.4526137481560148501 -1.1700287643791054126;0.2383193497481439771 0.39618057891960589689 1.4571769726130709977 -0.38687747981607195635 -3.4441278717453567282 -0.80593868828120329706 0.20993348820156032541;1.1316799541406774576 -0.47554516430668197779 0.65794842348460869097 0.0083608332051510851624 -2.0299324283632316224 -0.38883448138691489859 0.909662059764155706;0.030202809769062761991 -2.2956000231143400825 1.5021230763582607004 -0.31838261982392507266 19.688838109845967494 -1.5339397232211342548 0.32745983533998057613;-0.075232808437135922919 0.30223187850674837485 0.60035501916717437521 0.28515250954682647144 0.82202468881702051018 1.3789175650555325348 -0.29773872708837473278;-0.071380697396323147808 0.1349089865797377108 1.4004625039783888951 -0.3756430948937064529 -0.95236302895800184487 0.32889000055911066234 0.67683038869050105024;-0.22887550334611328484 -1.02089089468387062 1.7121846944457324025 -0.49307617750636317799 -0.80894446726435353945 -0.23613133273151237779 -0.30462854055814669874;-0.053253027811024609972 0.34469479493623550459 0.17726678110597982041 -0.16812950914454705131 -2.2935705023691141946 1.4425101587148214666 -0.25369688286158659229;0.6197480930201739735 0.71426927763409842065 -1.7992911935092137377 0.59671781335549844982 1.046498369336278822 0.69444317485859186068 0.49543161436845717382;0.10153836781275157874 -0.098791742349187944283 -1.6499725880580633497 0.34785515730009269886 -1.7483915076169433966 -2.0614004428286469839 -0.1340099291580738039;-1.2684299902542774952 0.80586953425228702308 -0.96255059681413168704 0.16071766048909935654 0.98811221980439145618 0.24527390842819796202 -1.00574567072710086;0.10606955482832755577 -0.042606231860054417926 -1.7954865448488812607 0.46018798454139403509 -2.0213126433010222271 -2.3072858637330972975 -0.18582253629686534824;-0.52727023995683786062 -0.48687974423078450581 -0.38367091302453537605 -0.061917067595647697076 0.91698850054338776339 -0.41208987898280713402 0.79578890515575029241;-0.085673550760146141569 -1.9488261202899113123 1.0014060011594372313 -0.27012424871869233911 4.0845678232551652087 1.8504580541679733763 1.1920166646420529144;-0.13220567987391479425 3.1615370012381456277 -1.8501654107947931305 0.19350629556251877639 -3.5358224615803615087 -0.089667716287180579404 -1.7556990561015601848;-0.2897636233447768439 -0.21556785969034633621 -1.562889933892540606 0.58792603873826143612 -0.3960171753791941196 0.5618494433099303631 0.6563239482551859183;-0.24578717915876988065 -0.29589238397553752069 -0.39880273036970587119 0.0382278784862468482 0.68506454514488968055 -1.2186006694143243223 0.34961372131516321726;0.23579296699516461011 0.96566627476206656766 -2.0899213277046246873 4.2662253848303217652 -3.8670329421480813537 -3.7594125052808378129 -0.88750429304730360514;0.44369184598348698767 0.42843717924502988659 0.30848265727020773852 0.06085121390717320583 -0.70716302631471872342 0.7417827107533018216 -0.67340581522298126327;-0.15025446890805810307 0.42676694737509374145 1.8410928943345707953 1.2159994037626824515 0.29408817591460939544 -1.1095621862701094962 2.417497922634991081;0.05459246836461643243 -0.32549871316221151707 -0.31957703495047534714 0.10246328498725337797 1.6575351337611039515 -1.17926486241966888 0.11153137237941969373;0.096143040872837884359 1.9023131951566631948 -1.0128921093710039347 0.21772518654382111425 -4.0346114195668292268 -2.0250294511931397068 -1.3114565358828851327;1.1947327536645833135 -0.52988775106137664395 -3.348785048811416587 1.1880275370938946367 0.41390555443371962463 1.3732705477777273906 1.2335688103704038898;-0.03770890798529820398 -0.70868317138657599408 -1.1437888589637750236 0.10210126395541578581 4.698825327942818042 0.8182923367874139764 -0.18413053641861765186;0.028005575644759410359 0.049416028942150712344 1.2289733569442020666 -0.1137183828806761221 -0.16414054117464871307 0.89022258567995471434 0.76337801968563689936];

% Layer 2
b2 = 0.11005350359405610683;
LW2_1 = [0.19303820129193732802 0.049016949503567892876 -5.6301362066388156435 0.41768463564173746727 -0.2695325650447503163 2.2174712665684599422 1.5798073526168556757 -0.56178481584924944148 1.5724414646818358765 0.14216588540900931825 4.4217652545640993011 1.5819383458931708386 -0.073138296061551630323 -6.3878103983807310584 0.23608902973962336835 -0.6345921081185672552 3.3490096395568369481 -1.1775553111890910696 0.052032509004325835922 5.1917875940551416747 2.6792815174751116736 -0.33659725603154644347 -5.1105670026094438541 -0.48197675647250010078 6.2428880426627131328 -0.64858971670901333084 -4.5894582141546749199 4.1681030689264737532 -1.7474595478761441036 0.069066907486337258959 -1.7840656878272591612 5.2780000583510995327 -0.1149143285320644442 7.5770753207501835291 0.080485311465193831726 -10.747109716670253832 -1.7164222880464832244 0.25500257528973013788 -2.8447607528869740534 2.2047576962077131135];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 0.568038194888224;
y1_step1.xoffset = -0.04979;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
