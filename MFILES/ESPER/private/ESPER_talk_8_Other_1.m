function [Y,Xf,Af] = ESPER_talk_8_Other_1(X,~,~)
%ESPER_TALK_8_OTHER_1 neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 12-Jan-2021 17:03:47.
% 
% [Y] = ESPER_talk_8_Other_1(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 6xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-0.999999984769129;-0.999540494077341;-75.751;0;29.715;-2.05132667284751];
x1_step1.gain = [1.00000001035699;1.00022983623563;0.0140762793578401;0.000302617642608564;0.251952632905014;0.0584431850247228];
x1_step1.ymin = -1;

% Layer 1
b1 = [-8.3768729386792469;22.92635330014711;0.86697983712024307;-1.2910212226010935;-2.3851497286257288;4.2693509310866471;-3.2486615552687668;7.2503052820639775;-3.0305578486451874;-4.3635709478294658;3.44133028616847;-6.6304934858510745;-5.0300325058107438;-5.9519305415699595;7.4093586238153204;-15.66832774913191;1.1254992429970754;-3.5599775625082608;-1.3250881254155535;-12.691979015088499;1.7296253352265376;-0.14750856676734395;-8.9072434101770082;0.98946792053255406;-0.72482006676130495;2.0000364338398851;-14.47848640474219;9.4799777770788065;6.9213444231005816;4.2332466123821604;2.8161881147584538;-0.77844878558502906;4.0370894701576656;-5.3468575206158846;4.5820495803931358;-3.3519404942931161;-7.1124300813923513;3.2640876129766503;-0.42263549434949715;1.3795624985228516];
IW1_1 = [-9.6988632616001471 -0.29019642162073311 -10.941819074360383 -0.53025813280881406 0.99611972943605676 1.200819060603018;-1.3349680080317639 -2.3339585952690158 -3.5818839417323076 -0.084456079258105304 -28.896580415788332 13.751378480225378;-1.2720668798225494 -1.3699010023520535 -0.026575673296323883 0.29016448358919072 0.17611696168105653 0.16301766108385518;-2.998106567252925 -1.9245106353553023 -2.0497597524951057 -2.6562819805994109 -4.0027413209009746 -2.4234614877792984;0.43869776445971653 0.14332210300386264 -4.9260773944522036 0.33012716753926308 -1.2884127919670152 0.67262157342364526;-0.44309500152672704 0.0071550294470530736 2.8049287864197794 0.51048338030922757 -3.8454167208900496 2.3020111149085301;-0.20973188103436208 0.058438603465101865 0.42811209847976317 -0.99601008023882043 0.50271072229845148 -2.3851622962548178;3.0029072088100941 0.0055997957581827408 -2.809257226103425 2.5556376000077758 -13.434666416534949 3.8623258723144094;0.75807069180820341 1.8433487578916146 -0.83652788983701853 -1.7832201061476818 0.01760988819312952 -2.9770862786519885;11.587544259607249 -5.9825406114124702 -2.6829488714825636 -13.564412345723856 -6.5951913780142197 -8.0942937128017824;-2.5285007038640526 1.5000663685376605 3.8167165526950009 2.8021221775731813 -6.9854024561004939 -1.9470764446583568;-3.5873521045435859 0.017141958566020514 -2.1905358294929784 2.9186542447251265 9.7588536722944674 0.28207666783811175;5.0498021166932299 -10.755992799802565 -2.4672457630787066 4.0123330035729845 -6.5417423057330426 -14.022578159586827;6.437594184919381 -4.9722907198523298 -10.814628591613385 -4.7137280311704446 18.002648335898801 -1.1803334473608595;-2.0752346657813625 24.99555407344242 1.927115254151921 1.1012463805460591 -7.0545047582668241 13.485421902704047;-5.4556053271945526 -1.5199462138427513 -25.800815196943823 -27.323558480226172 -28.516805822949955 -8.6803129126604741;-1.2640338261917268 0.1828856894093471 -0.42825248173182495 1.8687203034257871 -0.17523179393898949 1.3016562017918678;-0.8199675996192104 0.054301259880861034 -1.1130063534897012 -6.5349895705738064 -11.895278353798652 -5.4706966915337603;-0.65526388373328515 0.67497885952375747 0.55966101749076058 -1.1326774360679994 1.1941753216822566 -0.87328536506341958;-1.2734901638800871 -0.56088417429298365 -6.5721219361959617 -1.7479945230412881 39.542715593411572 -7.4503562230641611;-6.1756025013735334 -12.75536026723781 -0.59429028807637518 1.7267215444919626 18.516096132773839 7.3474256421330155;-0.10670716759353051 -0.096178995184756796 -0.15514949765873037 1.2357430695549105 1.1305222286399326 -0.065071138795793154;3.1318558480657681 3.2787697162219223 -18.024424904695522 -0.31592394888868558 10.992261800716435 -3.5764890961245395;0.89965408303318217 -1.3964380528763576 -0.58936546258527256 1.5813091666154484 -4.4917417259844665 -0.46242478225632944;-0.42447181034434162 0.21978344330561639 1.4240662411722849 -1.1889463065614307 -2.6982345233081841 -0.024124586307482699;7.3352447964714731 -1.2366961456461629 2.6732367485329189 2.1418715748154544 0.94854024389037772 5.221073044920761;-12.512604611968206 -6.5224785969665087 -4.2513212604304327 -2.7566851591428976 -3.5613159692431209 4.279533500778661;-2.2682541073115821 -1.995463598864432 -2.5817029987095612 1.0966651623368648 -6.7234133745880671 9.7629251038857596;-0.0012443358251978225 0.27600792263108903 0.17762622460554695 -1.9172752172351935 -12.748500110032582 4.1439419562715667;4.0244780009062877 -1.5384135426172287 0.78684918498054701 1.7772900659975239 -5.4520205994922444 8.6356494910443988;0.37856565083568339 -0.46029166086168605 -0.60265830750805049 2.5129996229499394 -1.0552326653153381 0.38387443292352846;2.0344575796960136 0.59115003301850944 -1.7326987004399648 0.0900279561938198 4.6283068218891215 -3.0224899588609877;-0.13514586076422164 0.089373242923655533 0.22832014806489997 -2.0163311958157473 3.5457695343873943 6.9555943849911017;-1.888729692533323 -5.1454728917230321 -3.3729131157382657 1.5897539826635616 7.7849361594383168 -2.0694103740498484;0.048449206816557198 -0.017549662511327412 -0.37981702059183842 0.2527438025082131 -0.23845931300563469 3.6852619059432108;-3.1267661001760421 1.9391245125134804 -1.0008528310752163 -5.0024246755064699 -5.2964559834485767 -1.0932640307186807;0.012212819490794887 0.028291735479286904 0.48796850148073545 -0.31660852137419992 -0.08398251253807712 -6.1689712464962092;0.10002647864019414 -0.016020702202087695 -0.32739862009475901 0.38566682477498476 -0.3792752599568337 2.5294123538678419;-0.11571832566999107 0.24038555222079461 0.59121311191015902 -2.4579636492381294 1.6005173435812141 0.9726647031366713;0.21389695451692306 -2.7909658687960204 -12.349809222074063 -0.76722351642064679 -9.1720560131925239 0.67941987479216814];

% Layer 2
b2 = -3.1383589792050435;
LW2_1 = [-0.024386114566448361 -0.36525416620447454 0.11789492559912684 -0.02783250646670354 0.12814456309684347 0.14951539428525309 -4.4274283156557805 0.02557709534169858 0.055200557638103692 -0.012043168034940118 0.028411828931692494 -0.072852329842368835 0.0069771618428416575 -0.012701993518845277 -0.0087345669518477127 0.002262274091760135 -0.18402361478840232 0.021810968989954421 -0.37087265080925286 -0.025080854645695861 0.0079974974001010609 1.7536915093316803 0.0155233084763242 -0.098909566705951371 -0.23857627672053797 0.025035870745586122 0.025396942668526507 -0.046508622774052953 0.6159891906420899 0.013210278367684057 -0.70853501245886175 -0.067847559592971257 -0.25376861203258799 -0.021613605276844396 27.158472764901386 0.024060232985619146 8.7512420426529438 -19.17637148138143 0.76701599046436564 -0.01995916294523762];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 0.00492610837438424;
y1_step1.xoffset = 2075.6;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
