function [Y,Xf,Af] = ESPER_talk_12_Atl_1(X,~,~)
%ESPER_TALK_12_ATL_1 neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 12-Jan-2021 17:03:49.
% 
% [Y] = ESPER_talk_12_Atl_1(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 6xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-0.999999996490807;-0.999999999390765;-40;0;11.29;-0.12];
x1_step1.gain = [1.0000000017546;1.00031699124092;0.0153846153846154;0.000310077519379845;0.0705602618858232;0.0145655815308426];
x1_step1.ymin = -1;

% Layer 1
b1 = [-3.2548870268621002;5.0515309663459034;-3.127067324932292;-3.4378533784898573;-7.5770222354903742;8.1653244886685723;-14.007508577574276;-4.1549920512857641;0.10366968851855264;3.8310188272694581;4.6901461513846314;2.4891432363572741;-1.5213137409104751;1.3991592146354661;-0.26448374237998878;0.39454327506200382;3.7326440636548632;1.2268751772415842;2.0241861072559661;-0.2224692282765246;0.82492375662655293;-0.079199735877864427;-1.6140342115982558;0.4103096056283429;0.10391570172129952;12.156048179957315;-0.56694703510231337;-3.1458868854282991;-3.6449820188122568;-2.1862620848353886;5.0355715915020394;-0.62316556706873794;-3.9770208606357667;0.59625696241945791;-9.2890602124120321;-4.2968761824617339;0.24795206203111084;-0.96101536938388321;4.5174527890924798;-5.7078298237254392];
IW1_1 = [1.9380852046489323 -3.08047954953597 3.4327991990763058 -0.011596433342794621 -1.9743720652427235 -1.3954934301458699;-1.4690703503879268 1.8404175246220023 -5.7898208331115892 0.19410742501449066 -0.47119254908912506 -1.3314613415088905;0.035625026988537964 0.016697977051880902 2.6301780500642704 0.90843853875529157 -2.6028175380255618 -2.4586323885633337;1.9236753276426939 0.30397402119445277 -0.018674833298935996 2.5659976063025822 -1.2981019777690614 -0.30317830085380115;1.9948723344097139 0.14682510429575585 1.3431439179553404 0.95357866046062145 12.57333716254948 1.7183793731324106;-0.78113840586703809 0.012358003429415646 0.36127570478149129 0.42239938781152031 -8.5328527112758614 2.7273797426340591;-8.1444174259506887 5.5751334338742415 -0.021642588011589459 2.6915163257193351 25.147821981607368 -3.8277080706847495;-0.31008985234549769 -3.5148986530515627 1.9357301292882312 0.0052842003642987754 0.94372229607878566 0.70914969703703823;0.11966032301323271 -1.0155706452563962 3.856835299431661 -0.25171040744865519 -3.8159131973502798 -1.3760149888347009;-1.7224799213088922 1.5611674831641515 0.1370008734664738 0.9015345847761671 -1.5297022697941598 0.58447800002213324;-0.53016870329510635 0.052200314021409511 2.2732764045017104 -0.82472711941679411 -6.7478942569690021 2.118915650539658;-0.059252837589255272 2.9822679040399609 0.22492568425049966 -0.0019519039350349545 -3.2220214348169276 0.04158138784788399;1.9437879958547646 -1.6741824712661304 0.34973903191725358 0.37105088834835953 1.316052975443772 -0.32769911574639338;0.039857966966920261 1.2947196970421555 1.0384865309162608 -0.10087843872590152 -2.1999002740770872 -0.02489100070948028;0.6476366686034053 -1.1724857090547482 -0.32857156775576535 0.036270851852546394 -0.089846143191719727 -0.59074686198993898;-0.2533878162817858 -0.040562601156156473 -3.8083893434957625 0.19004378585918333 1.5330757731709923 1.0543679159380988;-3.1191685307179244 2.3397126544856941 -1.3218370884007036 0.041259859957097599 0.063555136808323587 -0.12279173702975872;0.058807227332733136 0.8850615789623355 0.93615900284548015 -0.11179002783396685 -1.8764481246818248 -0.02874301150168335;-0.075303107751274079 1.905062995434162 2.1742830074521629 -0.091110205200687883 -3.4601346419533163 0.15884646638840055;-0.030722172063165864 0.16046697479441072 -0.76446126773284884 0.27482348519349675 1.9264015459337913 -0.63587583527245095;-0.79770410967511429 -5.3727935446497037 -3.6755262294001327 1.2435541237861727 -0.7358378639930041 -2.3740907758527516;0.0044420106603740009 0.035856762385549572 -1.1531536042690798 0.37778113989614154 1.1422350541293362 -1.4226357898802049;-0.1113679761373899 2.1241878050071579 -2.8237255781493702 1.0080949739527458 -4.881068701087818 -0.6314851549573991;-0.44941215334751944 -2.5876861440858523 0.072089578355966341 0.044770300925113068 1.2558947760256944 4.1597117448177441;1.6561962529913024 1.4038209566077737 -1.9154215842173297 -1.158958042778675 2.1196182499808778 -1.2022021491963635;5.1294769119218264 2.4765954617561445 13.591013033564145 -11.647960455406462 -14.224187430332901 4.6031210935689479;-0.26692004616332254 -2.0172149137064768 -4.0282422268255784 0.12093722748730021 2.5101903252112976 -0.50209074420731936;0.030901432733328425 -0.028191892370397494 2.9301173378152523 0.86178377120782235 -3.0419573797237631 -2.4708326643439968;0.10284350666589205 -1.2787767438565525 -0.79685506505706416 0.32913456493465332 4.6368914886976151 0.46400087996287548;-2.8425083081789193 -0.37526806493005654 -3.0556326097540047 -1.028312819637611 4.0912264385478831 -3.0850783931473549;-2.0960141115756175 -2.9106743471196204 -8.9573489350554869 0.61468360236536412 -2.6731025314651364 -6.1243836650929016;-0.49400671104957539 -2.4263697385003447 -4.2429904997081183 0.14503977701298515 2.650383483320617 -0.49816377090774572;-0.085704636087564262 0.29586834768435039 0.011143269099226718 0.37646611726554879 5.4184135537690459 0.32535813435958094;-0.22050758710372736 -1.1939468606884756 4.0875690716476667 -0.31458327016229387 -4.9535472681416 -1.6227544064550357;4.4595702861255848 -4.3939766200356871 5.5434819530909634 0.36206258072738201 3.8657966719416099 -1.5737062457856508;-3.4345216896468704 -1.3711092177271254 0.14124528771618527 -0.052474273390666071 3.0329742310596264 0.98598539908890626;0.032278724458786746 -0.082161591184893579 -1.3784529918862753 0.39662373382792693 0.38195781452913569 -1.7882940092672746;-1.8142251536653746 -0.29655000701747863 -2.3149125702091844 1.8992185602242111 -0.18966215587526339 2.9145024031132514;0.016444203706392262 0.13627325796818437 -3.5673883796771699 -3.326693343222614 -1.4133016221011117 5.7559663151610874;-3.2694372176612223 3.1972408941453785 -0.74241364967614065 2.3593106286024148 21.51759424824742 2.2950933990577691];

% Layer 2
b2 = -1.4867478078143133;
LW2_1 = [-0.15798104606668756 -0.14852989039891884 -1.2495730149057753 -0.075216958932625713 -0.021103246770798022 0.052075608355266013 -0.0067926161907640933 -0.082616414478404662 0.61271668647984312 -0.079419446096619287 -0.10189920469693756 0.20666782809699161 -0.20790236719746735 -3.2030071132446252 0.52686811216357643 0.17891981869955154 0.14864579345383105 3.0882493800476309 1.2985889848737155 2.3810819360164883 -0.026201502106776998 -3.1809088912328773 -1.0666077318876437 -0.02019124318285891 0.0052880199423354845 0.0018183039248550793 1.5756354219259909 1.1693808604982103 0.2986746275998105 0.015732200730425475 0.026937861909440499 -0.97528496549183652 0.27319770837416341 -0.34639312993821753 0.034602053206845743 -0.051391681677990145 1.5984326928718804 0.011671038425016114 0.010117107166160952 -0.0083590860278094162];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 0.00111018595614765;
y1_step1.xoffset = 1025.5;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
