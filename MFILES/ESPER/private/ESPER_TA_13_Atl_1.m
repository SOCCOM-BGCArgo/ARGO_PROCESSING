function [Y,Xf,Af] = ESPER_TA_13_Atl_1(X,~,~)
%ESPER_TA_13_ATL_1 neural network simulation function.
%
% Auto-generated by MATLAB, 15-Feb-2021 18:30:04.
% 
% [Y] = ESPER_TA_13_Atl_1(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 7xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-0.999999996490807;-0.999999999390765;-40;0;11.29;-0.2178;-143.241523403244];
x1_step1.gain = [1.0000000017546;1.00031699124092;0.0153846153846154;0.000310077519379845;0.0705602618858232;0.0479365703301392;0.00458552991639557];
x1_step1.ymin = -1;

% Layer 1
b1 = [-1.2355347880227944835;4.7852300135951715276;-10.473454375029499275;-1.866072394875848417;-11.127104308765384033;-2.4694279358042998673;2.5384888327674053343;1.1308135791526969793;-0.2747254323765468409;7.5744829312229953189;0.21340380533524572204;2.8809561984577585214;1.9634246838679112468;-5.771034902824396795;-5.4811338318009816817;6.6772050669724505312;0.53594665601262425625;7.3490283381950778363;3.9500879841860827568;-1.2503448589772538924;2.7907592055264647257;2.7683676041783016331;4.1802370731508293744;0.33412353446630749243;0.72223016469714396148;2.3583517341988589067;-4.7076541541382797007;3.7051043519422099948;6.8448933112993568528;-12.537544057324648605;-5.6582996460762586821;-0.37942295755781163535;4.1337954901744149439;-5.3909800781148407012;-1.8453612201476849997;1.0707844966406905307;30.616480336290823772;4.3846647757770371712;0.89140105491983168129;2.826718617574327741];
IW1_1 = [-6.8466781174625781503 4.2448460331567430259 3.8068558481398730997 4.6379528657801243341 12.180205223512830415 1.0540429653611140814 -1.8541027832751388882;0.89423382811727936126 1.9135659357405352399 0.052243966160406746235 -0.023904428359366285128 -8.2843803209568509516 -0.26686951459567076483 -0.073129645403045576146;-11.207873634417357067 2.1631187568676573107 6.4830966377065042394 2.0678097373590578201 -0.61500093062795579968 -7.5983075859748616665 6.4876260098284213029;-1.5264633137827152698 -10.367428658402932484 -3.4228143565738986531 0.86201328074599659068 -1.1769852343691700192 0.72629326340011068908 -5.6177312823013423326;7.3559747546384333106 -4.7517085165203960528 -0.10894902716154325484 -3.542732903674937095 8.8953266099257231048 -9.4800007119007663192 -3.4183537731503950141;-0.46312076452060074727 2.4837928697701525671 5.5066088971293689625 1.830823381796285787 10.870499905616219039 1.973250462669157379 -3.8715882294572878664;-0.017847026343312498431 7.1403860812194919205 0.72435521547465253622 -1.475950059827159988 12.802422429722977171 7.4370692855714990444 -11.569905628470966263;0.57617516100660670642 -0.1671884715487367834 -0.077860065899978223025 0.44121235337173619895 -4.1745483276511130555 -0.28477516888592419031 -0.61518115656889116316;-10.979954950857484519 2.5777606709501563742 -9.8553339825784167516 14.41570400710284261 7.9589321936679011671 -2.2515967650277985967 6.8723076611871869446;0.76270890796714663207 -1.1200207637541779171 -0.24656701528787239308 -1.7631982702088149217 -13.212721857051135999 -2.6410541881980091894 -1.494118558219720283;1.5602004451814199815 4.8145840346442954072 -3.5719696689644200305 4.2081820104386578052 0.3040507338526778347 -1.3165985221154083984 3.118496887494902392;2.7490437150509103859 -4.471716419461904124 1.9077418818058271555 -0.15504885291584613594 -6.5335391252919121641 -2.3069087066250468787 0.75709504207279376686;-4.0483971477985036813 1.4375997026332525408 0.65277326484802922213 1.9940889801247079216 7.6474263152449326597 9.3137912845505415049 -7.9734942824162757802;3.5310829051191681138 -5.1074379849279223365 0.051064945805691569491 0.26140997783299890767 -0.84844460410634425784 -2.7646091259295086928 14.621668985517338513;-0.41776382778629878034 0.021087581653832634943 5.6703097658726671071 0.09136398343927466803 5.4153636252151047259 -1.1664053250930421779 3.208890145086637613;-1.1048889917066830879 1.5209412124447412307 -1.5239825285375099284 -0.22874569174241196623 -6.2421785173911219502 -0.34188876189646560944 -0.38658137527576252879;4.8795131507998501519 1.6555506028551931763 0.8381502950433863397 -0.15100967321153782597 -6.1995384116328793311 0.048533832093585728418 -0.60226534256712327409;-0.73960358081953814224 0.018894711589428250798 -2.0745041287622747461 -2.5135802255239152458 -15.288510306853673626 -0.8322379528471741672 2.3671158570896806417;0.079748429272915324906 1.0065184185764868285 -1.0217629211899854624 0.58153867533753333952 -1.7717597246497818197 -3.3995213934363275321 0.37873243644989112999;7.1161356058715856676 7.602691935405184509 -8.8611267362787629054 -2.9584835965101974331 10.68643653449338693 -5.1438329479444879766 -9.7184516265652689526;-0.29841468133274529073 0.64949102539741665474 -3.0201794538137698432 0.082483192179273384648 -0.77458370767715012395 -0.25504276273150189303 -0.37434346131318690931;2.8388526996983625139 -4.5971543936028851363 1.9677112384436021841 -0.14497840893681271379 -6.4243097825471568996 -2.4241022579725393093 0.80034061747894991168;2.1630679512936867859 0.13319738165654446127 -3.7111278025188325635 0.41240083269922217513 -2.5191100532827106484 -1.0439081603277808874 0.74972114964807246018;4.5297087142262766335 3.3476461700488702178 -1.7019233736520464895 -3.8621682519461724148 -1.173601308800475751 -1.0471696428944343715 -0.91292248160736322316;-0.25095648919945517941 0.40433276558422925895 0.5737618656862499833 0.18637855081989518347 -1.9920429362348042179 0.79165273533278202045 -0.3461066497437123024;0.81496909140218398715 0.43328418480094954557 2.2906461832412041701 -0.032229625358147794001 -5.6380939874479851781 0.80283032943727217212 -1.204324648629909289;-1.2487590344092831529 -0.59983345364064277749 -0.41794275682177417508 -3.6219507624061217932 2.2284482431866541319 1.6392045888902326833 -4.4139971150976302638;4.9949154255152690141 5.0289790403094283278 -0.7934135534310100546 3.1477124524528128369 -5.1595991912348724284 6.9428769909598555543 -2.3529638741420102477;-2.6589676448853176716 -11.420983853811826236 -15.407702878499138777 1.1043921512857388656 -8.7356578198262688773 1.5665988034511135751 12.674577355065597573;2.0901006180930661316 -0.86534079135064123633 3.0489881374358001054 -0.32899563090287636813 13.266527333791490406 0.014324219944057296761 0.91308948033137482536;-0.1927006307795240958 1.8821063426341815283 -0.69669935141293004577 0.038122705400578181523 8.8114620428999543833 -0.06462903198224677348 -0.11736662961287748497;-0.1625409616730891238 0.71305201488409797328 3.0074099377863849902 -0.023874671851792421406 -0.63302017780323815987 -0.057331773904421047539 0.5873153566209069476;10.939736403689565236 -6.0400344383559927408 -1.2440562762588218693 -3.4664335216011634699 -7.4221077245927684629 -5.1276900826780167364 -2.1576449404190993775;-2.5557933094840485921 4.877510032608776136 0.56072084212824702121 -0.024532044198237599325 7.9672470758511746425 3.5884827672383519115 -0.4389469399677350947;0.84561987151165740606 -6.1234912551604834263 5.8285078608072566908 0.37983942963172312446 -6.0578437766041099977 -3.1244645067125556004 16.999407128441308856;0.040170109273425624874 -0.04995660574100496687 -0.58982397902037964066 -0.061674289511666958996 0.52571244878846856707 -0.32820280505162952034 -0.021196773094513902264;10.218271594981761297 7.5570724618438500642 -5.9039187018888181768 -13.700205519823720479 -19.049488623818501054 14.142920957538912319 16.436474579696778164;-9.4486002198045397904 -1.4671081862547126207 -9.9837858266085142134 5.8283213346427986679 -1.0364028360265138407 -1.1432765950141849931 3.7319936102790922661;-0.29405388153789918659 1.2998647206760576278 2.643076516622958394 -0.034199865570305451601 -1.5939766792273017959 0.045184425184204971004 0.28147647843098244635;-0.057417461134854200222 0.086787524397118745445 -1.473484684022660085 -1.4744354109376804907 -7.4587736891513891635 -0.12935446891609539422 0.30047360441552811716];

% Layer 2
b2 = -2.1472119697573543995;
LW2_1 = [-0.0030920947412259309865 0.073390744075833208582 -0.015678961469373944165 0.006415090732785325503 -0.0018905475770623874753 0.010054515641863780856 0.016590974077419221727 -0.22503028846330791479 -0.0017663323220878154179 -0.01188990533923167843 -0.0042819937313190586936 0.7350684682588242147 0.001287775387941875356 0.0054106048409808728955 0.051593484301864271646 -0.17002005659633720458 -0.046291042092272659259 0.030096811284181672341 0.013088233815889228906 -0.00181713463452473677 -0.30918240439305466616 -0.69061462329231793067 0.08329622119612943576 -0.0062028359631470224994 0.58354481749056297257 -0.14639518641005461186 0.010003594800181720564 0.0027249035682084528191 -0.0021659891690985629518 -0.05142606279047919754 0.05678273070800780864 -1.2309792052953794084 0.011275774832099313624 0.036390471468670700095 0.0021772389059160845125 3.2709816743778850068 -0.0034074192775973735463 0.0041031041804423795671 1.2068649861718681038 -0.092129377522485692009];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 0.00111018595614765;
y1_step1.xoffset = 1025.5;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
