function [Y,Xf,Af] = ESPER_oxygen_4_Other_1(X,~,~)
%ESPER_OXYGEN_4_OTHER_1 neural network simulation function.
%
% Auto-generated by MATLAB, 15-Feb-2021 18:30:45.
% 
% [Y] = ESPER_oxygen_4_Other_1(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 7xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-0.999999984769129;-0.999998793562952;-77.961;0;29.715;-2.18999082656054;-2.02];
x1_step1.gain = [1.00003298043486;1.00000060321889;0.0138606862425759;0.000266418009857466;0.193068829037552;0.0582073296585987;0.00819772922900357];
x1_step1.ymin = -1;

% Layer 1
b1 = [-1.3878069089843487749;8.2363212023045306864;-1.1527563885604237282;2.1998162525080844354;7.6814345117095692572;4.9440535355801413786;0.28381221181350058114;-1.8482231677233460498;2.407424674922273411;-1.1237284008178822781;1.3295268543482772206;0.12655789750196200227;-0.95043390466929533744;-0.41684107934201519718;0.74245664187533200185;-6.8957023166344129095;-1.7988938692385569862;-1.3659055629209100324;0.98922752102527811147;-0.22510260733779574593;-0.44032809000807954236;-2.4332020681475539092;0.93750508633067730635;-5.2612903289839811904;2.6344341053852420309;-0.26354673643673731664;0.064821883832160337446;5.919476781250443409;-6.7970804938670790207;4.4934032487819095536;1.3722040450820922608;1.8450049637467318409;5.5055692963335385315;6.5073178668943212344;5.8987564281589435211;0.36219128737247213712;-3.8226240334955532418;-22.927167365250820552;0.55955966072634499842;-0.59433252828086335917];
IW1_1 = [-0.76749123598411850278 0.26952123057636706571 -0.84874479905298816362 0.35188846518678007502 -9.0537344811332136629 -1.8246270829854478457 -0.42134724341957907612;0.0070044211667555939665 0.13926146571727093804 0.51390923154259993133 6.146903156086798603 2.1424412628560225436 -1.1522593265647871341 2.0843555170588676795;0.89425672072608397567 -1.5115056861174778202 -0.51694656201675714957 -0.084041308593763131007 2.022008127586464088 -0.55998374403672457333 -0.47511264850876117061;-1.7762688178220193969 0.12796968776955994218 0.23191190225571528538 3.3155709527220982302 2.6710408014128121934 3.3755584969179843746 4.8249776574815479435;-0.037294493554611854447 0.57588614236913060473 1.3450246202941595897 5.8793387481639403092 0.54985350931355647663 -3.0225651114399059161 2.5096735807091743453;-0.28216109323165772249 -0.1470255772488315571 -4.6439489928468953295 0.82459215676806996154 7.7863559472247567683 0.96992250062263307697 2.0811403332564850643;-0.25835445012404967269 -0.11294018663688815129 -0.77292206663845097747 1.7471330844707424479 2.1002871690099631508 0.92633195683846258905 -0.98871615440419924337;-0.17746154564162033851 -0.81755261295900261143 -1.2060382811723278085 0.41413924036975374721 7.2127110136203951285 -0.88958879017213798868 -2.3179530504935135227;-0.27647017804139639718 -1.7264593663726290895 -4.1261912901964805656 2.5919844148424937558 -8.4159230523785755196 4.5975549537072391004 -2.8404347219582706252;-0.11300577606135013553 0.027815273592059965024 0.85369678175271301868 -0.24760936020094778676 -5.0655916258655020457 -0.46921490147637040513 -0.86330702185517194103;2.6643848637692761905 0.46948676388998594744 6.170146044268115304 -3.1435714865935642237 1.2148863505805016505 -2.8138369244551046933 3.0546496733715482463;0.092627989779443323237 0.022978916553274122969 0.26581651917051418721 -0.56735160801988893109 -4.2684518406666311918 0.45335924595966053952 0.63755714223819826003;0.67193561434687854028 0.6897429529624383715 -3.1619140282692388411 -1.5951648438428305266 -6.8459969553499577799 1.6923561517913072727 4.6501630540829443916;-0.026660644653833408257 0.028090084162560084724 0.26425415669070578817 0.070859173688339938124 -0.23168383192288966033 0.14236161679353787068 -0.36392952605129758048;5.4839532705932496626 -5.7106201237645910496 10.048668053649272736 -2.5203783649786575261 6.8785953194096300933 0.2260551876869252852 6.3272781308906766995;1.563875581284461358 0.0080639261417056688069 3.0997829496166393604 -1.4935134081184255894 8.5147479327613719846 -5.497444976595836863 0.44429621042596173508;2.7869031453278667598 1.5231775380614187565 -0.32390380041133198796 -1.8687513778973112721 -1.3955022135759098667 -1.3215439075608967912 -0.34453815294134193525;0.31351358334291767882 -0.28002383427498300783 0.39948428471747043922 -0.26489111181754898539 2.7692322213805660169 -2.2366340021419000017 -0.90248768406947466048;-0.12723427990650779118 0.11580264797848639768 -0.77524195220057812161 0.74095073449997073123 4.2578666596134997491 0.97380062208811046798 -0.62811159470581656716;0.28536875923811594324 0.082733563423746908638 0.81001934578433754108 -1.7453175317661799859 -2.7836903282814695615 -0.82028550416346501795 0.9134459762159019558;-0.21670922886378635175 0.65047103086352175971 -2.3836552261590608914 0.76174558593138386176 -1.3521728664665830788 0.029230876763812554259 -0.8772493111635223384;0.15583176772862847304 -0.44917606869885479126 2.0272108676416875639 1.3494402431537615428 -0.60408266628313034285 -0.02126472122558634853 -3.2870628593337212209;0.14439704120198929016 -0.016028637982397724027 -0.66524280226037468822 0.13010581930996056865 4.3677405637652126913 0.29550760278574261797 0.68607823299770187564;-3.2163102513000025873 2.7856145744143043785 3.3605340252116451261 -0.27926322467993197618 5.5241118581521275743 -3.2710691804812572769 -8.6671631137832232383;-0.21891926392475036245 0.5945667347507298528 -2.4854091855367936859 -1.5497826408503689866 0.760478517815976085 -0.024293457549651082533 3.53312722188832673;-0.67305559088425992442 0.079622456587417220208 -0.66215304520229956164 1.2710906562922850149 -5.4261370748454416102 0.76996948318740887629 -0.76728145445985307393;-0.12798166631360835543 -0.18775636291200076267 -0.4030301676774150077 1.4050034227430101552 -3.0590281390230416037 0.81471285170685370236 -1.2580226273967078932;0.16026675880827620513 1.2446303750187226456 -5.8338682604153859756 -4.5861449490168224585 0.3694102500130694855 -5.2122888703736300897 7.1146004441189782952;-4.3659321866480151897 -15.515347790405737527 9.2146692350518843995 -3.1999334340197083115 -4.9617146864153136576 7.6737373710502998492 -12.531807775202196353;-0.42110493265175907851 -0.35423957098125402609 1.9969650078296257156 1.605469883776343254 26.563553814144444942 2.2191783716111035396 -3.5946545692393492288;0.78142082625776176918 -0.32947677826320931338 0.82922342406250126867 -0.40119000190790060634 9.118959699781894912 1.7694210825132634657 0.43022243617875338684;-0.1827468332657915806 -0.55451763336088399914 1.2969373399242649647 0.40493937574024296833 -1.5128935866913777453 1.5893941670359073015 -1.1996082995258594561;0.48250512837308601188 -0.72284307588265883648 -2.1437514225650833311 1.6330178764420228976 -0.61030201370623471391 5.4057799404529092158 3.4350976420681447188;-1.4246084838062349487 0.18325100375754363458 -2.2856037784340537122 1.5423450266350262616 -4.3814378425804871853 8.21225267479738541 -0.13312913303339965476;-1.2647094257886959401 -1.2407650330339385913 -3.0154474818489633847 -3.2363483328622462132 1.6116267597829048164 2.4426828994592173494 6.508352925287294255;-0.36039680718201000387 0.38234196269567760629 -0.48664374891456724237 0.042462630268334800032 -3.2122625273569505033 2.5450954592618195704 0.10272372134593492354;-2.7460607357244981586 -0.87819807520364023823 1.0046521856868806388 2.1501390815276892887 11.377007003988884648 -6.7911907753215157157 -2.3383788237937817023;0.28986544967644506388 -0.047037375702444789161 -6.5534402113119156752 -12.546956934715066012 0.71014723956246039727 2.1477250045132549872 -7.6806796084725634799;0.055691581047898182366 0.066225275741817996034 -0.23944747508958186266 -0.17926273244780979721 3.6124021084152611039 -0.44383594162232209435 0.80160808632406177487;-0.22024982282157418156 0.30390517041078546345 0.38343553826756704428 0.056533516777023562483 -0.78016280212983968312 -0.076834645236756468623 0.33200045393417237927];

% Layer 2
b2 = 0.193747565212515932;
LW2_1 = [-2.8925130332940893751 -0.75851094411448327648 -0.15130892592245506756 -0.034446104709293046131 0.16618647808985206882 -0.28700735059384019365 5.3469772193739206756 -0.21883678128093905779 0.042129963120855346004 5.407004713296827525 0.056552548301635752193 -2.1959551819269140793 0.10839602885211307992 -6.9525487995507333494 -0.01657771529307524444 -0.47736254418556578472 0.071862686477069309676 1.6737815834299107909 -1.3536946824786413313 4.6814329367531017922 0.25688523042762212434 4.2775441025624765246 7.7486209733991522342 0.025966692793623874502 2.9961213039163494543 0.51751755988176151302 -1.4371090230098426677 -0.07810754180053282314 0.0061576050477175556241 0.050858080391903461026 -2.82043051301648795 0.49733415719893098172 0.10127983080717554987 0.11881724498623714992 0.26475983626106441848 1.4019286166426061513 0.063388947427639785737 -0.16971895526380426089 -3.4260929876317676168 2.1389295481882375505];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 0.00454442172233583;
y1_step1.xoffset = 0.3;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
