function [Y,Xf,Af] = ESPER_TA_4_Atl_1(X,~,~)
%ESPER_TA_4_ATL_1 neural network simulation function.
%
% Auto-generated by MATLAB, 15-Feb-2021 18:30:01.
% 
% [Y] = ESPER_TA_4_Atl_1(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 7xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-0.999999996490807;-0.999999999390765;-40;0;11.29;-1.99149636107278;-0.12];
x1_step1.gain = [1.0000000017546;1.00031699124092;0.0153846153846154;0.000310077519379845;0.0705602618858232;0.0604107502911417;0.0145655815308426];
x1_step1.ymin = -1;

% Layer 1
b1 = [5.354574288924503378;4.427690617072364887;14.46656122005487255;-1.466457346900406522;3.8379123344533563333;-7.3673386400151361642;4.9103487211552288016;-3.1754732001266754438;-2.7550666022022132218;-3.5023388231509517965;-21.445708003589565749;-4.9198012217074360564;-8.5960042055511429737;3.4167585840802146002;4.3897818556177945482;-9.3396297829702454862;-0.37009412976040673149;-0.75488428818081654281;26.133185298805297947;-12.017134295774233976;28.866102518871429083;-0.1910635476810090827;-13.44698454372954366;-13.231770574555316244;0.84767902754199253579;0.29936231420595171837;7.17588349667445069;-2.9448000434181698104;-12.932317706232788979;-17.201617476833586551;-8.7411578952261344;-19.7222344942359058;-1.911340665740764333;-7.2852656989667448073;-8.1822006511456972788;-7.6041789392304917072;-1.1562561499082832928;0.47710909816019553276;-3.5912807159581321415;-2.6174359529807076363];
IW1_1 = [-1.2398595311898228388 2.1105391117306013804 -4.0109966528328264701 -0.032594355440443124883 -3.1051619510860057893 -0.72875657155419526489 1.824238308534465336;-5.4354805637992642531 -4.8720102452614488797 -0.47543487809862383653 0.035340235546104131759 4.0034465586203751286 -0.53797710741744031449 2.15931462363250537;-10.018418592925533162 1.1301882340678142125 1.22901263100487812 -1.4824473738646009036 -5.5712797767074802024 -1.1619539547691779546 0.28083005330720234305;3.8469189239011050141 3.6423610109886754849 -4.0866029878348379967 -0.029510297654637203391 -0.025497823649302905902 -0.25102239676383919509 -1.1379957285386996801;-3.0290845486022321964 -0.20705298534467767024 -9.9882262147625269222 -0.99310156631959978224 -7.4462373268084647293 -1.0331172506829224833 -5.5389763433751202371;5.5082360446009914767 -0.082751906271177053109 -4.4162824838324352683 0.18635412543230620019 3.4831172787109245803 -0.30211403633592498474 -1.0551854616215337046;12.480835598492138416 -0.49750114978193016313 2.2069024459007136052 0.42750799881503087629 6.5230022759180146252 -6.4799416416904840332 -3.6747336735926738882;9.8825596123724039899 6.6075174996093073432 -0.65717076006730101856 8.6537195131839474982 0.93119541417452145193 -3.3208629891150835967 -0.59327140659687993551;-0.32604223509019802929 1.1218360344404492146 -0.78553303820627018439 -0.36591215456825199048 3.8624748101639645448 0.98294993208639325211 -0.38875450496072772033;0.38846680110244202755 -4.4957431080827499059 -1.839377455217942714 0.35430948542388152056 8.6195573813538590713 -0.041143150171888520639 3.0038545037645620894;9.8506961862430415522 -18.924621394724002954 -0.85168600967453023109 8.9026589464621128656 7.3735887383588609723 1.4284676268970779578 -6.0518011024071185489;-1.9023405470225884795 0.061033785016761862852 1.9438446335363097628 -0.40165315920925426241 6.3561554752240656541 -1.5816489880374873245 0.26788279439248069425;1.9827595772098922655 -3.6590153703919625627 4.4595589244342273005 -0.036164284466196856827 -6.2469151119088648372 -5.7214381346777960502 -1.515325544377505107;-1.0248702085784218152 3.9200231807582452959 -4.6547805169682572313 -0.6351607648757831015 -0.60963529782099912246 -1.3548113318581749276 0.88492748533701093283;-13.52048678822078287 1.6387116264916563591 -0.62317645412456434961 -5.8809856203999144597 2.6811766588801932976 -8.1326849613506748682 -1.7311038788936892185;-0.17277087080809486186 -0.084712943653406133637 0.51010168219775897658 -1.1854814211441409011 13.355431605593306443 1.1356318943144110278 -1.2693540814934292094;0.26285388960708899742 1.0805915936298597924 -2.5673786416366413121 -0.64693907053874277757 4.6763937476458101727 1.0166981680733937488 1.4267180509763330853;0.45391698827281290463 -0.36223340046344637555 0.47694134050109771028 -0.10463089933023231315 1.8468727776730051726 -0.48405048900280989166 -0.050719292988303708858;-9.3112274635667944267 17.806886064823974181 -13.321994171626354131 1.6916627489461555367 -17.308306570946800917 2.058983562817499724 -3.8663639628285566552;2.0322005604707946702 -4.4874764253891719079 -3.797494738412960924 -0.93678224387105846205 11.618654723008406293 -0.88697355381153675236 1.4191859525615837523;-6.1168421026967250143 6.226740919475303393 -0.83412671636907964601 0.33710973974459529368 -26.90840976582298083 3.3029912276476727229 -1.433585271106990966;2.3392466375277072288 -2.9185347423278580337 2.46758340991100944 0.32724565362926394396 -1.5997136466871322291 2.4294817886872337453 -0.79163474603964112397;11.498548540555148634 1.4413811313674400605 7.2165895379145004185 -0.98886354675313548057 1.3078826870458668541 10.376411402642119697 4.1049001670448834744;1.3389817190475523656 2.2907527832852383476 -3.9208059291421837322 -0.74414885786059026263 10.926997546763205449 -5.9639431755602281271 -1.3448902670962898931;8.0416263034373542951 1.4181755535060367457 4.7528484607396785933 -4.2853441005343491099 -3.9782388102194192747 -1.2681781023157330246 -5.5849622218899339643;-2.6651673331179490667 -7.3389121812810431678 8.0347399862848583041 -1.8770126913086999654 8.6168388106866853349 8.1266150097709566325 2.7703028577543129529;-0.96131644694795970185 1.5156192776347618967 0.84395326882353471909 -0.79468763624647087429 -6.4497344051630820516 -0.68868137591800193675 0.10959204164311033003;1.8335607117395080756 -0.47882623734875606747 1.7424914545553908951 -1.0364530854360671785 0.66109977273597220204 -0.78554059300469447624 -1.3863583273543162999;1.0144623641783983015 -3.7080969011114022216 6.8376049807394396751 0.61011329324638507998 1.0609456869493507636 -7.6034630625271928395 -1.5147985871416747017;1.1390670542199869963 -6.8041584060342978901 5.498780694099941968 -0.45792281220598479718 16.263626761224912798 -0.90631692659141205315 0.42638971307979944836;0.74735973785214215859 -1.9463943165621284681 0.22588108916631802203 -0.42401907080072614997 8.1710566790366208068 -3.860379502075660163 1.0031747160984074707;-1.8616264205307821999 -0.49698206627423896498 0.33753550672645532549 -1.4293924062418108534 23.431990046190783517 -6.0690288618824865807 -1.0896476503750867071;-3.7725909759065876514 -2.4399466501497242277 -1.1391724924777446581 0.6624967273901541942 -3.2455095568903140624 1.2169178263816238239 1.1097956689731802715;2.2162395776885603915 -0.056691856276087831956 1.9132362821007875553 -0.38643473455526572424 10.357365317007747763 -0.83439311112228498057 -0.4723039728867798881;-1.0916621864959652477 -0.40649325712870315597 -7.0023356021499907342 0.128192854316795668 13.068991755929552312 -4.0890861586709128517 -3.620777248748791699;5.601932891650795554 -0.22336317839279576369 -4.4273558783798927507 0.18780112406100760158 3.5888467846782958759 -0.3062291318559314246 -1.052695598757037887;0.41538909339210339233 -0.76332303527988387692 -0.27702602272900933578 0.2478348275191796235 -2.9138734565203852078 -0.44883043758716933969 0.00090405926636155610129;0.84076949425415448136 -2.4088094476589700932 0.62482116382021968271 -0.10839310058309561957 -7.4625251623759636388 -3.9054894125415837713 -0.24038302520706705812;0.42161848719695282917 0.94936703781153675141 -2.6305808219628201705 -1.3397640700033031091 8.2513567641769931527 -0.46564064304775826253 2.0968271959599791288;6.023030262241247712 -13.167404310661472877 1.9220772846627240948 4.6932702419040213115 4.8303922109703654186 1.1206907257338432071 12.050419500497083547];

% Layer 2
b2 = 0.045408194528505009535;
LW2_1 = [-0.030970415169349025525 -0.05533714929101640756 -0.036073552880261927633 -0.082354498162825834351 -0.0059519839685930565551 4.8923925534379399949 0.25429008042246875609 -0.0022647244294528206046 0.056359333441639493378 -0.02797009080135753889 0.0021983317880509339534 0.036990507158729743487 -0.036519425641457207987 0.037455662984130860815 -0.0042351759944785107026 -0.02317362699105384935 0.067918095660408850378 0.40174548074067423231 0.006715452238651217938 0.031533961304232666079 -0.034338293281278658986 0.029104182405903906983 0.011012235872063326492 0.020267208782923699928 -0.002844238816222628783 0.0065244927594293022216 -0.073374400418113314148 -0.022109540288556522869 -0.010664887876717790011 0.021263220422079964073 0.042850064006655509685 -0.010951970825394846329 0.70945790542568643033 -0.028690461349538416008 0.022661063843777272397 -4.8184385881660958262 -0.76912762724405314696 -0.02491498358030384136 -0.057710710194227181347 -0.004620296941866449715];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 0.00111018595614765;
y1_step1.xoffset = 1025.5;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
