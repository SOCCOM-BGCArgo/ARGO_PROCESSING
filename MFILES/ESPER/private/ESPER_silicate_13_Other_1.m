function [Y,Xf,Af] = ESPER_silicate_13_Other_1(X,~,~)
%ESPER_SILICATE_13_OTHER_1 neural network simulation function.
%
% Auto-generated by MATLAB, 15-Feb-2021 18:30:42.
% 
% [Y] = ESPER_silicate_13_Other_1(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 7xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-0.999999984769129;-0.999998793562952;-77.961;0;29.715;-0.04979;-138.904784718693];
x1_step1.gain = [1.00003298043486;1.00000060321889;0.0138606862425759;0.000266418009857466;0.193068829037552;0.568038194888224;0.0042772329208737];
x1_step1.ymin = -1;

% Layer 1
b1 = [-1.6681722354929562346;0.83415781002459288285;1.1456924500654310783;1.9238631753226291821;-2.0217893259966452923;-1.0105236500953043155;4.9701759370970872709;-6.9122697946178934814;1.1147820143189512976;-0.39761180682069241499;-6.672340622709772795;-0.37287050561417950378;-0.30767289831293975766;1.936221737057320702;0.80679383516108460483;-0.38496077511611731525;-6.6370564067117232554;-1.1157483233311700221;-0.20941500888116540424;-0.66095551932529261752;2.3807025458201578338;-0.16639106443851045536;1.4364713493423428847;-1.7664064765156330949;-0.35959549847615213114;1.4899811724860836382;1.7921377966808325066;4.1492388860381526072;-8.2188599062382383664;0.13420306512360793971;-6.6830029818279541587;-1.4152228811618983162;1.6330993291993820549;-4.0633470540504976753;1.0956480633219853882;-2.3777699713390880731;0.50866394088328192868;2.7002928386066211708;-4.8202290050077856165;3.7971747249986718131];
IW1_1 = [-0.07991899553863106298 -0.436435074745495033 1.6705274845340893908 -0.79064134607714264824 3.7409844686082998066 -0.60744183773606941212 1.5437552212270277963;-1.2188390815442637916 2.9037905565483139725 -0.35674035582259144839 -0.1540707745790740324 1.3245683739128903955 -0.012607408736002422706 -0.98276414752479657189;-0.27743162182235098223 -0.20355212788146698211 -0.032135932211492121424 0.34218500204440432944 -1.0535180495030327386 -0.43422373403866981745 -0.39079444168466614951;-3.0567515197285910489 -1.2336134035829351419 -1.136384058241237005 -0.78539518974778499416 -1.0632357744648786024 0.066882337822174314779 -1.273183895864367754;2.3246780986870239083 -0.34194721977957970305 1.5132411315955831554 0.8483420752330281811 1.2349624468769291319 -0.14636750542528240149 1.7110876133795231979;0.37202376604162129548 0.18706242221197699749 0.21419216640869750967 -0.15704818763627811928 0.85732911957221691335 0.40047125757745249963 0.33299771756065882355;-2.04064663611606667 -1.2784389117012773252 4.1621872489585829413 2.04298081505940754 1.7897760573181398236 -0.065527848047431350165 -1.2995980777937514716;1.4009582896070928992 -0.47444956020361406246 -10.179446594712244334 0.97114232394665855885 2.3674757572114564219 0.73686831045967782217 -1.097611552325384876;-0.31440978938668473486 1.4440199298326581445 0.19716658337528975009 0.4442794178259207305 0.50606361026998847308 -0.14533406039670887511 -0.17995877261012649395;2.0471196091642633874 2.6162158457278423818 2.3686537289448326149 2.1621485364787589312 0.88886711536270024414 1.4378969064132292033 0.36245273619225581996;1.1663205417120601215 -0.33845415217898966453 -9.590218215210157382 1.0475300826149098743 2.1553786877515483944 0.78969214288527700418 -1.0214418941708995892;-10.59930699776893448 -5.9924548803946970921 -0.94214509415383540514 -0.2821309231442004628 4.7275951263586639683 0.87520854187778707178 0.90351573634114590305;-0.16157361706748615826 0.10423300808009500207 -0.66917129336701164366 -0.14181939238268057024 4.118807392450742455 1.1434530165024976434 -0.51108775919376836505;0.08194551274700039023 -0.059775915768739140699 1.6346257671437982584 1.4440244506972990113 -4.2254570977793806108 -0.62552587024566685958 0.51680265984887174824;0.18261586544120078646 -0.15673888555350740104 1.512456527645326565 -0.51535742654126870388 -1.0372609562957566531 -0.89166925450122846986 -2.245916269332840276;-0.13919002421753701171 0.10465311546834707435 -0.47268712075644014892 -0.23210108431755344105 3.9870653307986652081 1.1078334646650762618 -0.43780072175486423047;1.259173782976421796 -0.39174984260422723858 -9.6736845729482823231 0.98916918037877366032 2.2348851977128481039 0.76215891378767641751 -1.0625117899262588317;-0.4613712098712225429 -0.61851588287309922087 2.1191521212815143116 -1.9784165519599308247 -3.274413879174160158 -1.4210004583396587119 3.1238272088735161702;0.045757915187375687582 -0.034408005724524091951 0.44222647831360428761 -2.0380024266464480398 -0.18990122331992320692 0.048966580206583100454 -2.903414858393277509;-3.4912611695862389993 1.6041868196320900886 -4.2392949478335362201 -2.3624944837183630142 -2.5944019161639908511 -1.3274627223302650769 -1.0732682252158112224;-0.23043241414075477103 0.19159618414795304142 -1.979862824720340031 3.4528146072593379756 4.6636181068800945937 1.7470244246588604309 -0.75241164064757459773;-0.37444214327597408198 0.098990312249710388226 1.814269876657654823 4.6904558440893167059 -0.68477771982369517456 4.2615544410871661896 -1.6949373885852447863;3.4689406043354504838 -0.27672265693544878529 2.0675253750276603171 0.99696174213310440049 0.27623499399608503202 0.51679156458095776294 -0.93891062755018095398;-1.1024688401675235561 2.1827080124344657719 -1.8697332316250410145 -2.0518761663992903799 -2.0463507394478894774 -2.9259702030713659049 3.8663509099255466417;-0.026816454045279193574 0.033476756566459160702 -0.12806840342350164774 -1.2981205517114169368 -2.9327248474649083576 -0.19977949765098335089 -1.2298484173016890342;1.3274708231109562107 0.99035173572566603806 0.1537311683617470226 0.30191896799502032644 -0.76145392418612878327 -0.39289667133439293289 0.021409268735486344098;-0.29062587935157557784 0.15956934523046167884 -1.626280359201591974 2.6573484562193825376 7.405331231659349811 2.002544183013046375 1.3714169462728333926;-0.67626264779046096898 7.1238102889390901851 6.6643529959484464342 -0.60778892970225950609 0.11455382001125397062 -0.39390073018892879375 1.010043641311918039;-1.8984249342320671516 1.1977904023652783394 -6.7851570368776430442 1.757665887215987377 16.555747279430129026 7.9301265663393945005 -6.4271887586777225465;-2.2210497051845936589 -2.0057727532314273411 -0.25200220959744423777 0.57362602184659972071 2.7613464121591402289 0.69624929389597889351 -0.14234871584677830092;-2.9036724019443185263 -1.8120977690852078101 -8.6080847140304186382 -4.1014632112748197201 -9.7633536173303472339 -3.8849377556020745494 -2.3242565763875706608;-1.3498270430791314833 -1.0502170825234833362 -0.048448228235580662049 -0.023682886204796801261 0.93998501518884147732 0.42181484395730867165 -0.067240520682522161855;-0.41189094452466779028 0.10703253125370869314 0.46256840468486243312 5.4887254179788795838 7.9068757851395092828 0.45604823433357699614 0.90862450888258594617;-0.33895993690739756321 0.70033146415857583378 1.142069623030247616 5.9388878717441508925 -12.856851462808013054 2.8886024709313007364 3.7057338138259034999;0.37428096804618610216 0.64278689398472854677 0.30925379135343100678 0.97532387358000172117 -0.012779340580378821535 -0.44609774296065091148 -0.39506266897826691764;-0.23128179592020287059 -1.4002275738657579129 -0.59983183530701611463 -0.54961763064396396139 -2.2634230169376938768 0.58898153322155821776 -1.8644802381451879292;0.11342484808134639662 0.052538554934713072031 -0.71464813945368155235 -0.1974249368905792168 -3.3758285987743414935 -0.082962439657064374066 -0.87192117464565599416;0.071236162734913344163 -0.80201438368093469489 -3.3827138756065107117 2.3944333807184543517 0.17520444404268431526 -1.7813688057525591812 0.89486663283316247863;1.9688462861584863361 1.2203017275945626796 -4.0176257078814519019 -1.9917555262188526566 -1.975037158011907934 -0.0045111012712509921535 1.3300303528153518684;1.2675613041580220397 3.5118893477039976325 -0.82309643250170960727 0.96214030602257316627 -15.153175340495083745 -2.8396161751696493702 -0.20016496275944287153];

% Layer 2
b2 = -0.69560892036513843895;
LW2_1 = [0.41885372339651094631 -0.16857937233089542728 10.11155115015109196 0.32388911303676731768 -0.54288874235865847151 10.537365837676796687 2.5147360471844701912 -4.743452767561019634 0.79641322783645063232 -0.048710167852852911952 -4.3400672738702876785 0.020079522297347336679 -6.33138487613348655 -0.71939539989676670739 -0.4944189876945033757 6.5561541598706227774 9.2511889319903701789 0.14812116348355569562 0.52865067034835699911 0.042085705109118708156 0.27577092660693025561 -0.13423674370758445495 -0.10620243741650399472 0.031128456150072265907 -1.9901397616198870377 2.1666713393591554571 -0.26203138331214753665 -0.029272023811435364526 -0.21498070965789770059 0.11768537537462384068 -0.021557293161371969548 1.9138313217776570241 -0.073831970284840162111 -0.12409834462047926451 -0.63222728189964050305 0.28344672267845838487 1.9745073142475988437 0.077172933560175016598 2.6174317092898058412 0.056058043851588253148];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 0.00819772922900357;
y1_step1.xoffset = -2.02;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
