function [Y,Xf,Af] = ESPER_DIC_6_Other_1(X,~,~)
%ESPER_DIC_6_OTHER_1 neural network simulation function.
%
% Auto-generated by MATLAB, 15-Feb-2021 18:30:12.
% 
% [Y] = ESPER_DIC_6_Other_1(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 7xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-1;-0.999998793562952;-77.961;0;29.715;-2.08184650291172;-0.9];
x1_step1.gain = [1.00000000274156;1.00000063368067;0.0138606862425759;0.0002963841138115;0.248478071810163;0.0588359962254402;0.0419287211740042];
x1_step1.ymin = -1;

% Layer 1
b1 = [-1.7384075827800424818;-3.4178804317181530337;-32.767791466457964589;17.102467461765250789;0.49741669918617315016;-0.65893776381332669345;-3.8763276216224813453;1.4282428630405592518;2.1862151087611398914;-3.419197662317862374;0.26548373983723699832;1.3366528984935925894;-8.4465705012323617495;-0.29248546324874696856;-0.97672542144750296167;2.8896079822024889339;-0.26659802904953427971;8.7206867257870417376;19.885725971896150099;0.39246201894066762295;-3.3146966426426969221;-25.764894995257812127;0.79373666092165573449;0.4798627008706907171;-0.8437818659618772088;3.1394944882320143797;0.81379159081790553021;-0.15016593215131668337;0.41668057606686514927;-1.7314060406039475382;14.635911456060226143;-3.4068408506311858019;3.0793555658468281244;-3.6934831923582258639;1.9453422104575828211;3.5483504450340568326;48.054988947498642915;-11.859985334997848128;24.672020430256687007;-2.4894773180410898483];
IW1_1 = [-0.009773838234600448413 -0.027933558893958869429 -0.43918880238820123818 0.38473787687713023598 1.3956419552382726135 -2.0095237852887213315 -0.44171763350452064589;2.3584339084822412147 -3.5425159982414187176 -4.3598585316554503422 -1.2270801958784236518 5.8772430640716537553 -4.0974545478311075186 1.772575932202858251;-9.4759645617228738246 11.154192309226898416 -10.067723487335712207 -19.636563725180145923 58.201820033545146771 -12.59299134319799407 -1.4299497215333414335;-4.9617241515756784764 2.0354909070132327642 -25.796248341320744402 5.4312089599523707406 -26.382406006400763943 34.059641997724995122 3.589617453827166571;-0.18319762006369985641 -0.22043666190560989859 1.4244235388258368324 0.34620981510299553285 2.4419838308815688954 2.2083869643949909367 1.9360321149852550704;0.032193789149281462625 0.18285858382326164451 0.29174466931348158605 -0.2980586406749250461 -2.1484030336018036245 -0.39119994674090868836 0.22693018995566011098;-5.2614431532167831307 -4.6325042193314693861 15.365343699691836221 -20.598087295360695492 5.8959691595042640344 21.538670901867352114 28.742511677400138126;-0.33854744515986051612 0.82586396733042366503 0.48194294866702835911 -0.21488083646618896805 -0.27549193648845093918 -0.51058383057096246027 1.1074619833046754902;1.523932858994887285 0.35206605524505824034 -2.5195475804559044342 -1.0901022918840401754 -2.9282241439228071656 -5.0448781375168367802 -3.7518643388164134578;1.5498098228008572175 -0.60520877841989850765 0.59936756061109619509 1.5152607939455742248 -1.9970762041303764533 -6.2363346681401896632 -1.1143139951581850777;-0.31169270935314152826 -1.4490409306045566318 0.40701304283295292041 0.12973995958908340898 -0.63050365653307527403 -0.46106962656977962256 -0.43515537505571094679;0.28612034668799901649 2.443633970149240664 -0.78443668508825070695 0.093836912780754899721 -0.53829181862060537789 0.042314394209040248618 0.33318932186939265172;2.3272100136410149851 1.2362933721716509172 -3.6518109670918597054 0.33262560145808839351 0.62038401417898980661 -6.2462069564420543699 8.0073397233183083443;-1.0187281724544909878 0.61127263558772704233 1.8258191605658473655 0.35858597099273947784 0.47639769560796996206 -1.7275369996591534161 -1.0406272354161218985;-0.10410383105376856683 0.18655832911688080555 0.94237449130382833218 -0.28612999206602546254 -2.2665948325868794377 -0.16299403636980397403 0.054707551521632084846;3.0741026797980310903 -0.3986071140869023588 -1.4292600444259637715 -1.1876977586482280191 -4.8747071441156935023 -2.3509487205699510781 -3.0069277436587751318;-0.27803433676604799585 0.093317784165155542864 0.40344121786634035143 0.028122254008803443392 -0.44175931695870451765 -0.0029295708622832537446 -0.18892553925268365522;-3.7239095454278698938 -5.5744168856752356334 0.32820802199273890754 3.735486365821408139 -9.1794415255946706367 3.3151861478153006324 7.6746330255023744726;-2.5786513939742774504 9.3477698315171977583 -16.54238866198690161 27.74859570270552922 -22.647038065132900186 15.106502807963540391 11.345763699590127871;0.65889442988811453006 -0.16143098541064743179 5.5503130300124077223 0.34760156688945176295 -3.8365945086742345715 1.0579707867494991813 -0.54559664534220020382;-6.2801618559931382535 4.7989249104545308455 -4.1311402379116586303 1.3752314721421265986 -2.617395220440668524 6.3040021287816250251 -3.1366450675424419892;-38.156277516507117298 25.070572686581410693 -28.425937618418863906 -4.6001877890182072406 -90.087434173275354965 -8.8045363948933239584 -22.729127362945618529;-0.22335848534780780583 0.16023394355714559723 -8.8586742706318588603 -0.7137495013874185501 2.7705788768582571002 -0.51960936799553503196 -2.063638547200697726;0.035362666725909479293 -0.51024790085355153924 -0.042873758940121714511 0.11226856888022812564 0.60002273664673455578 0.20059733835117893319 -0.35166884302361783865;-0.82010875145065265102 1.7888969345667895539 -0.038130654171968925148 -0.65127006962909739229 6.139504578238230259 4.2866076114942908148 0.42780722056744774351;-0.43372591757227518805 0.0017235084638197051971 -1.1827594473664477803 -0.036484537926829929688 -6.9668009279004978751 3.9196374992765585787 0.8425525992428140043;-4.7974733776294113952 15.085899730400411656 -6.0193385389707048105 -17.304447062729249041 -62.408267274208867548 8.367941864358812154 6.035644468184123923;-0.19480290776399611374 -0.62703210695305178213 0.12403535118655269198 0.155177849905221793 -0.1220629087400708912 -0.49191489225362144966 -0.43319870670554100345;0.67380477600758559298 -0.16234544720181826039 5.4250088287428246403 0.36821209074426991537 -3.7829380481590311192 1.0534199251026310495 -0.50163803865257494685;-1.5469931812555570705 -1.1740550140330190398 -0.73429929849064090597 0.019962658942022933062 -4.1077943222790587186 -2.7356660093100320097 -0.78075356718921506971;0.69386559109516987576 3.3444604480250355039 -6.200050851756237158 7.3715960473619563942 -30.861863794583804577 7.5414208532039888055 -1.2757734691950384232;-0.82383053960867580479 0.68186219547325310764 2.0353497601486512103 -0.46737629445121292582 11.528545022390433772 3.1627172382192210165 2.3271286784471305609;0.24716096707232246277 -0.57067354372619716329 -4.8352329524674475536 4.8273076438154829404 11.727011208909500439 3.2363548660742469387 2.8291032489838094932;4.4233930587819241254 -1.2957973864661114227 4.4259381607402659142 2.258325250225127423 21.996734912053895528 5.2180438926796952614 7.4566619606864579239;1.0115315306697671982 0.93046939207994039389 0.2544776438729286494 0.10310128653538985777 -7.7203167165458443932 -2.2493915904672623363 -0.48019702282505111191;0.95425464478238697374 -0.29189088589128836526 1.3431698698738629982 1.8482266436316858726 -11.838078496700262576 -1.3239819515994806221 -1.9363156844558462311;-7.7565922877934694313 2.5452086919904104434 3.8167856428964066495 -5.4982078885617369224 -63.684360839068283155 17.006790355531418157 -36.279027653477108117;8.0219000216210023524 -5.6720742001289803369 4.5438009302139485968 -15.305501226184711427 3.575550025282965283 -5.7626192952259103208 -1.5368127023979996082;-2.7411797457795237243 4.8073653043175337274 -4.8769126380442786584 -7.7672273599665713206 93.788308822388870567 47.274579817497112799 -14.402482596665752368;-0.087610554249482983091 -0.011339096946442245653 -0.49411889190681784756 0.37149647296039089994 1.5471123776880639777 -3.0736190969543142337 -0.3935561940469760045];

% Layer 2
b2 = -0.16988035898588638162;
LW2_1 = [-1.294284751031159475 -0.021913708188705478819 -0.0027024768994262701044 0.007442117304567889835 0.17579503961083908781 -1.0727352373645999695 0.006191709479372610285 0.35680455707706482116 -0.08830136755990448949 0.037716933842214639405 -0.33601924769210761434 0.13440262174167996734 0.017206412952577035402 0.11241779598925975836 0.92361035874685304403 -0.062362188360211109894 -1.9216955772299046945 0.011986112063660146754 0.0052963716211561727432 2.1979464170270488488 0.012838367461903336594 0.0041357600860857232292 -0.034211326782465578678 -1.2669184709370724384 -0.059329709243066408586 -0.10057468609801452353 -0.0037876838581555557529 1.6010379685893361135 -2.207191850851774273 -0.062249096425145825084 0.010039595040778323543 -0.044574813070788858738 -0.034413561174668878817 -0.01147545526863108685 -0.057746158314802772948 -0.04083319698840948142 -0.0090022720584156459833 -0.0077281069835591865644 -0.0037557695711116483722 0.67386995062622379038];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 0.00314743155299998;
y1_step1.xoffset = 1774.26765577007;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
